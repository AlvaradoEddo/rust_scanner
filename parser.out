Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BRACKETL
    BRACKETR
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTAINS_SLICE
    CONTIN
    CRATE
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    ERRORPROP
    EXTERN
    FUNCTION
    GET_SLICE
    IMPL
    LESSEQ
    LOOP
    MATCH
    MAYOR
    MAYORIGUAL
    MOD
    MOVE
    NOT
    NUMBER
    OR
    POP_VEC
    PRINT
    PUSH_VEC
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    VECTOR
    WHERE
    WHILE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> prints
Rule 3     rust -> hashset
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     rust -> for_loop
Rule 8     rust -> struct_s
Rule 9     rust -> asig_mate
Rule 10    asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 11    asignacion -> other_operators ENDLINE
Rule 12    other_operators -> VARIABLE oper_asig expresion
Rule 13    declarador -> VARIABLE
Rule 14    declarador -> let_asig
Rule 15    let_asig -> LET var_tipo
Rule 16    let_asig -> LET MUT var_tipo
Rule 17    var_tipo -> VARIABLE
Rule 18    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 19    tipos -> DATATYPES
Rule 20    tipos -> NUMDATATYPES
Rule 21    oper_asig -> ASIGNAR
Rule 22    oper_asig -> PLUSEQ
Rule 23    oper_asig -> MINUSEQ
Rule 24    oper_asig -> STAREQ
Rule 25    oper_asig -> SLASHEQ
Rule 26    expresion -> STRING
Rule 27    expresion -> U8
Rule 28    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 29    print_expresion -> STRING
Rule 30    print_expresion -> STRING COMMA print_args
Rule 31    print_args -> print_datos COMMA print_args
Rule 32    print_args -> print_datos
Rule 33    print_datos -> expresion
Rule 34    hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
Rule 35    hashfunc -> hashset_insert
Rule 36    hashfunc -> hashset_union
Rule 37    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 38    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 39    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 40    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 41    if_type -> IF
Rule 42    if_type -> ELSE IF
Rule 43    if_type -> ELSE
Rule 44    validations -> comparison
Rule 45    validations -> comparison ANDAND validations
Rule 46    validations -> comparison OROR validations
Rule 47    comparison -> VARIABLE signo_comp VARIABLE
Rule 48    comparison -> VARIABLE signo_comp U8
Rule 49    comparison -> U8 signo_comp VARIABLE
Rule 50    signo_comp -> GREATER
Rule 51    signo_comp -> LESST
Rule 52    signo_comp -> GREATEQ
Rule 53    signo_comp -> EQUAL
Rule 54    signo_comp -> DIFFERENT
Rule 55    f_comparacion -> U8 DOT DOT U8
Rule 56    f_comparacion -> VARIABLE
Rule 57    for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
Rule 58    struct_s -> STRUCT sent_stru
Rule 59    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos
Rule 60    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 61    argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 62    argumentos_tipo -> tipos
Rule 63    argumentos_tipo -> tipos COMMA argumentos_tipo
Rule 64    sent_stru -> UNIT ENDLINE
Rule 65    sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
Rule 66    sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER
Rule 67    asig_mate -> VARIABLE ASIGNAR op_mat
Rule 68    asig_mate -> LET VARIABLE ASIGNAR op_mat
Rule 69    asig_mate -> LET MUT VARIABLE ASIGNAR op_mat
Rule 70    op_mat -> art_exp
Rule 71    op_mat -> VARIABLE art_exp
Rule 72    op_mat -> U8 art_exp
Rule 73    art_exp -> VARIABLE signo_arit VARIABLE
Rule 74    art_exp -> U8 signo_arit VARIABLE
Rule 75    art_exp -> VARIABLE signo_arit U8
Rule 76    art_exp -> U8 signo_arit U8
Rule 77    signo_arit -> MAS
Rule 78    signo_arit -> MENOS
Rule 79    signo_arit -> MULT
Rule 80    signo_arit -> DIVISION
Rule 81    signo_arit -> MODULO

Terminals, with rules where they appear

AND                  : 38
ANDAND               : 45
ARROW                : 
AS                   : 
ASIGNAR              : 10 21 34 39 67 68 69
ASIGNATION_TYPE      : 18 59 60 61
ASYNC                : 
AWAIT                : 
BRACKETL             : 
BRACKETR             : 
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 30 31 60 61 63
CONST                : 
CONTAINS_SLICE       : 
CONTIN               : 
CRATE                : 
DATATYPES            : 19
DIFFERENT            : 54
DIVISION             : 80
DOLLAR               : 
DOT                  : 37 38 55 55
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 42 43
ENDLINE              : 10 11 28 34 37 38 39 64 65
ENUM                 : 
EQUAL                : 53
ERRORPROP            : 
EXTERN               : 
FOR                  : 57
FUNCTION             : 
GET_SLICE            : 
GREATEQ              : 52
GREATER              : 50
HASHSET              : 34
IF                   : 41 42
IMPL                 : 
IN                   : 57
INSERT_HASH          : 37
LESSEQ               : 
LESST                : 51
LET                  : 15 16 34 68 69
LLAVEDER             : 40 57 66
LLAVEIZ              : 40 57 66
LOOP                 : 
LPAREN               : 28 37 38 65
MAS                  : 77
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 78
MINUSEQ              : 23
MOD                  : 
MODULO               : 81
MOVE                 : 
MULT                 : 79
MUT                  : 16 34 69
NEWFUNC              : 34
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 20
OR                   : 
OROR                 : 46
PATHSEP              : 34
PLUSEQ               : 22
POP_VEC              : 
PRINT                : 
PRINTS               : 28
PUB                  : 61
PUSH_VEC             : 
REF                  : 
RETURN               : 
RPAREN               : 28 37 38 65
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 25
STAREQ               : 24
STATIC               : 
STRING               : 26 29 30
STRUCT               : 58
SUPER                : 
TRAIT                : 
TUPLE                : 65
TYPE                 : 
U8                   : 27 48 49 55 55 72 74 75 76 76
UNION_HASH           : 38
UNIT                 : 64
UNSAFE               : 
USE                  : 
VARIABLE             : 12 13 17 18 34 37 38 38 47 47 48 49 56 57 59 60 61 66 67 68 69 71 73 73 74 75
VECTOR               : 
WHERE                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argumentos_juntos    : 60 61 66
argumentos_tipo      : 63 65
art_exp              : 70 71 72
asig_mate            : 9
asignacion           : 1
comparison           : 44 45 46
conditional          : 5 39
conditional_asigned  : 6
declarador           : 10 39
expresion            : 10 12 33 37
f_comparacion        : 57
for_loop             : 7
hashfunc             : 4
hashset              : 3
hashset_insert       : 35
hashset_union        : 36
if_type              : 40
let_asig             : 14
op_mat               : 67 68 69
oper_asig            : 12
other_operators      : 11
print_args           : 30 31
print_datos          : 31 32
print_expresion      : 28
prints               : 2
rust                 : 40 57 0
sent_stru            : 58
signo_arit           : 73 74 75 76
signo_comp           : 47 48 49
struct_s             : 8
tipos                : 18 59 60 61 62 63
validations          : 40 45 46
var_tipo             : 15 16

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . asig_mate
    (10) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (11) asignacion -> . other_operators ENDLINE
    (28) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (34) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (35) hashfunc -> . hashset_insert
    (36) hashfunc -> . hashset_union
    (40) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (39) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (57) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (58) struct_s -> . STRUCT sent_stru
    (67) asig_mate -> . VARIABLE ASIGNAR op_mat
    (68) asig_mate -> . LET VARIABLE ASIGNAR op_mat
    (69) asig_mate -> . LET MUT VARIABLE ASIGNAR op_mat
    (13) declarador -> . VARIABLE
    (14) declarador -> . let_asig
    (12) other_operators -> . VARIABLE oper_asig expresion
    (37) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (38) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (41) if_type -> . IF
    (42) if_type -> . ELSE IF
    (43) if_type -> . ELSE
    (15) let_asig -> . LET var_tipo
    (16) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 13
    LET             shift and go to state 14
    FOR             shift and go to state 19
    STRUCT          shift and go to state 20
    VARIABLE        shift and go to state 15
    IF              shift and go to state 22
    ELSE            shift and go to state 23

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    asig_mate                      shift and go to state 10
    declarador                     shift and go to state 11
    other_operators                shift and go to state 12
    hashset_insert                 shift and go to state 16
    hashset_union                  shift and go to state 17
    if_type                        shift and go to state 18
    let_asig                       shift and go to state 21

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> prints .

    $end            reduce using rule 2 (rust -> prints .)
    LLAVEDER        reduce using rule 2 (rust -> prints .)


state 4

    (3) rust -> hashset .

    $end            reduce using rule 3 (rust -> hashset .)
    LLAVEDER        reduce using rule 3 (rust -> hashset .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) rust -> for_loop .

    $end            reduce using rule 7 (rust -> for_loop .)
    LLAVEDER        reduce using rule 7 (rust -> for_loop .)


state 9

    (8) rust -> struct_s .

    $end            reduce using rule 8 (rust -> struct_s .)
    LLAVEDER        reduce using rule 8 (rust -> struct_s .)


state 10

    (9) rust -> asig_mate .

    $end            reduce using rule 9 (rust -> asig_mate .)
    LLAVEDER        reduce using rule 9 (rust -> asig_mate .)


state 11

    (10) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (39) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 24


state 12

    (11) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 25


state 13

    (28) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 26


state 14

    (34) hashset -> LET . MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (68) asig_mate -> LET . VARIABLE ASIGNAR op_mat
    (69) asig_mate -> LET . MUT VARIABLE ASIGNAR op_mat
    (15) let_asig -> LET . var_tipo
    (16) let_asig -> LET . MUT var_tipo
    (17) var_tipo -> . VARIABLE
    (18) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 27
    VARIABLE        shift and go to state 28

    var_tipo                       shift and go to state 29

state 15

    (67) asig_mate -> VARIABLE . ASIGNAR op_mat
    (13) declarador -> VARIABLE .
    (12) other_operators -> VARIABLE . oper_asig expresion
    (37) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (38) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (21) oper_asig -> . ASIGNAR
    (22) oper_asig -> . PLUSEQ
    (23) oper_asig -> . MINUSEQ
    (24) oper_asig -> . STAREQ
    (25) oper_asig -> . SLASHEQ

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 30
    DOT             shift and go to state 32
    PLUSEQ          shift and go to state 33
    MINUSEQ         shift and go to state 34
    STAREQ          shift and go to state 35
    SLASHEQ         shift and go to state 36

  ! ASIGNAR         [ reduce using rule 13 (declarador -> VARIABLE .) ]

    oper_asig                      shift and go to state 31

state 16

    (35) hashfunc -> hashset_insert .

    $end            reduce using rule 35 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 35 (hashfunc -> hashset_insert .)


state 17

    (36) hashfunc -> hashset_union .

    $end            reduce using rule 36 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 36 (hashfunc -> hashset_union .)


state 18

    (40) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (44) validations -> . comparison
    (45) validations -> . comparison ANDAND validations
    (46) validations -> . comparison OROR validations
    (47) comparison -> . VARIABLE signo_comp VARIABLE
    (48) comparison -> . VARIABLE signo_comp U8
    (49) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 39
    U8              shift and go to state 40

    validations                    shift and go to state 37
    comparison                     shift and go to state 38

state 19

    (57) for_loop -> FOR . VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 41


state 20

    (58) struct_s -> STRUCT . sent_stru
    (64) sent_stru -> . UNIT ENDLINE
    (65) sent_stru -> . TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
    (66) sent_stru -> . VARIABLE LLAVEIZ argumentos_juntos LLAVEDER

    UNIT            shift and go to state 43
    TUPLE           shift and go to state 44
    VARIABLE        shift and go to state 45

    sent_stru                      shift and go to state 42

state 21

    (14) declarador -> let_asig .

    ASIGNAR         reduce using rule 14 (declarador -> let_asig .)


state 22

    (41) if_type -> IF .

    VARIABLE        reduce using rule 41 (if_type -> IF .)
    U8              reduce using rule 41 (if_type -> IF .)


state 23

    (42) if_type -> ELSE . IF
    (43) if_type -> ELSE .

    IF              shift and go to state 46
    VARIABLE        reduce using rule 43 (if_type -> ELSE .)
    U8              reduce using rule 43 (if_type -> ELSE .)


state 24

    (10) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (39) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (26) expresion -> . STRING
    (27) expresion -> . U8
    (40) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (41) if_type -> . IF
    (42) if_type -> . ELSE IF
    (43) if_type -> . ELSE

    STRING          shift and go to state 49
    U8              shift and go to state 50
    IF              shift and go to state 22
    ELSE            shift and go to state 23

    expresion                      shift and go to state 47
    conditional                    shift and go to state 48
    if_type                        shift and go to state 18

state 25

    (11) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 11 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 11 (asignacion -> other_operators ENDLINE .)


state 26

    (28) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (29) print_expresion -> . STRING
    (30) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 52

    print_expresion                shift and go to state 51

state 27

    (34) hashset -> LET MUT . VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (69) asig_mate -> LET MUT . VARIABLE ASIGNAR op_mat
    (16) let_asig -> LET MUT . var_tipo
    (17) var_tipo -> . VARIABLE
    (18) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 53

    var_tipo                       shift and go to state 54

state 28

    (68) asig_mate -> LET VARIABLE . ASIGNAR op_mat
    (17) var_tipo -> VARIABLE .
    (18) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 55
    ASIGNATION_TYPE shift and go to state 56

  ! ASIGNAR         [ reduce using rule 17 (var_tipo -> VARIABLE .) ]


state 29

    (15) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 15 (let_asig -> LET var_tipo .)


state 30

    (67) asig_mate -> VARIABLE ASIGNAR . op_mat
    (21) oper_asig -> ASIGNAR .
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE art_exp
    (72) op_mat -> . U8 art_exp
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

  ! shift/reduce conflict for U8 resolved as shift
    STRING          reduce using rule 21 (oper_asig -> ASIGNAR .)
    VARIABLE        shift and go to state 57
    U8              shift and go to state 60

  ! U8              [ reduce using rule 21 (oper_asig -> ASIGNAR .) ]

    op_mat                         shift and go to state 58
    art_exp                        shift and go to state 59

state 31

    (12) other_operators -> VARIABLE oper_asig . expresion
    (26) expresion -> . STRING
    (27) expresion -> . U8

    STRING          shift and go to state 49
    U8              shift and go to state 50

    expresion                      shift and go to state 61

state 32

    (37) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (38) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    INSERT_HASH     shift and go to state 62
    UNION_HASH      shift and go to state 63


state 33

    (22) oper_asig -> PLUSEQ .

    STRING          reduce using rule 22 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 22 (oper_asig -> PLUSEQ .)


state 34

    (23) oper_asig -> MINUSEQ .

    STRING          reduce using rule 23 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 23 (oper_asig -> MINUSEQ .)


state 35

    (24) oper_asig -> STAREQ .

    STRING          reduce using rule 24 (oper_asig -> STAREQ .)
    U8              reduce using rule 24 (oper_asig -> STAREQ .)


state 36

    (25) oper_asig -> SLASHEQ .

    STRING          reduce using rule 25 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 25 (oper_asig -> SLASHEQ .)


state 37

    (40) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 64


state 38

    (44) validations -> comparison .
    (45) validations -> comparison . ANDAND validations
    (46) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 44 (validations -> comparison .)
    ANDAND          shift and go to state 65
    OROR            shift and go to state 66


state 39

    (47) comparison -> VARIABLE . signo_comp VARIABLE
    (48) comparison -> VARIABLE . signo_comp U8
    (50) signo_comp -> . GREATER
    (51) signo_comp -> . LESST
    (52) signo_comp -> . GREATEQ
    (53) signo_comp -> . EQUAL
    (54) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 68
    LESST           shift and go to state 69
    GREATEQ         shift and go to state 70
    EQUAL           shift and go to state 71
    DIFFERENT       shift and go to state 72

    signo_comp                     shift and go to state 67

state 40

    (49) comparison -> U8 . signo_comp VARIABLE
    (50) signo_comp -> . GREATER
    (51) signo_comp -> . LESST
    (52) signo_comp -> . GREATEQ
    (53) signo_comp -> . EQUAL
    (54) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 68
    LESST           shift and go to state 69
    GREATEQ         shift and go to state 70
    EQUAL           shift and go to state 71
    DIFFERENT       shift and go to state 72

    signo_comp                     shift and go to state 73

state 41

    (57) for_loop -> FOR VARIABLE . IN f_comparacion LLAVEIZ rust LLAVEDER

    IN              shift and go to state 74


state 42

    (58) struct_s -> STRUCT sent_stru .

    $end            reduce using rule 58 (struct_s -> STRUCT sent_stru .)
    LLAVEDER        reduce using rule 58 (struct_s -> STRUCT sent_stru .)


state 43

    (64) sent_stru -> UNIT . ENDLINE

    ENDLINE         shift and go to state 75


state 44

    (65) sent_stru -> TUPLE . LPAREN argumentos_tipo RPAREN ENDLINE

    LPAREN          shift and go to state 76


state 45

    (66) sent_stru -> VARIABLE . LLAVEIZ argumentos_juntos LLAVEDER

    LLAVEIZ         shift and go to state 77


state 46

    (42) if_type -> ELSE IF .

    VARIABLE        reduce using rule 42 (if_type -> ELSE IF .)
    U8              reduce using rule 42 (if_type -> ELSE IF .)


state 47

    (10) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 78


state 48

    (39) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 79


state 49

    (26) expresion -> STRING .

    ENDLINE         reduce using rule 26 (expresion -> STRING .)
    COMMA           reduce using rule 26 (expresion -> STRING .)
    RPAREN          reduce using rule 26 (expresion -> STRING .)


state 50

    (27) expresion -> U8 .

    ENDLINE         reduce using rule 27 (expresion -> U8 .)
    COMMA           reduce using rule 27 (expresion -> U8 .)
    RPAREN          reduce using rule 27 (expresion -> U8 .)


state 51

    (28) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 80


state 52

    (29) print_expresion -> STRING .
    (30) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 29 (print_expresion -> STRING .)
    COMMA           shift and go to state 81


state 53

    (34) hashset -> LET MUT VARIABLE . ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (69) asig_mate -> LET MUT VARIABLE . ASIGNAR op_mat
    (17) var_tipo -> VARIABLE .
    (18) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 82
    ASIGNATION_TYPE shift and go to state 56

  ! ASIGNAR         [ reduce using rule 17 (var_tipo -> VARIABLE .) ]


state 54

    (16) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 16 (let_asig -> LET MUT var_tipo .)


state 55

    (68) asig_mate -> LET VARIABLE ASIGNAR . op_mat
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE art_exp
    (72) op_mat -> . U8 art_exp
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    VARIABLE        shift and go to state 57
    U8              shift and go to state 60

    op_mat                         shift and go to state 83
    art_exp                        shift and go to state 59

state 56

    (18) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (19) tipos -> . DATATYPES
    (20) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 85
    NUMDATATYPES    shift and go to state 86

    tipos                          shift and go to state 84

state 57

    (71) op_mat -> VARIABLE . art_exp
    (73) art_exp -> VARIABLE . signo_arit VARIABLE
    (75) art_exp -> VARIABLE . signo_arit U8
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    VARIABLE        shift and go to state 87
    U8              shift and go to state 90
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    MULT            shift and go to state 93
    DIVISION        shift and go to state 94
    MODULO          shift and go to state 95

    art_exp                        shift and go to state 88
    signo_arit                     shift and go to state 89

state 58

    (67) asig_mate -> VARIABLE ASIGNAR op_mat .

    $end            reduce using rule 67 (asig_mate -> VARIABLE ASIGNAR op_mat .)
    LLAVEDER        reduce using rule 67 (asig_mate -> VARIABLE ASIGNAR op_mat .)


state 59

    (70) op_mat -> art_exp .

    $end            reduce using rule 70 (op_mat -> art_exp .)
    LLAVEDER        reduce using rule 70 (op_mat -> art_exp .)


state 60

    (72) op_mat -> U8 . art_exp
    (74) art_exp -> U8 . signo_arit VARIABLE
    (76) art_exp -> U8 . signo_arit U8
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    VARIABLE        shift and go to state 87
    U8              shift and go to state 90
    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    MULT            shift and go to state 93
    DIVISION        shift and go to state 94
    MODULO          shift and go to state 95

    art_exp                        shift and go to state 96
    signo_arit                     shift and go to state 97

state 61

    (12) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 12 (other_operators -> VARIABLE oper_asig expresion .)


state 62

    (37) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 98


state 63

    (38) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 99


state 64

    (40) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . asig_mate
    (10) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (11) asignacion -> . other_operators ENDLINE
    (28) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (34) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (35) hashfunc -> . hashset_insert
    (36) hashfunc -> . hashset_union
    (40) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (39) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (57) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (58) struct_s -> . STRUCT sent_stru
    (67) asig_mate -> . VARIABLE ASIGNAR op_mat
    (68) asig_mate -> . LET VARIABLE ASIGNAR op_mat
    (69) asig_mate -> . LET MUT VARIABLE ASIGNAR op_mat
    (13) declarador -> . VARIABLE
    (14) declarador -> . let_asig
    (12) other_operators -> . VARIABLE oper_asig expresion
    (37) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (38) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (41) if_type -> . IF
    (42) if_type -> . ELSE IF
    (43) if_type -> . ELSE
    (15) let_asig -> . LET var_tipo
    (16) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 13
    LET             shift and go to state 14
    FOR             shift and go to state 19
    STRUCT          shift and go to state 20
    VARIABLE        shift and go to state 15
    IF              shift and go to state 22
    ELSE            shift and go to state 23

    if_type                        shift and go to state 18
    rust                           shift and go to state 100
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    asig_mate                      shift and go to state 10
    declarador                     shift and go to state 11
    other_operators                shift and go to state 12
    hashset_insert                 shift and go to state 16
    hashset_union                  shift and go to state 17
    let_asig                       shift and go to state 21

state 65

    (45) validations -> comparison ANDAND . validations
    (44) validations -> . comparison
    (45) validations -> . comparison ANDAND validations
    (46) validations -> . comparison OROR validations
    (47) comparison -> . VARIABLE signo_comp VARIABLE
    (48) comparison -> . VARIABLE signo_comp U8
    (49) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 39
    U8              shift and go to state 40

    comparison                     shift and go to state 38
    validations                    shift and go to state 101

state 66

    (46) validations -> comparison OROR . validations
    (44) validations -> . comparison
    (45) validations -> . comparison ANDAND validations
    (46) validations -> . comparison OROR validations
    (47) comparison -> . VARIABLE signo_comp VARIABLE
    (48) comparison -> . VARIABLE signo_comp U8
    (49) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 39
    U8              shift and go to state 40

    comparison                     shift and go to state 38
    validations                    shift and go to state 102

state 67

    (47) comparison -> VARIABLE signo_comp . VARIABLE
    (48) comparison -> VARIABLE signo_comp . U8

    VARIABLE        shift and go to state 103
    U8              shift and go to state 104


state 68

    (50) signo_comp -> GREATER .

    VARIABLE        reduce using rule 50 (signo_comp -> GREATER .)
    U8              reduce using rule 50 (signo_comp -> GREATER .)


state 69

    (51) signo_comp -> LESST .

    VARIABLE        reduce using rule 51 (signo_comp -> LESST .)
    U8              reduce using rule 51 (signo_comp -> LESST .)


state 70

    (52) signo_comp -> GREATEQ .

    VARIABLE        reduce using rule 52 (signo_comp -> GREATEQ .)
    U8              reduce using rule 52 (signo_comp -> GREATEQ .)


state 71

    (53) signo_comp -> EQUAL .

    VARIABLE        reduce using rule 53 (signo_comp -> EQUAL .)
    U8              reduce using rule 53 (signo_comp -> EQUAL .)


state 72

    (54) signo_comp -> DIFFERENT .

    VARIABLE        reduce using rule 54 (signo_comp -> DIFFERENT .)
    U8              reduce using rule 54 (signo_comp -> DIFFERENT .)


state 73

    (49) comparison -> U8 signo_comp . VARIABLE

    VARIABLE        shift and go to state 105


state 74

    (57) for_loop -> FOR VARIABLE IN . f_comparacion LLAVEIZ rust LLAVEDER
    (55) f_comparacion -> . U8 DOT DOT U8
    (56) f_comparacion -> . VARIABLE

    U8              shift and go to state 108
    VARIABLE        shift and go to state 106

    f_comparacion                  shift and go to state 107

state 75

    (64) sent_stru -> UNIT ENDLINE .

    $end            reduce using rule 64 (sent_stru -> UNIT ENDLINE .)
    LLAVEDER        reduce using rule 64 (sent_stru -> UNIT ENDLINE .)


state 76

    (65) sent_stru -> TUPLE LPAREN . argumentos_tipo RPAREN ENDLINE
    (62) argumentos_tipo -> . tipos
    (63) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (19) tipos -> . DATATYPES
    (20) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 85
    NUMDATATYPES    shift and go to state 86

    argumentos_tipo                shift and go to state 109
    tipos                          shift and go to state 110

state 77

    (66) sent_stru -> VARIABLE LLAVEIZ . argumentos_juntos LLAVEDER
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (60) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (61) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 111
    PUB             shift and go to state 113

    argumentos_juntos              shift and go to state 112

state 78

    (10) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 10 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 10 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 79

    (39) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 39 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 39 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 80

    (28) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 114


state 81

    (30) print_expresion -> STRING COMMA . print_args
    (31) print_args -> . print_datos COMMA print_args
    (32) print_args -> . print_datos
    (33) print_datos -> . expresion
    (26) expresion -> . STRING
    (27) expresion -> . U8

    STRING          shift and go to state 49
    U8              shift and go to state 50

    print_args                     shift and go to state 115
    print_datos                    shift and go to state 116
    expresion                      shift and go to state 117

state 82

    (34) hashset -> LET MUT VARIABLE ASIGNAR . HASHSET PATHSEP NEWFUNC ENDLINE
    (69) asig_mate -> LET MUT VARIABLE ASIGNAR . op_mat
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE art_exp
    (72) op_mat -> . U8 art_exp
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    HASHSET         shift and go to state 118
    VARIABLE        shift and go to state 57
    U8              shift and go to state 60

    op_mat                         shift and go to state 119
    art_exp                        shift and go to state 59

state 83

    (68) asig_mate -> LET VARIABLE ASIGNAR op_mat .

    $end            reduce using rule 68 (asig_mate -> LET VARIABLE ASIGNAR op_mat .)
    LLAVEDER        reduce using rule 68 (asig_mate -> LET VARIABLE ASIGNAR op_mat .)


state 84

    (18) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 18 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 85

    (19) tipos -> DATATYPES .

    ASIGNAR         reduce using rule 19 (tipos -> DATATYPES .)
    COMMA           reduce using rule 19 (tipos -> DATATYPES .)
    RPAREN          reduce using rule 19 (tipos -> DATATYPES .)
    LLAVEDER        reduce using rule 19 (tipos -> DATATYPES .)


state 86

    (20) tipos -> NUMDATATYPES .

    ASIGNAR         reduce using rule 20 (tipos -> NUMDATATYPES .)
    COMMA           reduce using rule 20 (tipos -> NUMDATATYPES .)
    RPAREN          reduce using rule 20 (tipos -> NUMDATATYPES .)
    LLAVEDER        reduce using rule 20 (tipos -> NUMDATATYPES .)


state 87

    (73) art_exp -> VARIABLE . signo_arit VARIABLE
    (75) art_exp -> VARIABLE . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    MULT            shift and go to state 93
    DIVISION        shift and go to state 94
    MODULO          shift and go to state 95

    signo_arit                     shift and go to state 89

state 88

    (71) op_mat -> VARIABLE art_exp .

    $end            reduce using rule 71 (op_mat -> VARIABLE art_exp .)
    LLAVEDER        reduce using rule 71 (op_mat -> VARIABLE art_exp .)


state 89

    (73) art_exp -> VARIABLE signo_arit . VARIABLE
    (75) art_exp -> VARIABLE signo_arit . U8

    VARIABLE        shift and go to state 120
    U8              shift and go to state 121


state 90

    (74) art_exp -> U8 . signo_arit VARIABLE
    (76) art_exp -> U8 . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    MAS             shift and go to state 91
    MENOS           shift and go to state 92
    MULT            shift and go to state 93
    DIVISION        shift and go to state 94
    MODULO          shift and go to state 95

    signo_arit                     shift and go to state 97

state 91

    (77) signo_arit -> MAS .

    VARIABLE        reduce using rule 77 (signo_arit -> MAS .)
    U8              reduce using rule 77 (signo_arit -> MAS .)


state 92

    (78) signo_arit -> MENOS .

    VARIABLE        reduce using rule 78 (signo_arit -> MENOS .)
    U8              reduce using rule 78 (signo_arit -> MENOS .)


state 93

    (79) signo_arit -> MULT .

    VARIABLE        reduce using rule 79 (signo_arit -> MULT .)
    U8              reduce using rule 79 (signo_arit -> MULT .)


state 94

    (80) signo_arit -> DIVISION .

    VARIABLE        reduce using rule 80 (signo_arit -> DIVISION .)
    U8              reduce using rule 80 (signo_arit -> DIVISION .)


state 95

    (81) signo_arit -> MODULO .

    VARIABLE        reduce using rule 81 (signo_arit -> MODULO .)
    U8              reduce using rule 81 (signo_arit -> MODULO .)


state 96

    (72) op_mat -> U8 art_exp .

    $end            reduce using rule 72 (op_mat -> U8 art_exp .)
    LLAVEDER        reduce using rule 72 (op_mat -> U8 art_exp .)


state 97

    (74) art_exp -> U8 signo_arit . VARIABLE
    (76) art_exp -> U8 signo_arit . U8

    VARIABLE        shift and go to state 123
    U8              shift and go to state 122


state 98

    (37) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (26) expresion -> . STRING
    (27) expresion -> . U8

    STRING          shift and go to state 49
    U8              shift and go to state 50

    expresion                      shift and go to state 124

state 99

    (38) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 125


state 100

    (40) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 126


state 101

    (45) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 45 (validations -> comparison ANDAND validations .)


state 102

    (46) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 46 (validations -> comparison OROR validations .)


state 103

    (47) comparison -> VARIABLE signo_comp VARIABLE .

    ANDAND          reduce using rule 47 (comparison -> VARIABLE signo_comp VARIABLE .)
    OROR            reduce using rule 47 (comparison -> VARIABLE signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 47 (comparison -> VARIABLE signo_comp VARIABLE .)


state 104

    (48) comparison -> VARIABLE signo_comp U8 .

    ANDAND          reduce using rule 48 (comparison -> VARIABLE signo_comp U8 .)
    OROR            reduce using rule 48 (comparison -> VARIABLE signo_comp U8 .)
    LLAVEIZ         reduce using rule 48 (comparison -> VARIABLE signo_comp U8 .)


state 105

    (49) comparison -> U8 signo_comp VARIABLE .

    ANDAND          reduce using rule 49 (comparison -> U8 signo_comp VARIABLE .)
    OROR            reduce using rule 49 (comparison -> U8 signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 49 (comparison -> U8 signo_comp VARIABLE .)


state 106

    (56) f_comparacion -> VARIABLE .

    LLAVEIZ         reduce using rule 56 (f_comparacion -> VARIABLE .)


state 107

    (57) for_loop -> FOR VARIABLE IN f_comparacion . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 127


state 108

    (55) f_comparacion -> U8 . DOT DOT U8

    DOT             shift and go to state 128


state 109

    (65) sent_stru -> TUPLE LPAREN argumentos_tipo . RPAREN ENDLINE

    RPAREN          shift and go to state 129


state 110

    (62) argumentos_tipo -> tipos .
    (63) argumentos_tipo -> tipos . COMMA argumentos_tipo

    RPAREN          reduce using rule 62 (argumentos_tipo -> tipos .)
    COMMA           shift and go to state 130


state 111

    (59) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos
    (60) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 131


state 112

    (66) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos . LLAVEDER

    LLAVEDER        shift and go to state 132


state 113

    (61) argumentos_juntos -> PUB . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 133


state 114

    (28) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 28 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 28 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 115

    (30) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 30 (print_expresion -> STRING COMMA print_args .)


state 116

    (31) print_args -> print_datos . COMMA print_args
    (32) print_args -> print_datos .

    COMMA           shift and go to state 134
    RPAREN          reduce using rule 32 (print_args -> print_datos .)


state 117

    (33) print_datos -> expresion .

    COMMA           reduce using rule 33 (print_datos -> expresion .)
    RPAREN          reduce using rule 33 (print_datos -> expresion .)


state 118

    (34) hashset -> LET MUT VARIABLE ASIGNAR HASHSET . PATHSEP NEWFUNC ENDLINE

    PATHSEP         shift and go to state 135


state 119

    (69) asig_mate -> LET MUT VARIABLE ASIGNAR op_mat .

    $end            reduce using rule 69 (asig_mate -> LET MUT VARIABLE ASIGNAR op_mat .)
    LLAVEDER        reduce using rule 69 (asig_mate -> LET MUT VARIABLE ASIGNAR op_mat .)


state 120

    (73) art_exp -> VARIABLE signo_arit VARIABLE .

    $end            reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    LLAVEDER        reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)


state 121

    (75) art_exp -> VARIABLE signo_arit U8 .

    $end            reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    LLAVEDER        reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)


state 122

    (76) art_exp -> U8 signo_arit U8 .

    $end            reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    LLAVEDER        reduce using rule 76 (art_exp -> U8 signo_arit U8 .)


state 123

    (74) art_exp -> U8 signo_arit VARIABLE .

    $end            reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    LLAVEDER        reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)


state 124

    (37) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 136


state 125

    (38) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 137


state 126

    (40) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 40 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 40 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 40 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 127

    (57) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . asig_mate
    (10) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (11) asignacion -> . other_operators ENDLINE
    (28) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (34) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (35) hashfunc -> . hashset_insert
    (36) hashfunc -> . hashset_union
    (40) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (39) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (57) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (58) struct_s -> . STRUCT sent_stru
    (67) asig_mate -> . VARIABLE ASIGNAR op_mat
    (68) asig_mate -> . LET VARIABLE ASIGNAR op_mat
    (69) asig_mate -> . LET MUT VARIABLE ASIGNAR op_mat
    (13) declarador -> . VARIABLE
    (14) declarador -> . let_asig
    (12) other_operators -> . VARIABLE oper_asig expresion
    (37) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (38) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (41) if_type -> . IF
    (42) if_type -> . ELSE IF
    (43) if_type -> . ELSE
    (15) let_asig -> . LET var_tipo
    (16) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 13
    LET             shift and go to state 14
    FOR             shift and go to state 19
    STRUCT          shift and go to state 20
    VARIABLE        shift and go to state 15
    IF              shift and go to state 22
    ELSE            shift and go to state 23

    rust                           shift and go to state 138
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    asig_mate                      shift and go to state 10
    declarador                     shift and go to state 11
    other_operators                shift and go to state 12
    hashset_insert                 shift and go to state 16
    hashset_union                  shift and go to state 17
    if_type                        shift and go to state 18
    let_asig                       shift and go to state 21

state 128

    (55) f_comparacion -> U8 DOT . DOT U8

    DOT             shift and go to state 139


state 129

    (65) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN . ENDLINE

    ENDLINE         shift and go to state 140


state 130

    (63) argumentos_tipo -> tipos COMMA . argumentos_tipo
    (62) argumentos_tipo -> . tipos
    (63) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (19) tipos -> . DATATYPES
    (20) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 85
    NUMDATATYPES    shift and go to state 86

    tipos                          shift and go to state 110
    argumentos_tipo                shift and go to state 141

state 131

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos
    (60) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (19) tipos -> . DATATYPES
    (20) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 85
    NUMDATATYPES    shift and go to state 86

    tipos                          shift and go to state 142

state 132

    (66) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .

    $end            reduce using rule 66 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)
    LLAVEDER        reduce using rule 66 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)


state 133

    (61) argumentos_juntos -> PUB VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 143


state 134

    (31) print_args -> print_datos COMMA . print_args
    (31) print_args -> . print_datos COMMA print_args
    (32) print_args -> . print_datos
    (33) print_datos -> . expresion
    (26) expresion -> . STRING
    (27) expresion -> . U8

    STRING          shift and go to state 49
    U8              shift and go to state 50

    print_datos                    shift and go to state 116
    print_args                     shift and go to state 144
    expresion                      shift and go to state 117

state 135

    (34) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP . NEWFUNC ENDLINE

    NEWFUNC         shift and go to state 145


state 136

    (37) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 146


state 137

    (38) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 147


state 138

    (57) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 148


state 139

    (55) f_comparacion -> U8 DOT DOT . U8

    U8              shift and go to state 149


state 140

    (65) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .

    $end            reduce using rule 65 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 65 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)


state 141

    (63) argumentos_tipo -> tipos COMMA argumentos_tipo .

    RPAREN          reduce using rule 63 (argumentos_tipo -> tipos COMMA argumentos_tipo .)


state 142

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .
    (60) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    LLAVEDER        reduce using rule 59 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 150


state 143

    (61) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (19) tipos -> . DATATYPES
    (20) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 85
    NUMDATATYPES    shift and go to state 86

    tipos                          shift and go to state 151

state 144

    (31) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 31 (print_args -> print_datos COMMA print_args .)


state 145

    (34) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 152


state 146

    (37) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 37 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 37 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 147

    (38) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 153


state 148

    (57) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 57 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 57 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)


state 149

    (55) f_comparacion -> U8 DOT DOT U8 .

    LLAVEIZ         reduce using rule 55 (f_comparacion -> U8 DOT DOT U8 .)


state 150

    (60) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (60) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (61) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 111
    PUB             shift and go to state 113

    argumentos_juntos              shift and go to state 154

state 151

    (61) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    COMMA           shift and go to state 155


state 152

    (34) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 34 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 34 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)


state 153

    (38) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 38 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 38 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)


state 154

    (60) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 60 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 155

    (61) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (60) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (61) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 111
    PUB             shift and go to state 113

    argumentos_juntos              shift and go to state 156

state 156

    (61) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 61 (argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGNAR in state 15 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 28 resolved as shift
WARNING: shift/reduce conflict for U8 in state 30 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 53 resolved as shift
