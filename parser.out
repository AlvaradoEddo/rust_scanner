Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTAINS_SLICE
    CONTIN
    CRATE
    DIVISION
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    ERRORPROP
    EXTERN
    FUNCTION
    GET_SLICE
    IMPL
    LESSEQ
    LOOP
    MAS
    MATCH
    MAYOR
    MAYORIGUAL
    MENOS
    MOD
    MODULO
    MOVE
    MULT
    NOT
    NUMBER
    OR
    PRINT
    READ
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    WHERE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> prints
Rule 3     rust -> hashset
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     rust -> for_loop
Rule 8     rust -> struct_s
Rule 9     rust -> while_loop
Rule 10    rust -> empty_vector
Rule 11    rust -> vector_methods
Rule 12    rust -> data_vector
Rule 13    asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 14    asignacion -> other_operators ENDLINE
Rule 15    other_operators -> VARIABLE oper_asig expresion
Rule 16    declarador -> VARIABLE
Rule 17    declarador -> let_asig
Rule 18    let_asig -> LET var_tipo
Rule 19    let_asig -> LET MUT var_tipo
Rule 20    var_tipo -> VARIABLE
Rule 21    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 22    oper_asig -> ASIGNAR
Rule 23    oper_asig -> PLUSEQ
Rule 24    oper_asig -> MINUSEQ
Rule 25    oper_asig -> STAREQ
Rule 26    oper_asig -> SLASHEQ
Rule 27    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 28    print_expresion -> STRING
Rule 29    print_expresion -> STRING COMMA print_args
Rule 30    print_args -> print_datos COMMA print_args
Rule 31    print_args -> print_datos
Rule 32    print_datos -> expresion
Rule 33    hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
Rule 34    hashfunc -> hashset_insert
Rule 35    hashfunc -> hashset_union
Rule 36    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 37    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 38    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 39    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 40    if_type -> IF
Rule 41    if_type -> ELSE IF
Rule 42    if_type -> ELSE
Rule 43    validations -> comparison
Rule 44    validations -> comparison ANDAND validations
Rule 45    validations -> comparison OROR validations
Rule 46    comparison -> VARIABLE signo_comp VARIABLE
Rule 47    comparison -> VARIABLE signo_comp U8
Rule 48    comparison -> U8 signo_comp VARIABLE
Rule 49    signo_comp -> GREATER
Rule 50    signo_comp -> LESST
Rule 51    signo_comp -> GREATEQ
Rule 52    signo_comp -> EQUAL
Rule 53    signo_comp -> DIFFERENT
Rule 54    f_comparacion -> U8 DOT DOT U8
Rule 55    f_comparacion -> VARIABLE
Rule 56    for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
Rule 57    struct_s -> STRUCT sent_stru
Rule 58    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos
Rule 59    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 60    argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 61    argumentos_tipo -> tipos
Rule 62    argumentos_tipo -> tipos COMMA argumentos_tipo
Rule 63    sent_stru -> UNIT ENDLINE
Rule 64    sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
Rule 65    sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER
Rule 66    while_loop -> WHILE validations LLAVEIZ rust LLAVEDER
Rule 67    empty_vector -> declare_vector VECT types_vector empty_vec
Rule 68    data_vector -> declare_vector VECT types_vector vector_content
Rule 69    data_vector -> declare_vector vector_content
Rule 70    data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
Rule 71    vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
Rule 72    vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
Rule 73    vector_elements -> element
Rule 74    vector_elements -> element COMMA vector_elements
Rule 75    element -> expresion
Rule 76    element_type -> U8 NUMDATATYPES
Rule 77    types_vector -> LESST DATATYPES GREATER
Rule 78    types_vector -> LESST NUMDATATYPES GREATER
Rule 79    declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE
Rule 80    declare_vector -> LET VARIABLE ASIGNATION_TYPE
Rule 81    empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE
Rule 82    empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE
Rule 83    empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE
Rule 84    vector_methods -> VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN
Rule 85    vector_methods -> VARIABLE DOT POP_VEC LPAREN RPAREN
Rule 86    expresion -> STRING
Rule 87    expresion -> U8
Rule 88    tipos -> DATATYPES
Rule 89    tipos -> NUMDATATYPES

Terminals, with rules where they appear

AND                  : 37
ANDAND               : 44
ARROW                : 
AS                   : 
ASIGNAR              : 13 22 33 38 70 81 82 83
ASIGNATION_TYPE      : 21 58 59 60 79 80
ASYNC                : 
AWAIT                : 
BRACKETL             : 82
BRACKETR             : 82
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 29 30 59 60 62 70 74
CONST                : 
CONTAINS_SLICE       : 
CONTIN               : 
CRATE                : 
DATATYPES            : 77 88
DIFFERENT            : 53
DIVISION             : 
DOLLAR               : 
DOT                  : 36 37 54 54 84 85
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 41 42
ENDLINE              : 13 14 27 33 36 37 38 63 64 70 71 72 81 82 83
ENUM                 : 
EQUAL                : 52
ERRORPROP            : 
EXTERN               : 
FOR                  : 56
FROM                 : 72 83
FUNCTION             : 
GET_SLICE            : 
GREATEQ              : 51
GREATER              : 49 77 78
HASHSET              : 33
IF                   : 40 41
IMPL                 : 
IN                   : 56
INSERT_HASH          : 36
LESSEQ               : 
LESST                : 50 77 78
LET                  : 18 19 33 79 80
LLAVEDER             : 39 56 65 66 70 71 72
LLAVEIZ              : 39 56 65 66 70 71 72
LOOP                 : 
LPAREN               : 27 36 37 64 72 83 84 85
MAS                  : 
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 
MINUSEQ              : 24
MOD                  : 
MODULO               : 
MOVE                 : 
MULT                 : 
MUT                  : 19 33 79
NEWFUNC              : 33 81
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 76 78 89
OR                   : 
OROR                 : 45
PATHSEP              : 33 72 81 83
PLUSEQ               : 23
POP_VEC              : 85
PRINT                : 
PRINTS               : 27
PUB                  : 60
PUSH_VEC             : 84
READ                 : 
REF                  : 
RETURN               : 
RPAREN               : 27 36 37 64 72 83 84 85
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 26
STAREQ               : 25
STATIC               : 
STRING               : 28 29 86
STRUCT               : 57
SUPER                : 
TRAIT                : 
TUPLE                : 64
TYPE                 : 
U8                   : 47 48 54 54 76 87
UNION_HASH           : 37
UNIT                 : 63
UNSAFE               : 
USE                  : 
VARIABLE             : 15 16 20 21 33 36 37 37 46 46 47 48 55 56 58 59 60 65 79 80 84 85
VECT                 : 67 68 72 81 83
VECTMACRO            : 70 71 82
WHERE                : 
WHILE                : 66
error                : 

Nonterminals, with rules where they appear

argumentos_juntos    : 59 60 65
argumentos_tipo      : 62 64
asignacion           : 1
comparison           : 43 44 45
conditional          : 5 38
conditional_asigned  : 6
data_vector          : 12
declarador           : 13 38
declare_vector       : 67 68 69 70
element              : 73 74
element_type         : 70
empty_vec            : 67
empty_vector         : 10
expresion            : 13 15 32 36 75 84
f_comparacion        : 56
for_loop             : 7
hashfunc             : 4
hashset              : 3
hashset_insert       : 34
hashset_union        : 35
if_type              : 39
let_asig             : 17
oper_asig            : 15
other_operators      : 14
print_args           : 29 30
print_datos          : 30 31
print_expresion      : 27
prints               : 2
rust                 : 39 56 66 0
sent_stru            : 57
signo_comp           : 46 47 48
struct_s             : 8
tipos                : 21 58 59 60 61 62
types_vector         : 67 68
validations          : 39 44 45 66
var_tipo             : 18 19
vector_content       : 68 69
vector_elements      : 70 71 72 74
vector_methods       : 11
while_loop           : 9

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (14) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (66) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (67) empty_vector -> . declare_vector VECT types_vector empty_vec
    (84) vector_methods -> . VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> . VARIABLE DOT POP_VEC LPAREN RPAREN
    (68) data_vector -> . declare_vector VECT types_vector vector_content
    (69) data_vector -> . declare_vector vector_content
    (70) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (16) declarador -> . VARIABLE
    (17) declarador -> . let_asig
    (15) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (79) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (80) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (18) let_asig -> . LET var_tipo
    (19) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 16
    LET             shift and go to state 17
    FOR             shift and go to state 22
    STRUCT          shift and go to state 23
    WHILE           shift and go to state 24
    VARIABLE        shift and go to state 18
    IF              shift and go to state 27
    ELSE            shift and go to state 28

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    declarador                     shift and go to state 14
    other_operators                shift and go to state 15
    hashset_insert                 shift and go to state 19
    hashset_union                  shift and go to state 20
    if_type                        shift and go to state 21
    declare_vector                 shift and go to state 25
    let_asig                       shift and go to state 26

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> prints .

    $end            reduce using rule 2 (rust -> prints .)
    LLAVEDER        reduce using rule 2 (rust -> prints .)


state 4

    (3) rust -> hashset .

    $end            reduce using rule 3 (rust -> hashset .)
    LLAVEDER        reduce using rule 3 (rust -> hashset .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) rust -> for_loop .

    $end            reduce using rule 7 (rust -> for_loop .)
    LLAVEDER        reduce using rule 7 (rust -> for_loop .)


state 9

    (8) rust -> struct_s .

    $end            reduce using rule 8 (rust -> struct_s .)
    LLAVEDER        reduce using rule 8 (rust -> struct_s .)


state 10

    (9) rust -> while_loop .

    $end            reduce using rule 9 (rust -> while_loop .)
    LLAVEDER        reduce using rule 9 (rust -> while_loop .)


state 11

    (10) rust -> empty_vector .

    $end            reduce using rule 10 (rust -> empty_vector .)
    LLAVEDER        reduce using rule 10 (rust -> empty_vector .)


state 12

    (11) rust -> vector_methods .

    $end            reduce using rule 11 (rust -> vector_methods .)
    LLAVEDER        reduce using rule 11 (rust -> vector_methods .)


state 13

    (12) rust -> data_vector .

    $end            reduce using rule 12 (rust -> data_vector .)
    LLAVEDER        reduce using rule 12 (rust -> data_vector .)


state 14

    (13) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (38) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 29


state 15

    (14) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 30


state 16

    (27) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 31


state 17

    (33) hashset -> LET . MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (79) declare_vector -> LET . MUT VARIABLE ASIGNATION_TYPE
    (80) declare_vector -> LET . VARIABLE ASIGNATION_TYPE
    (18) let_asig -> LET . var_tipo
    (19) let_asig -> LET . MUT var_tipo
    (20) var_tipo -> . VARIABLE
    (21) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 32
    VARIABLE        shift and go to state 33

    var_tipo                       shift and go to state 34

state 18

    (84) vector_methods -> VARIABLE . DOT PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> VARIABLE . DOT POP_VEC LPAREN RPAREN
    (16) declarador -> VARIABLE .
    (15) other_operators -> VARIABLE . oper_asig expresion
    (36) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (22) oper_asig -> . ASIGNAR
    (23) oper_asig -> . PLUSEQ
    (24) oper_asig -> . MINUSEQ
    (25) oper_asig -> . STAREQ
    (26) oper_asig -> . SLASHEQ

  ! shift/reduce conflict for ASIGNAR resolved as shift
    DOT             shift and go to state 35
    ASIGNAR         shift and go to state 37
    PLUSEQ          shift and go to state 38
    MINUSEQ         shift and go to state 39
    STAREQ          shift and go to state 40
    SLASHEQ         shift and go to state 41

  ! ASIGNAR         [ reduce using rule 16 (declarador -> VARIABLE .) ]

    oper_asig                      shift and go to state 36

state 19

    (34) hashfunc -> hashset_insert .

    $end            reduce using rule 34 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 34 (hashfunc -> hashset_insert .)


state 20

    (35) hashfunc -> hashset_union .

    $end            reduce using rule 35 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 35 (hashfunc -> hashset_union .)


state 21

    (39) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    validations                    shift and go to state 42
    comparison                     shift and go to state 43

state 22

    (56) for_loop -> FOR . VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 46


state 23

    (57) struct_s -> STRUCT . sent_stru
    (63) sent_stru -> . UNIT ENDLINE
    (64) sent_stru -> . TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
    (65) sent_stru -> . VARIABLE LLAVEIZ argumentos_juntos LLAVEDER

    UNIT            shift and go to state 48
    TUPLE           shift and go to state 49
    VARIABLE        shift and go to state 50

    sent_stru                      shift and go to state 47

state 24

    (66) while_loop -> WHILE . validations LLAVEIZ rust LLAVEDER
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    validations                    shift and go to state 51
    comparison                     shift and go to state 43

state 25

    (67) empty_vector -> declare_vector . VECT types_vector empty_vec
    (68) data_vector -> declare_vector . VECT types_vector vector_content
    (69) data_vector -> declare_vector . vector_content
    (70) data_vector -> declare_vector . ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (71) vector_content -> . VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
    (72) vector_content -> . VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    VECT            shift and go to state 52
    ASIGNAR         shift and go to state 54
    VECTMACRO       shift and go to state 55

    vector_content                 shift and go to state 53

state 26

    (17) declarador -> let_asig .

    ASIGNAR         reduce using rule 17 (declarador -> let_asig .)


state 27

    (40) if_type -> IF .

    VARIABLE        reduce using rule 40 (if_type -> IF .)
    U8              reduce using rule 40 (if_type -> IF .)


state 28

    (41) if_type -> ELSE . IF
    (42) if_type -> ELSE .

    IF              shift and go to state 56
    VARIABLE        reduce using rule 42 (if_type -> ELSE .)
    U8              reduce using rule 42 (if_type -> ELSE .)


state 29

    (13) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (38) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (86) expresion -> . STRING
    (87) expresion -> . U8
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE

    STRING          shift and go to state 59
    U8              shift and go to state 60
    IF              shift and go to state 27
    ELSE            shift and go to state 28

    expresion                      shift and go to state 57
    conditional                    shift and go to state 58
    if_type                        shift and go to state 21

state 30

    (14) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 14 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 14 (asignacion -> other_operators ENDLINE .)


state 31

    (27) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (28) print_expresion -> . STRING
    (29) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 62

    print_expresion                shift and go to state 61

state 32

    (33) hashset -> LET MUT . VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (79) declare_vector -> LET MUT . VARIABLE ASIGNATION_TYPE
    (19) let_asig -> LET MUT . var_tipo
    (20) var_tipo -> . VARIABLE
    (21) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 63

    var_tipo                       shift and go to state 64

state 33

    (80) declare_vector -> LET VARIABLE . ASIGNATION_TYPE
    (20) var_tipo -> VARIABLE .
    (21) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

    ASIGNATION_TYPE shift and go to state 65
    ASIGNAR         reduce using rule 20 (var_tipo -> VARIABLE .)


state 34

    (18) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 18 (let_asig -> LET var_tipo .)


state 35

    (84) vector_methods -> VARIABLE DOT . PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> VARIABLE DOT . POP_VEC LPAREN RPAREN
    (36) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    PUSH_VEC        shift and go to state 66
    POP_VEC         shift and go to state 67
    INSERT_HASH     shift and go to state 68
    UNION_HASH      shift and go to state 69


state 36

    (15) other_operators -> VARIABLE oper_asig . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    expresion                      shift and go to state 70

state 37

    (22) oper_asig -> ASIGNAR .

    STRING          reduce using rule 22 (oper_asig -> ASIGNAR .)
    U8              reduce using rule 22 (oper_asig -> ASIGNAR .)


state 38

    (23) oper_asig -> PLUSEQ .

    STRING          reduce using rule 23 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 23 (oper_asig -> PLUSEQ .)


state 39

    (24) oper_asig -> MINUSEQ .

    STRING          reduce using rule 24 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 24 (oper_asig -> MINUSEQ .)


state 40

    (25) oper_asig -> STAREQ .

    STRING          reduce using rule 25 (oper_asig -> STAREQ .)
    U8              reduce using rule 25 (oper_asig -> STAREQ .)


state 41

    (26) oper_asig -> SLASHEQ .

    STRING          reduce using rule 26 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 26 (oper_asig -> SLASHEQ .)


state 42

    (39) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 71


state 43

    (43) validations -> comparison .
    (44) validations -> comparison . ANDAND validations
    (45) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 43 (validations -> comparison .)
    ANDAND          shift and go to state 72
    OROR            shift and go to state 73


state 44

    (46) comparison -> VARIABLE . signo_comp VARIABLE
    (47) comparison -> VARIABLE . signo_comp U8
    (49) signo_comp -> . GREATER
    (50) signo_comp -> . LESST
    (51) signo_comp -> . GREATEQ
    (52) signo_comp -> . EQUAL
    (53) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 75
    LESST           shift and go to state 76
    GREATEQ         shift and go to state 77
    EQUAL           shift and go to state 78
    DIFFERENT       shift and go to state 79

    signo_comp                     shift and go to state 74

state 45

    (48) comparison -> U8 . signo_comp VARIABLE
    (49) signo_comp -> . GREATER
    (50) signo_comp -> . LESST
    (51) signo_comp -> . GREATEQ
    (52) signo_comp -> . EQUAL
    (53) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 75
    LESST           shift and go to state 76
    GREATEQ         shift and go to state 77
    EQUAL           shift and go to state 78
    DIFFERENT       shift and go to state 79

    signo_comp                     shift and go to state 80

state 46

    (56) for_loop -> FOR VARIABLE . IN f_comparacion LLAVEIZ rust LLAVEDER

    IN              shift and go to state 81


state 47

    (57) struct_s -> STRUCT sent_stru .

    $end            reduce using rule 57 (struct_s -> STRUCT sent_stru .)
    LLAVEDER        reduce using rule 57 (struct_s -> STRUCT sent_stru .)


state 48

    (63) sent_stru -> UNIT . ENDLINE

    ENDLINE         shift and go to state 82


state 49

    (64) sent_stru -> TUPLE . LPAREN argumentos_tipo RPAREN ENDLINE

    LPAREN          shift and go to state 83


state 50

    (65) sent_stru -> VARIABLE . LLAVEIZ argumentos_juntos LLAVEDER

    LLAVEIZ         shift and go to state 84


state 51

    (66) while_loop -> WHILE validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 85


state 52

    (67) empty_vector -> declare_vector VECT . types_vector empty_vec
    (68) data_vector -> declare_vector VECT . types_vector vector_content
    (72) vector_content -> VECT . PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
    (77) types_vector -> . LESST DATATYPES GREATER
    (78) types_vector -> . LESST NUMDATATYPES GREATER

    PATHSEP         shift and go to state 87
    LESST           shift and go to state 88

    types_vector                   shift and go to state 86

state 53

    (69) data_vector -> declare_vector vector_content .

    $end            reduce using rule 69 (data_vector -> declare_vector vector_content .)
    LLAVEDER        reduce using rule 69 (data_vector -> declare_vector vector_content .)


state 54

    (70) data_vector -> declare_vector ASIGNAR . VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE

    VECTMACRO       shift and go to state 89


state 55

    (71) vector_content -> VECTMACRO . LLAVEIZ vector_elements LLAVEDER ENDLINE

    LLAVEIZ         shift and go to state 90


state 56

    (41) if_type -> ELSE IF .

    VARIABLE        reduce using rule 41 (if_type -> ELSE IF .)
    U8              reduce using rule 41 (if_type -> ELSE IF .)


state 57

    (13) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 91


state 58

    (38) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 92


state 59

    (86) expresion -> STRING .

    ENDLINE         reduce using rule 86 (expresion -> STRING .)
    COMMA           reduce using rule 86 (expresion -> STRING .)
    LLAVEDER        reduce using rule 86 (expresion -> STRING .)
    RPAREN          reduce using rule 86 (expresion -> STRING .)


state 60

    (87) expresion -> U8 .

    ENDLINE         reduce using rule 87 (expresion -> U8 .)
    COMMA           reduce using rule 87 (expresion -> U8 .)
    LLAVEDER        reduce using rule 87 (expresion -> U8 .)
    RPAREN          reduce using rule 87 (expresion -> U8 .)


state 61

    (27) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 93


state 62

    (28) print_expresion -> STRING .
    (29) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 28 (print_expresion -> STRING .)
    COMMA           shift and go to state 94


state 63

    (33) hashset -> LET MUT VARIABLE . ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (79) declare_vector -> LET MUT VARIABLE . ASIGNATION_TYPE
    (20) var_tipo -> VARIABLE .
    (21) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 95
    ASIGNATION_TYPE shift and go to state 96

  ! ASIGNAR         [ reduce using rule 20 (var_tipo -> VARIABLE .) ]


state 64

    (19) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 19 (let_asig -> LET MUT var_tipo .)


state 65

    (80) declare_vector -> LET VARIABLE ASIGNATION_TYPE .
    (21) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    VECT            reduce using rule 80 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    ASIGNAR         reduce using rule 80 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    VECTMACRO       reduce using rule 80 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    tipos                          shift and go to state 97

state 66

    (84) vector_methods -> VARIABLE DOT PUSH_VEC . LPAREN expresion RPAREN

    LPAREN          shift and go to state 100


state 67

    (85) vector_methods -> VARIABLE DOT POP_VEC . LPAREN RPAREN

    LPAREN          shift and go to state 101


state 68

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 102


state 69

    (37) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 103


state 70

    (15) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 15 (other_operators -> VARIABLE oper_asig expresion .)


state 71

    (39) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (14) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (66) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (67) empty_vector -> . declare_vector VECT types_vector empty_vec
    (84) vector_methods -> . VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> . VARIABLE DOT POP_VEC LPAREN RPAREN
    (68) data_vector -> . declare_vector VECT types_vector vector_content
    (69) data_vector -> . declare_vector vector_content
    (70) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (16) declarador -> . VARIABLE
    (17) declarador -> . let_asig
    (15) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (79) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (80) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (18) let_asig -> . LET var_tipo
    (19) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 16
    LET             shift and go to state 17
    FOR             shift and go to state 22
    STRUCT          shift and go to state 23
    WHILE           shift and go to state 24
    VARIABLE        shift and go to state 18
    IF              shift and go to state 27
    ELSE            shift and go to state 28

    if_type                        shift and go to state 21
    rust                           shift and go to state 104
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    declarador                     shift and go to state 14
    other_operators                shift and go to state 15
    hashset_insert                 shift and go to state 19
    hashset_union                  shift and go to state 20
    declare_vector                 shift and go to state 25
    let_asig                       shift and go to state 26

state 72

    (44) validations -> comparison ANDAND . validations
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    comparison                     shift and go to state 43
    validations                    shift and go to state 105

state 73

    (45) validations -> comparison OROR . validations
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    comparison                     shift and go to state 43
    validations                    shift and go to state 106

state 74

    (46) comparison -> VARIABLE signo_comp . VARIABLE
    (47) comparison -> VARIABLE signo_comp . U8

    VARIABLE        shift and go to state 107
    U8              shift and go to state 108


state 75

    (49) signo_comp -> GREATER .

    VARIABLE        reduce using rule 49 (signo_comp -> GREATER .)
    U8              reduce using rule 49 (signo_comp -> GREATER .)


state 76

    (50) signo_comp -> LESST .

    VARIABLE        reduce using rule 50 (signo_comp -> LESST .)
    U8              reduce using rule 50 (signo_comp -> LESST .)


state 77

    (51) signo_comp -> GREATEQ .

    VARIABLE        reduce using rule 51 (signo_comp -> GREATEQ .)
    U8              reduce using rule 51 (signo_comp -> GREATEQ .)


state 78

    (52) signo_comp -> EQUAL .

    VARIABLE        reduce using rule 52 (signo_comp -> EQUAL .)
    U8              reduce using rule 52 (signo_comp -> EQUAL .)


state 79

    (53) signo_comp -> DIFFERENT .

    VARIABLE        reduce using rule 53 (signo_comp -> DIFFERENT .)
    U8              reduce using rule 53 (signo_comp -> DIFFERENT .)


state 80

    (48) comparison -> U8 signo_comp . VARIABLE

    VARIABLE        shift and go to state 109


state 81

    (56) for_loop -> FOR VARIABLE IN . f_comparacion LLAVEIZ rust LLAVEDER
    (54) f_comparacion -> . U8 DOT DOT U8
    (55) f_comparacion -> . VARIABLE

    U8              shift and go to state 112
    VARIABLE        shift and go to state 110

    f_comparacion                  shift and go to state 111

state 82

    (63) sent_stru -> UNIT ENDLINE .

    $end            reduce using rule 63 (sent_stru -> UNIT ENDLINE .)
    LLAVEDER        reduce using rule 63 (sent_stru -> UNIT ENDLINE .)


state 83

    (64) sent_stru -> TUPLE LPAREN . argumentos_tipo RPAREN ENDLINE
    (61) argumentos_tipo -> . tipos
    (62) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    argumentos_tipo                shift and go to state 113
    tipos                          shift and go to state 114

state 84

    (65) sent_stru -> VARIABLE LLAVEIZ . argumentos_juntos LLAVEDER
    (58) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (60) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 115
    PUB             shift and go to state 117

    argumentos_juntos              shift and go to state 116

state 85

    (66) while_loop -> WHILE validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (14) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (66) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (67) empty_vector -> . declare_vector VECT types_vector empty_vec
    (84) vector_methods -> . VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> . VARIABLE DOT POP_VEC LPAREN RPAREN
    (68) data_vector -> . declare_vector VECT types_vector vector_content
    (69) data_vector -> . declare_vector vector_content
    (70) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (16) declarador -> . VARIABLE
    (17) declarador -> . let_asig
    (15) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (79) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (80) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (18) let_asig -> . LET var_tipo
    (19) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 16
    LET             shift and go to state 17
    FOR             shift and go to state 22
    STRUCT          shift and go to state 23
    WHILE           shift and go to state 24
    VARIABLE        shift and go to state 18
    IF              shift and go to state 27
    ELSE            shift and go to state 28

    rust                           shift and go to state 118
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    declarador                     shift and go to state 14
    other_operators                shift and go to state 15
    hashset_insert                 shift and go to state 19
    hashset_union                  shift and go to state 20
    if_type                        shift and go to state 21
    declare_vector                 shift and go to state 25
    let_asig                       shift and go to state 26

state 86

    (67) empty_vector -> declare_vector VECT types_vector . empty_vec
    (68) data_vector -> declare_vector VECT types_vector . vector_content
    (81) empty_vec -> . ASIGNAR VECT PATHSEP NEWFUNC ENDLINE
    (82) empty_vec -> . ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE
    (83) empty_vec -> . ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE
    (71) vector_content -> . VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
    (72) vector_content -> . VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    ASIGNAR         shift and go to state 122
    VECTMACRO       shift and go to state 55
    VECT            shift and go to state 119

    empty_vec                      shift and go to state 120
    vector_content                 shift and go to state 121

state 87

    (72) vector_content -> VECT PATHSEP . FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    FROM            shift and go to state 123


state 88

    (77) types_vector -> LESST . DATATYPES GREATER
    (78) types_vector -> LESST . NUMDATATYPES GREATER

    DATATYPES       shift and go to state 124
    NUMDATATYPES    shift and go to state 125


state 89

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO . LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE

    LLAVEIZ         shift and go to state 126


state 90

    (71) vector_content -> VECTMACRO LLAVEIZ . vector_elements LLAVEDER ENDLINE
    (73) vector_elements -> . element
    (74) vector_elements -> . element COMMA vector_elements
    (75) element -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    vector_elements                shift and go to state 127
    element                        shift and go to state 128
    expresion                      shift and go to state 129

state 91

    (13) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 13 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 13 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 92

    (38) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 38 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 38 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 93

    (27) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 130


state 94

    (29) print_expresion -> STRING COMMA . print_args
    (30) print_args -> . print_datos COMMA print_args
    (31) print_args -> . print_datos
    (32) print_datos -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    print_args                     shift and go to state 131
    print_datos                    shift and go to state 132
    expresion                      shift and go to state 133

state 95

    (33) hashset -> LET MUT VARIABLE ASIGNAR . HASHSET PATHSEP NEWFUNC ENDLINE

    HASHSET         shift and go to state 134


state 96

    (79) declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .
    (21) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    VECT            reduce using rule 79 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    ASIGNAR         reduce using rule 79 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    VECTMACRO       reduce using rule 79 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    tipos                          shift and go to state 97

state 97

    (21) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 21 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 98

    (88) tipos -> DATATYPES .

    ASIGNAR         reduce using rule 88 (tipos -> DATATYPES .)
    COMMA           reduce using rule 88 (tipos -> DATATYPES .)
    RPAREN          reduce using rule 88 (tipos -> DATATYPES .)
    LLAVEDER        reduce using rule 88 (tipos -> DATATYPES .)


state 99

    (89) tipos -> NUMDATATYPES .

    ASIGNAR         reduce using rule 89 (tipos -> NUMDATATYPES .)
    COMMA           reduce using rule 89 (tipos -> NUMDATATYPES .)
    RPAREN          reduce using rule 89 (tipos -> NUMDATATYPES .)
    LLAVEDER        reduce using rule 89 (tipos -> NUMDATATYPES .)


state 100

    (84) vector_methods -> VARIABLE DOT PUSH_VEC LPAREN . expresion RPAREN
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    expresion                      shift and go to state 135

state 101

    (85) vector_methods -> VARIABLE DOT POP_VEC LPAREN . RPAREN

    RPAREN          shift and go to state 136


state 102

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    expresion                      shift and go to state 137

state 103

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 138


state 104

    (39) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 139


state 105

    (44) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 44 (validations -> comparison ANDAND validations .)


state 106

    (45) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 45 (validations -> comparison OROR validations .)


state 107

    (46) comparison -> VARIABLE signo_comp VARIABLE .

    ANDAND          reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)
    OROR            reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)


state 108

    (47) comparison -> VARIABLE signo_comp U8 .

    ANDAND          reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)
    OROR            reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)
    LLAVEIZ         reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)


state 109

    (48) comparison -> U8 signo_comp VARIABLE .

    ANDAND          reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)
    OROR            reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)


state 110

    (55) f_comparacion -> VARIABLE .

    LLAVEIZ         reduce using rule 55 (f_comparacion -> VARIABLE .)


state 111

    (56) for_loop -> FOR VARIABLE IN f_comparacion . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 140


state 112

    (54) f_comparacion -> U8 . DOT DOT U8

    DOT             shift and go to state 141


state 113

    (64) sent_stru -> TUPLE LPAREN argumentos_tipo . RPAREN ENDLINE

    RPAREN          shift and go to state 142


state 114

    (61) argumentos_tipo -> tipos .
    (62) argumentos_tipo -> tipos . COMMA argumentos_tipo

    RPAREN          reduce using rule 61 (argumentos_tipo -> tipos .)
    COMMA           shift and go to state 143


state 115

    (58) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 144


state 116

    (65) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos . LLAVEDER

    LLAVEDER        shift and go to state 145


state 117

    (60) argumentos_juntos -> PUB . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 146


state 118

    (66) while_loop -> WHILE validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 147


state 119

    (72) vector_content -> VECT . PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    PATHSEP         shift and go to state 87


state 120

    (67) empty_vector -> declare_vector VECT types_vector empty_vec .

    $end            reduce using rule 67 (empty_vector -> declare_vector VECT types_vector empty_vec .)
    LLAVEDER        reduce using rule 67 (empty_vector -> declare_vector VECT types_vector empty_vec .)


state 121

    (68) data_vector -> declare_vector VECT types_vector vector_content .

    $end            reduce using rule 68 (data_vector -> declare_vector VECT types_vector vector_content .)
    LLAVEDER        reduce using rule 68 (data_vector -> declare_vector VECT types_vector vector_content .)


state 122

    (81) empty_vec -> ASIGNAR . VECT PATHSEP NEWFUNC ENDLINE
    (82) empty_vec -> ASIGNAR . VECTMACRO BRACKETL BRACKETR ENDLINE
    (83) empty_vec -> ASIGNAR . VECT PATHSEP FROM LPAREN RPAREN ENDLINE

    VECT            shift and go to state 148
    VECTMACRO       shift and go to state 149


state 123

    (72) vector_content -> VECT PATHSEP FROM . LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    LPAREN          shift and go to state 150


state 124

    (77) types_vector -> LESST DATATYPES . GREATER

    GREATER         shift and go to state 151


state 125

    (78) types_vector -> LESST NUMDATATYPES . GREATER

    GREATER         shift and go to state 152


state 126

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ . element_type COMMA vector_elements LLAVEDER ENDLINE
    (76) element_type -> . U8 NUMDATATYPES

    U8              shift and go to state 154

    element_type                   shift and go to state 153

state 127

    (71) vector_content -> VECTMACRO LLAVEIZ vector_elements . LLAVEDER ENDLINE

    LLAVEDER        shift and go to state 155


state 128

    (73) vector_elements -> element .
    (74) vector_elements -> element . COMMA vector_elements

    LLAVEDER        reduce using rule 73 (vector_elements -> element .)
    COMMA           shift and go to state 156


state 129

    (75) element -> expresion .

    COMMA           reduce using rule 75 (element -> expresion .)
    LLAVEDER        reduce using rule 75 (element -> expresion .)


state 130

    (27) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 27 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 27 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 131

    (29) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 29 (print_expresion -> STRING COMMA print_args .)


state 132

    (30) print_args -> print_datos . COMMA print_args
    (31) print_args -> print_datos .

    COMMA           shift and go to state 157
    RPAREN          reduce using rule 31 (print_args -> print_datos .)


state 133

    (32) print_datos -> expresion .

    COMMA           reduce using rule 32 (print_datos -> expresion .)
    RPAREN          reduce using rule 32 (print_datos -> expresion .)


state 134

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET . PATHSEP NEWFUNC ENDLINE

    PATHSEP         shift and go to state 158


state 135

    (84) vector_methods -> VARIABLE DOT PUSH_VEC LPAREN expresion . RPAREN

    RPAREN          shift and go to state 159


state 136

    (85) vector_methods -> VARIABLE DOT POP_VEC LPAREN RPAREN .

    $end            reduce using rule 85 (vector_methods -> VARIABLE DOT POP_VEC LPAREN RPAREN .)
    LLAVEDER        reduce using rule 85 (vector_methods -> VARIABLE DOT POP_VEC LPAREN RPAREN .)


state 137

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 160


state 138

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 161


state 139

    (39) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 140

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (14) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (66) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (67) empty_vector -> . declare_vector VECT types_vector empty_vec
    (84) vector_methods -> . VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN
    (85) vector_methods -> . VARIABLE DOT POP_VEC LPAREN RPAREN
    (68) data_vector -> . declare_vector VECT types_vector vector_content
    (69) data_vector -> . declare_vector vector_content
    (70) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (16) declarador -> . VARIABLE
    (17) declarador -> . let_asig
    (15) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (79) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (80) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (18) let_asig -> . LET var_tipo
    (19) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 16
    LET             shift and go to state 17
    FOR             shift and go to state 22
    STRUCT          shift and go to state 23
    WHILE           shift and go to state 24
    VARIABLE        shift and go to state 18
    IF              shift and go to state 27
    ELSE            shift and go to state 28

    rust                           shift and go to state 162
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    declarador                     shift and go to state 14
    other_operators                shift and go to state 15
    hashset_insert                 shift and go to state 19
    hashset_union                  shift and go to state 20
    if_type                        shift and go to state 21
    declare_vector                 shift and go to state 25
    let_asig                       shift and go to state 26

state 141

    (54) f_comparacion -> U8 DOT . DOT U8

    DOT             shift and go to state 163


state 142

    (64) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN . ENDLINE

    ENDLINE         shift and go to state 164


state 143

    (62) argumentos_tipo -> tipos COMMA . argumentos_tipo
    (61) argumentos_tipo -> . tipos
    (62) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    tipos                          shift and go to state 114
    argumentos_tipo                shift and go to state 165

state 144

    (58) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos
    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    tipos                          shift and go to state 166

state 145

    (65) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .

    $end            reduce using rule 65 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)
    LLAVEDER        reduce using rule 65 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)


state 146

    (60) argumentos_juntos -> PUB VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 167


state 147

    (66) while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 66 (while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 66 (while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .)


state 148

    (81) empty_vec -> ASIGNAR VECT . PATHSEP NEWFUNC ENDLINE
    (83) empty_vec -> ASIGNAR VECT . PATHSEP FROM LPAREN RPAREN ENDLINE

    PATHSEP         shift and go to state 168


state 149

    (82) empty_vec -> ASIGNAR VECTMACRO . BRACKETL BRACKETR ENDLINE

    BRACKETL        shift and go to state 169


state 150

    (72) vector_content -> VECT PATHSEP FROM LPAREN . LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    LLAVEIZ         shift and go to state 170


state 151

    (77) types_vector -> LESST DATATYPES GREATER .

    ASIGNAR         reduce using rule 77 (types_vector -> LESST DATATYPES GREATER .)
    VECTMACRO       reduce using rule 77 (types_vector -> LESST DATATYPES GREATER .)
    VECT            reduce using rule 77 (types_vector -> LESST DATATYPES GREATER .)


state 152

    (78) types_vector -> LESST NUMDATATYPES GREATER .

    ASIGNAR         reduce using rule 78 (types_vector -> LESST NUMDATATYPES GREATER .)
    VECTMACRO       reduce using rule 78 (types_vector -> LESST NUMDATATYPES GREATER .)
    VECT            reduce using rule 78 (types_vector -> LESST NUMDATATYPES GREATER .)


state 153

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type . COMMA vector_elements LLAVEDER ENDLINE

    COMMA           shift and go to state 171


state 154

    (76) element_type -> U8 . NUMDATATYPES

    NUMDATATYPES    shift and go to state 172


state 155

    (71) vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER . ENDLINE

    ENDLINE         shift and go to state 173


state 156

    (74) vector_elements -> element COMMA . vector_elements
    (73) vector_elements -> . element
    (74) vector_elements -> . element COMMA vector_elements
    (75) element -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    element                        shift and go to state 128
    vector_elements                shift and go to state 174
    expresion                      shift and go to state 129

state 157

    (30) print_args -> print_datos COMMA . print_args
    (30) print_args -> . print_datos COMMA print_args
    (31) print_args -> . print_datos
    (32) print_datos -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    print_datos                    shift and go to state 132
    print_args                     shift and go to state 175
    expresion                      shift and go to state 133

state 158

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP . NEWFUNC ENDLINE

    NEWFUNC         shift and go to state 176


state 159

    (84) vector_methods -> VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN .

    $end            reduce using rule 84 (vector_methods -> VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN .)
    LLAVEDER        reduce using rule 84 (vector_methods -> VARIABLE DOT PUSH_VEC LPAREN expresion RPAREN .)


state 160

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 177


state 161

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 178


state 162

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 179


state 163

    (54) f_comparacion -> U8 DOT DOT . U8

    U8              shift and go to state 180


state 164

    (64) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .

    $end            reduce using rule 64 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 64 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)


state 165

    (62) argumentos_tipo -> tipos COMMA argumentos_tipo .

    RPAREN          reduce using rule 62 (argumentos_tipo -> tipos COMMA argumentos_tipo .)


state 166

    (58) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .
    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    LLAVEDER        reduce using rule 58 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 181


state 167

    (60) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (88) tipos -> . DATATYPES
    (89) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 98
    NUMDATATYPES    shift and go to state 99

    tipos                          shift and go to state 182

state 168

    (81) empty_vec -> ASIGNAR VECT PATHSEP . NEWFUNC ENDLINE
    (83) empty_vec -> ASIGNAR VECT PATHSEP . FROM LPAREN RPAREN ENDLINE

    NEWFUNC         shift and go to state 183
    FROM            shift and go to state 184


state 169

    (82) empty_vec -> ASIGNAR VECTMACRO BRACKETL . BRACKETR ENDLINE

    BRACKETR        shift and go to state 185


state 170

    (72) vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ . vector_elements LLAVEDER RPAREN ENDLINE
    (73) vector_elements -> . element
    (74) vector_elements -> . element COMMA vector_elements
    (75) element -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    vector_elements                shift and go to state 186
    element                        shift and go to state 128
    expresion                      shift and go to state 129

state 171

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA . vector_elements LLAVEDER ENDLINE
    (73) vector_elements -> . element
    (74) vector_elements -> . element COMMA vector_elements
    (75) element -> . expresion
    (86) expresion -> . STRING
    (87) expresion -> . U8

    STRING          shift and go to state 59
    U8              shift and go to state 60

    vector_elements                shift and go to state 187
    element                        shift and go to state 128
    expresion                      shift and go to state 129

state 172

    (76) element_type -> U8 NUMDATATYPES .

    COMMA           reduce using rule 76 (element_type -> U8 NUMDATATYPES .)


state 173

    (71) vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .

    $end            reduce using rule 71 (vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .)
    LLAVEDER        reduce using rule 71 (vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .)


state 174

    (74) vector_elements -> element COMMA vector_elements .

    LLAVEDER        reduce using rule 74 (vector_elements -> element COMMA vector_elements .)


state 175

    (30) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 30 (print_args -> print_datos COMMA print_args .)


state 176

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 188


state 177

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 36 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 36 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 178

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 189


state 179

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 56 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 56 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)


state 180

    (54) f_comparacion -> U8 DOT DOT U8 .

    LLAVEIZ         reduce using rule 54 (f_comparacion -> U8 DOT DOT U8 .)


state 181

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (58) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (60) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 115
    PUB             shift and go to state 117

    argumentos_juntos              shift and go to state 190

state 182

    (60) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    COMMA           shift and go to state 191


state 183

    (81) empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 192


state 184

    (83) empty_vec -> ASIGNAR VECT PATHSEP FROM . LPAREN RPAREN ENDLINE

    LPAREN          shift and go to state 193


state 185

    (82) empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR . ENDLINE

    ENDLINE         shift and go to state 194


state 186

    (72) vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements . LLAVEDER RPAREN ENDLINE

    LLAVEDER        shift and go to state 195


state 187

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements . LLAVEDER ENDLINE

    LLAVEDER        shift and go to state 196


state 188

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 33 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 33 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)


state 189

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 37 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 37 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)


state 190

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 59 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 191

    (60) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (58) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (60) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 115
    PUB             shift and go to state 117

    argumentos_juntos              shift and go to state 197

state 192

    (81) empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 81 (empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 81 (empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .)


state 193

    (83) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN . RPAREN ENDLINE

    RPAREN          shift and go to state 198


state 194

    (82) empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .

    $end            reduce using rule 82 (empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .)
    LLAVEDER        reduce using rule 82 (empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .)


state 195

    (72) vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER . RPAREN ENDLINE

    RPAREN          shift and go to state 199


state 196

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER . ENDLINE

    ENDLINE         shift and go to state 200


state 197

    (60) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 60 (argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 198

    (83) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN . ENDLINE

    ENDLINE         shift and go to state 201


state 199

    (72) vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN . ENDLINE

    ENDLINE         shift and go to state 202


state 200

    (70) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .

    $end            reduce using rule 70 (data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .)
    LLAVEDER        reduce using rule 70 (data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .)


state 201

    (83) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .

    $end            reduce using rule 83 (empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 83 (empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .)


state 202

    (72) vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .

    $end            reduce using rule 72 (vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 72 (vector_content -> VECT PATHSEP FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGNAR in state 18 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 63 resolved as shift
