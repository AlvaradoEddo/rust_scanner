Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BRACKETL
    BRACKETR
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTAINS_SLICE
    CONTIN
    CRATE
    DIVISION
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    ERRORPROP
    EXTERN
    FUNCTION
    GET_SLICE
    IMPL
    LESSEQ
    LOOP
    MAS
    MATCH
    MAYOR
    MAYORIGUAL
    MENOS
    MOD
    MODULO
    MOVE
    MULT
    NOT
    NUMBER
    OR
    POP_VEC
    PRINT
    PUB
    PUSH_VEC
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    VECTOR
    WHERE
    WHILE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> prints
Rule 3     rust -> hashset
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     rust -> for_loop
Rule 8     rust -> struct_s
Rule 9     asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 10    asignacion -> other_operators ENDLINE
Rule 11    other_operators -> VARIABLE oper_asig expresion
Rule 12    declarador -> VARIABLE
Rule 13    declarador -> let_asig
Rule 14    let_asig -> LET var_tipo
Rule 15    let_asig -> LET MUT var_tipo
Rule 16    var_tipo -> VARIABLE
Rule 17    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 18    tipos -> DATATYPES
Rule 19    tipos -> NUMDATATYPES
Rule 20    oper_asig -> ASIGNAR
Rule 21    oper_asig -> PLUSEQ
Rule 22    oper_asig -> MINUSEQ
Rule 23    oper_asig -> STAREQ
Rule 24    oper_asig -> SLASHEQ
Rule 25    expresion -> STRING
Rule 26    expresion -> U8
Rule 27    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 28    print_expresion -> STRING
Rule 29    print_expresion -> STRING COMMA print_args
Rule 30    print_args -> print_datos COMMA print_args
Rule 31    print_args -> print_datos
Rule 32    print_datos -> expresion
Rule 33    hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
Rule 34    hashfunc -> hashset_insert
Rule 35    hashfunc -> hashset_union
Rule 36    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 37    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 38    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 39    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 40    if_type -> IF
Rule 41    if_type -> ELSE IF
Rule 42    if_type -> ELSE
Rule 43    validations -> comparison
Rule 44    validations -> comparison ANDAND validations
Rule 45    validations -> comparison OROR validations
Rule 46    comparison -> VARIABLE signo_comp VARIABLE
Rule 47    comparison -> VARIABLE signo_comp U8
Rule 48    comparison -> U8 signo_comp VARIABLE
Rule 49    signo_comp -> GREATER
Rule 50    signo_comp -> LESST
Rule 51    signo_comp -> GREATEQ
Rule 52    signo_comp -> EQUAL
Rule 53    signo_comp -> DIFFERENT
Rule 54    f_comparacion -> U8 DOT DOT U8
Rule 55    f_comparacion -> VARIABLE
Rule 56    for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
Rule 57    struct_s -> STRUCT sent_stru
Rule 58    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos
Rule 59    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 60    argumentos_tipo -> tipos
Rule 61    argumentos_tipo -> tipos COMMA argumentos_tipo
Rule 62    sent_stru -> UNIT ENDLINE
Rule 63    sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
Rule 64    sent_stru -> LLAVEIZ argumentos_juntos LLAVEDER

Terminals, with rules where they appear

AND                  : 37
ANDAND               : 44
ARROW                : 
AS                   : 
ASIGNAR              : 9 20 33 38
ASIGNATION_TYPE      : 17 58 59
ASYNC                : 
AWAIT                : 
BRACKETL             : 
BRACKETR             : 
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 29 30 59 61
CONST                : 
CONTAINS_SLICE       : 
CONTIN               : 
CRATE                : 
DATATYPES            : 18
DIFFERENT            : 53
DIVISION             : 
DOLLAR               : 
DOT                  : 36 37 54 54
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 41 42
ENDLINE              : 9 10 27 33 36 37 38 62 63
ENUM                 : 
EQUAL                : 52
ERRORPROP            : 
EXTERN               : 
FOR                  : 56
FUNCTION             : 
GET_SLICE            : 
GREATEQ              : 51
GREATER              : 49
HASHSET              : 33
IF                   : 40 41
IMPL                 : 
IN                   : 56
INSERT_HASH          : 36
LESSEQ               : 
LESST                : 50
LET                  : 14 15 33
LLAVEDER             : 39 56 64
LLAVEIZ              : 39 56 64
LOOP                 : 
LPAREN               : 27 36 37 63
MAS                  : 
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 
MINUSEQ              : 22
MOD                  : 
MODULO               : 
MOVE                 : 
MULT                 : 
MUT                  : 15 33
NEWFUNC              : 33
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 19
OR                   : 
OROR                 : 45
PATHSEP              : 33
PLUSEQ               : 21
POP_VEC              : 
PRINT                : 
PRINTS               : 27
PUB                  : 
PUSH_VEC             : 
REF                  : 
RETURN               : 
RPAREN               : 27 36 37 63
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 24
STAREQ               : 23
STATIC               : 
STRING               : 25 28 29
STRUCT               : 57
SUPER                : 
TRAIT                : 
TUPLE                : 63
TYPE                 : 
U8                   : 26 47 48 54 54
UNION_HASH           : 37
UNIT                 : 62
UNSAFE               : 
USE                  : 
VARIABLE             : 11 12 16 17 33 36 37 37 46 46 47 48 55 56 58 59
VECTOR               : 
WHERE                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argumentos_juntos    : 59 64
argumentos_tipo      : 61 63
asignacion           : 1
comparison           : 43 44 45
conditional          : 5 38
conditional_asigned  : 6
declarador           : 9 38
expresion            : 9 11 32 36
f_comparacion        : 56
for_loop             : 7
hashfunc             : 4
hashset              : 3
hashset_insert       : 34
hashset_union        : 35
if_type              : 39
let_asig             : 13
oper_asig            : 11
other_operators      : 10
print_args           : 29 30
print_datos          : 30 31
print_expresion      : 27
prints               : 2
rust                 : 39 56 0
sent_stru            : 57
signo_comp           : 46 47 48
struct_s             : 8
tipos                : 17 58 59 60 61
validations          : 39 44 45
var_tipo             : 14 15

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (10) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (12) declarador -> . VARIABLE
    (13) declarador -> . let_asig
    (11) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (14) let_asig -> . LET var_tipo
    (15) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 12
    LET             shift and go to state 13
    FOR             shift and go to state 18
    STRUCT          shift and go to state 19
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    ELSE            shift and go to state 22

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    declarador                     shift and go to state 10
    other_operators                shift and go to state 11
    hashset_insert                 shift and go to state 15
    hashset_union                  shift and go to state 16
    if_type                        shift and go to state 17
    let_asig                       shift and go to state 20

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> prints .

    $end            reduce using rule 2 (rust -> prints .)
    LLAVEDER        reduce using rule 2 (rust -> prints .)


state 4

    (3) rust -> hashset .

    $end            reduce using rule 3 (rust -> hashset .)
    LLAVEDER        reduce using rule 3 (rust -> hashset .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) rust -> for_loop .

    $end            reduce using rule 7 (rust -> for_loop .)
    LLAVEDER        reduce using rule 7 (rust -> for_loop .)


state 9

    (8) rust -> struct_s .

    $end            reduce using rule 8 (rust -> struct_s .)
    LLAVEDER        reduce using rule 8 (rust -> struct_s .)


state 10

    (9) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (38) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 23


state 11

    (10) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 24


state 12

    (27) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 25


state 13

    (33) hashset -> LET . MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (14) let_asig -> LET . var_tipo
    (15) let_asig -> LET . MUT var_tipo
    (16) var_tipo -> . VARIABLE
    (17) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 26
    VARIABLE        shift and go to state 27

    var_tipo                       shift and go to state 28

state 14

    (12) declarador -> VARIABLE .
    (11) other_operators -> VARIABLE . oper_asig expresion
    (36) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (20) oper_asig -> . ASIGNAR
    (21) oper_asig -> . PLUSEQ
    (22) oper_asig -> . MINUSEQ
    (23) oper_asig -> . STAREQ
    (24) oper_asig -> . SLASHEQ

  ! shift/reduce conflict for ASIGNAR resolved as shift
    DOT             shift and go to state 30
    ASIGNAR         shift and go to state 31
    PLUSEQ          shift and go to state 32
    MINUSEQ         shift and go to state 33
    STAREQ          shift and go to state 34
    SLASHEQ         shift and go to state 35

  ! ASIGNAR         [ reduce using rule 12 (declarador -> VARIABLE .) ]

    oper_asig                      shift and go to state 29

state 15

    (34) hashfunc -> hashset_insert .

    $end            reduce using rule 34 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 34 (hashfunc -> hashset_insert .)


state 16

    (35) hashfunc -> hashset_union .

    $end            reduce using rule 35 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 35 (hashfunc -> hashset_union .)


state 17

    (39) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 38
    U8              shift and go to state 39

    validations                    shift and go to state 36
    comparison                     shift and go to state 37

state 18

    (56) for_loop -> FOR . VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 40


state 19

    (57) struct_s -> STRUCT . sent_stru
    (62) sent_stru -> . UNIT ENDLINE
    (63) sent_stru -> . TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
    (64) sent_stru -> . LLAVEIZ argumentos_juntos LLAVEDER

    UNIT            shift and go to state 42
    TUPLE           shift and go to state 43
    LLAVEIZ         shift and go to state 44

    sent_stru                      shift and go to state 41

state 20

    (13) declarador -> let_asig .

    ASIGNAR         reduce using rule 13 (declarador -> let_asig .)


state 21

    (40) if_type -> IF .

    VARIABLE        reduce using rule 40 (if_type -> IF .)
    U8              reduce using rule 40 (if_type -> IF .)


state 22

    (41) if_type -> ELSE . IF
    (42) if_type -> ELSE .

    IF              shift and go to state 45
    VARIABLE        reduce using rule 42 (if_type -> ELSE .)
    U8              reduce using rule 42 (if_type -> ELSE .)


state 23

    (9) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (38) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (25) expresion -> . STRING
    (26) expresion -> . U8
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE

    STRING          shift and go to state 48
    U8              shift and go to state 49
    IF              shift and go to state 21
    ELSE            shift and go to state 22

    expresion                      shift and go to state 46
    conditional                    shift and go to state 47
    if_type                        shift and go to state 17

state 24

    (10) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 10 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 10 (asignacion -> other_operators ENDLINE .)


state 25

    (27) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (28) print_expresion -> . STRING
    (29) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 51

    print_expresion                shift and go to state 50

state 26

    (33) hashset -> LET MUT . VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (15) let_asig -> LET MUT . var_tipo
    (16) var_tipo -> . VARIABLE
    (17) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 52

    var_tipo                       shift and go to state 53

state 27

    (16) var_tipo -> VARIABLE .
    (17) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

    ASIGNAR         reduce using rule 16 (var_tipo -> VARIABLE .)
    ASIGNATION_TYPE shift and go to state 54


state 28

    (14) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 14 (let_asig -> LET var_tipo .)


state 29

    (11) other_operators -> VARIABLE oper_asig . expresion
    (25) expresion -> . STRING
    (26) expresion -> . U8

    STRING          shift and go to state 48
    U8              shift and go to state 49

    expresion                      shift and go to state 55

state 30

    (36) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    INSERT_HASH     shift and go to state 56
    UNION_HASH      shift and go to state 57


state 31

    (20) oper_asig -> ASIGNAR .

    STRING          reduce using rule 20 (oper_asig -> ASIGNAR .)
    U8              reduce using rule 20 (oper_asig -> ASIGNAR .)


state 32

    (21) oper_asig -> PLUSEQ .

    STRING          reduce using rule 21 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 21 (oper_asig -> PLUSEQ .)


state 33

    (22) oper_asig -> MINUSEQ .

    STRING          reduce using rule 22 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 22 (oper_asig -> MINUSEQ .)


state 34

    (23) oper_asig -> STAREQ .

    STRING          reduce using rule 23 (oper_asig -> STAREQ .)
    U8              reduce using rule 23 (oper_asig -> STAREQ .)


state 35

    (24) oper_asig -> SLASHEQ .

    STRING          reduce using rule 24 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 24 (oper_asig -> SLASHEQ .)


state 36

    (39) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 58


state 37

    (43) validations -> comparison .
    (44) validations -> comparison . ANDAND validations
    (45) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 43 (validations -> comparison .)
    ANDAND          shift and go to state 59
    OROR            shift and go to state 60


state 38

    (46) comparison -> VARIABLE . signo_comp VARIABLE
    (47) comparison -> VARIABLE . signo_comp U8
    (49) signo_comp -> . GREATER
    (50) signo_comp -> . LESST
    (51) signo_comp -> . GREATEQ
    (52) signo_comp -> . EQUAL
    (53) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 62
    LESST           shift and go to state 63
    GREATEQ         shift and go to state 64
    EQUAL           shift and go to state 65
    DIFFERENT       shift and go to state 66

    signo_comp                     shift and go to state 61

state 39

    (48) comparison -> U8 . signo_comp VARIABLE
    (49) signo_comp -> . GREATER
    (50) signo_comp -> . LESST
    (51) signo_comp -> . GREATEQ
    (52) signo_comp -> . EQUAL
    (53) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 62
    LESST           shift and go to state 63
    GREATEQ         shift and go to state 64
    EQUAL           shift and go to state 65
    DIFFERENT       shift and go to state 66

    signo_comp                     shift and go to state 67

state 40

    (56) for_loop -> FOR VARIABLE . IN f_comparacion LLAVEIZ rust LLAVEDER

    IN              shift and go to state 68


state 41

    (57) struct_s -> STRUCT sent_stru .

    $end            reduce using rule 57 (struct_s -> STRUCT sent_stru .)
    LLAVEDER        reduce using rule 57 (struct_s -> STRUCT sent_stru .)


state 42

    (62) sent_stru -> UNIT . ENDLINE

    ENDLINE         shift and go to state 69


state 43

    (63) sent_stru -> TUPLE . LPAREN argumentos_tipo RPAREN ENDLINE

    LPAREN          shift and go to state 70


state 44

    (64) sent_stru -> LLAVEIZ . argumentos_juntos LLAVEDER
    (58) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 72

    argumentos_juntos              shift and go to state 71

state 45

    (41) if_type -> ELSE IF .

    VARIABLE        reduce using rule 41 (if_type -> ELSE IF .)
    U8              reduce using rule 41 (if_type -> ELSE IF .)


state 46

    (9) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 73


state 47

    (38) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 74


state 48

    (25) expresion -> STRING .

    ENDLINE         reduce using rule 25 (expresion -> STRING .)
    COMMA           reduce using rule 25 (expresion -> STRING .)
    RPAREN          reduce using rule 25 (expresion -> STRING .)


state 49

    (26) expresion -> U8 .

    ENDLINE         reduce using rule 26 (expresion -> U8 .)
    COMMA           reduce using rule 26 (expresion -> U8 .)
    RPAREN          reduce using rule 26 (expresion -> U8 .)


state 50

    (27) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 75


state 51

    (28) print_expresion -> STRING .
    (29) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 28 (print_expresion -> STRING .)
    COMMA           shift and go to state 76


state 52

    (33) hashset -> LET MUT VARIABLE . ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (16) var_tipo -> VARIABLE .
    (17) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 77
    ASIGNATION_TYPE shift and go to state 54

  ! ASIGNAR         [ reduce using rule 16 (var_tipo -> VARIABLE .) ]


state 53

    (15) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 15 (let_asig -> LET MUT var_tipo .)


state 54

    (17) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (18) tipos -> . DATATYPES
    (19) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 79
    NUMDATATYPES    shift and go to state 80

    tipos                          shift and go to state 78

state 55

    (11) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 11 (other_operators -> VARIABLE oper_asig expresion .)


state 56

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 81


state 57

    (37) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 82


state 58

    (39) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (10) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (12) declarador -> . VARIABLE
    (13) declarador -> . let_asig
    (11) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (14) let_asig -> . LET var_tipo
    (15) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 12
    LET             shift and go to state 13
    FOR             shift and go to state 18
    STRUCT          shift and go to state 19
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    ELSE            shift and go to state 22

    if_type                        shift and go to state 17
    rust                           shift and go to state 83
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    declarador                     shift and go to state 10
    other_operators                shift and go to state 11
    hashset_insert                 shift and go to state 15
    hashset_union                  shift and go to state 16
    let_asig                       shift and go to state 20

state 59

    (44) validations -> comparison ANDAND . validations
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 38
    U8              shift and go to state 39

    comparison                     shift and go to state 37
    validations                    shift and go to state 84

state 60

    (45) validations -> comparison OROR . validations
    (43) validations -> . comparison
    (44) validations -> . comparison ANDAND validations
    (45) validations -> . comparison OROR validations
    (46) comparison -> . VARIABLE signo_comp VARIABLE
    (47) comparison -> . VARIABLE signo_comp U8
    (48) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 38
    U8              shift and go to state 39

    comparison                     shift and go to state 37
    validations                    shift and go to state 85

state 61

    (46) comparison -> VARIABLE signo_comp . VARIABLE
    (47) comparison -> VARIABLE signo_comp . U8

    VARIABLE        shift and go to state 86
    U8              shift and go to state 87


state 62

    (49) signo_comp -> GREATER .

    VARIABLE        reduce using rule 49 (signo_comp -> GREATER .)
    U8              reduce using rule 49 (signo_comp -> GREATER .)


state 63

    (50) signo_comp -> LESST .

    VARIABLE        reduce using rule 50 (signo_comp -> LESST .)
    U8              reduce using rule 50 (signo_comp -> LESST .)


state 64

    (51) signo_comp -> GREATEQ .

    VARIABLE        reduce using rule 51 (signo_comp -> GREATEQ .)
    U8              reduce using rule 51 (signo_comp -> GREATEQ .)


state 65

    (52) signo_comp -> EQUAL .

    VARIABLE        reduce using rule 52 (signo_comp -> EQUAL .)
    U8              reduce using rule 52 (signo_comp -> EQUAL .)


state 66

    (53) signo_comp -> DIFFERENT .

    VARIABLE        reduce using rule 53 (signo_comp -> DIFFERENT .)
    U8              reduce using rule 53 (signo_comp -> DIFFERENT .)


state 67

    (48) comparison -> U8 signo_comp . VARIABLE

    VARIABLE        shift and go to state 88


state 68

    (56) for_loop -> FOR VARIABLE IN . f_comparacion LLAVEIZ rust LLAVEDER
    (54) f_comparacion -> . U8 DOT DOT U8
    (55) f_comparacion -> . VARIABLE

    U8              shift and go to state 91
    VARIABLE        shift and go to state 89

    f_comparacion                  shift and go to state 90

state 69

    (62) sent_stru -> UNIT ENDLINE .

    $end            reduce using rule 62 (sent_stru -> UNIT ENDLINE .)
    LLAVEDER        reduce using rule 62 (sent_stru -> UNIT ENDLINE .)


state 70

    (63) sent_stru -> TUPLE LPAREN . argumentos_tipo RPAREN ENDLINE
    (60) argumentos_tipo -> . tipos
    (61) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (18) tipos -> . DATATYPES
    (19) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 79
    NUMDATATYPES    shift and go to state 80

    argumentos_tipo                shift and go to state 92
    tipos                          shift and go to state 93

state 71

    (64) sent_stru -> LLAVEIZ argumentos_juntos . LLAVEDER

    LLAVEDER        shift and go to state 94


state 72

    (58) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 95


state 73

    (9) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 9 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 9 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 74

    (38) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 38 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 38 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 75

    (27) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 96


state 76

    (29) print_expresion -> STRING COMMA . print_args
    (30) print_args -> . print_datos COMMA print_args
    (31) print_args -> . print_datos
    (32) print_datos -> . expresion
    (25) expresion -> . STRING
    (26) expresion -> . U8

    STRING          shift and go to state 48
    U8              shift and go to state 49

    print_args                     shift and go to state 97
    print_datos                    shift and go to state 98
    expresion                      shift and go to state 99

state 77

    (33) hashset -> LET MUT VARIABLE ASIGNAR . HASHSET PATHSEP NEWFUNC ENDLINE

    HASHSET         shift and go to state 100


state 78

    (17) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 17 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 79

    (18) tipos -> DATATYPES .

    ASIGNAR         reduce using rule 18 (tipos -> DATATYPES .)
    COMMA           reduce using rule 18 (tipos -> DATATYPES .)
    RPAREN          reduce using rule 18 (tipos -> DATATYPES .)
    LLAVEDER        reduce using rule 18 (tipos -> DATATYPES .)


state 80

    (19) tipos -> NUMDATATYPES .

    ASIGNAR         reduce using rule 19 (tipos -> NUMDATATYPES .)
    COMMA           reduce using rule 19 (tipos -> NUMDATATYPES .)
    RPAREN          reduce using rule 19 (tipos -> NUMDATATYPES .)
    LLAVEDER        reduce using rule 19 (tipos -> NUMDATATYPES .)


state 81

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (25) expresion -> . STRING
    (26) expresion -> . U8

    STRING          shift and go to state 48
    U8              shift and go to state 49

    expresion                      shift and go to state 101

state 82

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 102


state 83

    (39) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 103


state 84

    (44) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 44 (validations -> comparison ANDAND validations .)


state 85

    (45) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 45 (validations -> comparison OROR validations .)


state 86

    (46) comparison -> VARIABLE signo_comp VARIABLE .

    ANDAND          reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)
    OROR            reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 46 (comparison -> VARIABLE signo_comp VARIABLE .)


state 87

    (47) comparison -> VARIABLE signo_comp U8 .

    ANDAND          reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)
    OROR            reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)
    LLAVEIZ         reduce using rule 47 (comparison -> VARIABLE signo_comp U8 .)


state 88

    (48) comparison -> U8 signo_comp VARIABLE .

    ANDAND          reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)
    OROR            reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 48 (comparison -> U8 signo_comp VARIABLE .)


state 89

    (55) f_comparacion -> VARIABLE .

    LLAVEIZ         reduce using rule 55 (f_comparacion -> VARIABLE .)


state 90

    (56) for_loop -> FOR VARIABLE IN f_comparacion . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 104


state 91

    (54) f_comparacion -> U8 . DOT DOT U8

    DOT             shift and go to state 105


state 92

    (63) sent_stru -> TUPLE LPAREN argumentos_tipo . RPAREN ENDLINE

    RPAREN          shift and go to state 106


state 93

    (60) argumentos_tipo -> tipos .
    (61) argumentos_tipo -> tipos . COMMA argumentos_tipo

    RPAREN          reduce using rule 60 (argumentos_tipo -> tipos .)
    COMMA           shift and go to state 107


state 94

    (64) sent_stru -> LLAVEIZ argumentos_juntos LLAVEDER .

    $end            reduce using rule 64 (sent_stru -> LLAVEIZ argumentos_juntos LLAVEDER .)
    LLAVEDER        reduce using rule 64 (sent_stru -> LLAVEIZ argumentos_juntos LLAVEDER .)


state 95

    (58) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos
    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (18) tipos -> . DATATYPES
    (19) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 79
    NUMDATATYPES    shift and go to state 80

    tipos                          shift and go to state 108

state 96

    (27) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 27 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 27 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 97

    (29) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 29 (print_expresion -> STRING COMMA print_args .)


state 98

    (30) print_args -> print_datos . COMMA print_args
    (31) print_args -> print_datos .

    COMMA           shift and go to state 109
    RPAREN          reduce using rule 31 (print_args -> print_datos .)


state 99

    (32) print_datos -> expresion .

    COMMA           reduce using rule 32 (print_datos -> expresion .)
    RPAREN          reduce using rule 32 (print_datos -> expresion .)


state 100

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET . PATHSEP NEWFUNC ENDLINE

    PATHSEP         shift and go to state 110


state 101

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 111


state 102

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 112


state 103

    (39) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 39 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 104

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (10) asignacion -> . other_operators ENDLINE
    (27) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (33) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (34) hashfunc -> . hashset_insert
    (35) hashfunc -> . hashset_union
    (39) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (56) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (57) struct_s -> . STRUCT sent_stru
    (12) declarador -> . VARIABLE
    (13) declarador -> . let_asig
    (11) other_operators -> . VARIABLE oper_asig expresion
    (36) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (37) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (40) if_type -> . IF
    (41) if_type -> . ELSE IF
    (42) if_type -> . ELSE
    (14) let_asig -> . LET var_tipo
    (15) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 12
    LET             shift and go to state 13
    FOR             shift and go to state 18
    STRUCT          shift and go to state 19
    VARIABLE        shift and go to state 14
    IF              shift and go to state 21
    ELSE            shift and go to state 22

    rust                           shift and go to state 113
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    declarador                     shift and go to state 10
    other_operators                shift and go to state 11
    hashset_insert                 shift and go to state 15
    hashset_union                  shift and go to state 16
    if_type                        shift and go to state 17
    let_asig                       shift and go to state 20

state 105

    (54) f_comparacion -> U8 DOT . DOT U8

    DOT             shift and go to state 114


state 106

    (63) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN . ENDLINE

    ENDLINE         shift and go to state 115


state 107

    (61) argumentos_tipo -> tipos COMMA . argumentos_tipo
    (60) argumentos_tipo -> . tipos
    (61) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (18) tipos -> . DATATYPES
    (19) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 79
    NUMDATATYPES    shift and go to state 80

    tipos                          shift and go to state 93
    argumentos_tipo                shift and go to state 116

state 108

    (58) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .
    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    LLAVEDER        reduce using rule 58 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 117


state 109

    (30) print_args -> print_datos COMMA . print_args
    (30) print_args -> . print_datos COMMA print_args
    (31) print_args -> . print_datos
    (32) print_datos -> . expresion
    (25) expresion -> . STRING
    (26) expresion -> . U8

    STRING          shift and go to state 48
    U8              shift and go to state 49

    print_datos                    shift and go to state 98
    print_args                     shift and go to state 118
    expresion                      shift and go to state 99

state 110

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP . NEWFUNC ENDLINE

    NEWFUNC         shift and go to state 119


state 111

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 120


state 112

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 121


state 113

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 122


state 114

    (54) f_comparacion -> U8 DOT DOT . U8

    U8              shift and go to state 123


state 115

    (63) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .

    $end            reduce using rule 63 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 63 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)


state 116

    (61) argumentos_tipo -> tipos COMMA argumentos_tipo .

    RPAREN          reduce using rule 61 (argumentos_tipo -> tipos COMMA argumentos_tipo .)


state 117

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (58) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (59) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 72

    argumentos_juntos              shift and go to state 124

state 118

    (30) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 30 (print_args -> print_datos COMMA print_args .)


state 119

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 125


state 120

    (36) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 36 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 36 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 121

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 126


state 122

    (56) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 56 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 56 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)


state 123

    (54) f_comparacion -> U8 DOT DOT U8 .

    LLAVEIZ         reduce using rule 54 (f_comparacion -> U8 DOT DOT U8 .)


state 124

    (59) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 59 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 125

    (33) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 33 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 33 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)


state 126

    (37) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 37 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 37 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGNAR in state 14 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 52 resolved as shift
