Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTIN
    CRATE
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    ERRORPROP
    EXTERN
    IMPL
    LESSEQ
    LOOP
    MATCH
    MAYOR
    MAYORIGUAL
    MOD
    MOVE
    NOT
    NUMBER
    OR
    PRINT
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    WHERE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> asignacion_sintipo
Rule 3     rust -> prints
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     rust -> for_loop
Rule 8     rust -> struct_s
Rule 9     rust -> while_loop
Rule 10    rust -> empty_vector
Rule 11    rust -> vector_methods
Rule 12    rust -> data_vector
Rule 13    rust -> slice_get
Rule 14    rust -> slice_contains
Rule 15    rust -> read_data
Rule 16    rust -> function
Rule 17    rust -> empty_function
Rule 18    asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 19    asignacion -> other_operators ENDLINE
Rule 20    asignacion_sintipo -> declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
Rule 21    other_operators -> VARIABLE oper_asig expresion
Rule 22    declarador -> VARIABLE
Rule 23    declarador -> let_asig
Rule 24    declarador_sintipo -> VARIABLE
Rule 25    declarador_sintipo -> let_asig_sintipo
Rule 26    let_asig -> LET var_tipo
Rule 27    let_asig -> LET MUT var_tipo
Rule 28    let_asig_sintipo -> LET MUT VARIABLE
Rule 29    let_asig_sintipo -> LET VARIABLE
Rule 30    var_tipo -> VARIABLE
Rule 31    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 32    oper_asig -> ASIGNAR
Rule 33    oper_asig -> PLUSEQ
Rule 34    oper_asig -> MINUSEQ
Rule 35    oper_asig -> STAREQ
Rule 36    oper_asig -> SLASHEQ
Rule 37    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 38    print_expresion -> STRING
Rule 39    print_expresion -> STRING COMMA print_args
Rule 40    print_args -> print_datos COMMA print_args
Rule 41    print_args -> print_datos
Rule 42    print_datos -> expresion
Rule 43    hashset -> HASHSET PATHSEP NEWFUNC
Rule 44    hashfunc -> hashset_insert
Rule 45    hashfunc -> hashset_union
Rule 46    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 47    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 48    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 49    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 50    if_type -> IF
Rule 51    if_type -> ELSE IF
Rule 52    if_type -> ELSE
Rule 53    validations -> comparison
Rule 54    validations -> comparison ANDAND validations
Rule 55    validations -> comparison OROR validations
Rule 56    comparison -> VARIABLE signo_comp VARIABLE
Rule 57    comparison -> VARIABLE signo_comp U8
Rule 58    comparison -> U8 signo_comp VARIABLE
Rule 59    signo_comp -> GREATER
Rule 60    signo_comp -> LESST
Rule 61    signo_comp -> GREATEQ
Rule 62    signo_comp -> EQUAL
Rule 63    signo_comp -> DIFFERENT
Rule 64    f_comparacion -> rango
Rule 65    f_comparacion -> VARIABLE
Rule 66    for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
Rule 67    struct_s -> STRUCT sent_stru
Rule 68    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos
Rule 69    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 70    argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 71    argumentos_tipo -> tipos
Rule 72    argumentos_tipo -> tipos COMMA argumentos_tipo
Rule 73    sent_stru -> UNIT ENDLINE
Rule 74    sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
Rule 75    sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER
Rule 76    op_mat -> art_exp
Rule 77    op_mat -> VARIABLE signo_arit art_exp
Rule 78    op_mat -> U8 signo_arit art_exp
Rule 79    art_exp -> VARIABLE signo_arit VARIABLE
Rule 80    art_exp -> U8 signo_arit VARIABLE
Rule 81    art_exp -> VARIABLE signo_arit U8
Rule 82    art_exp -> U8 signo_arit U8
Rule 83    signo_arit -> MAS
Rule 84    signo_arit -> MENOS
Rule 85    signo_arit -> MULT
Rule 86    signo_arit -> DIVISION
Rule 87    signo_arit -> MODULO
Rule 88    rango -> U8 DOT DOT U8
Rule 89    slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR
Rule 90    slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
Rule 91    valor_get -> rango
Rule 92    valor_get -> U8
Rule 93    slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
Rule 94    empty -> <empty>
Rule 95    while_loop -> WHILE validations LLAVEIZ rust LLAVEDER
Rule 96    read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
Rule 97    reference -> AND empty MUT VARIABLE
Rule 98    function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
Rule 99    empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
Rule 100   arguments -> VARIABLE ASIGNATION_TYPE tipos
Rule 101   arguments -> VARIABLE ASIGNATION_TYPE tipos COMMA arguments
Rule 102   empty_vector -> declare_vector VECT types_vector empty_vec
Rule 103   data_vector -> declare_vector VECT types_vector vector_content
Rule 104   data_vector -> declare_vector vector_content
Rule 105   data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
Rule 106   vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
Rule 107   vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
Rule 108   vector_elements -> element
Rule 109   vector_elements -> element COMMA vector_elements
Rule 110   element -> expresion
Rule 111   element_type -> U8 NUMDATATYPES
Rule 112   types_vector -> LESST DATATYPES GREATER
Rule 113   types_vector -> LESST NUMDATATYPES GREATER
Rule 114   declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE
Rule 115   declare_vector -> LET VARIABLE ASIGNATION_TYPE
Rule 116   empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE
Rule 117   empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE
Rule 118   empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE
Rule 119   vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
Rule 120   vector_methods -> VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
Rule 121   tipos -> DATATYPES
Rule 122   tipos -> NUMDATATYPES
Rule 123   expresion -> STRING
Rule 124   expresion -> U8
Rule 125   expresion -> F32
Rule 126   expresion_sintipo -> hashset
Rule 127   expresion_sintipo -> op_mat
Rule 128   expresion_sintipo -> slice_exp
Rule 129   expresion_sintipo -> expresion

Terminals, with rules where they appear

AND                  : 47 89 93 97
ANDAND               : 54
ARROW                : 
AS                   : 
ASIGNAR              : 18 20 32 48 105 116 117 118
ASIGNATION_TYPE      : 31 68 69 70 100 101 114 115
ASYNC                : 
AWAIT                : 
BRACKETL             : 89 117
BRACKETR             : 89 117
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 39 40 69 70 72 101 105 109
CONST                : 
CONTAINS_SLICE       : 93
CONTIN               : 
CRATE                : 
DATATYPES            : 112 121
DIFFERENT            : 63
DIVISION             : 86
DOLLAR               : 
DOT                  : 46 47 88 88 90 93 96 119 120
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 51 52
ENDLINE              : 18 19 20 37 46 47 48 73 74 96 105 106 107 116 117 118
ENUM                 : 
EQUAL                : 62
ERRORPROP            : 
EXTERN               : 
F32                  : 125
FOR                  : 66
FROM                 : 107 118
FUNCTION             : 98 99
GET_SLICE            : 90
GREATEQ              : 61
GREATER              : 59 112 113
HASHSET              : 43
IF                   : 50 51
IMPL                 : 
IN                   : 66
INSERT_HASH          : 46
IO                   : 96
LESSEQ               : 
LESST                : 60 112 113
LET                  : 26 27 28 29 114 115
LLAVEDER             : 49 66 75 95 98 99 105 106 107
LLAVEIZ              : 49 66 75 95 98 99 105 106 107
LOOP                 : 
LPAREN               : 37 46 47 74 90 93 96 96 98 99 107 118 119 120
MAS                  : 83
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 84
MINUSEQ              : 34
MOD                  : 
MODULO               : 87
MOVE                 : 
MULT                 : 85
MUT                  : 27 28 97 114
NEWFUNC              : 43 116
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 111 113 122
OR                   : 
OROR                 : 55
PATHSEP              : 43 96 107 116 118
PLUSEQ               : 33
POP_VEC              : 120
PRINT                : 
PRINTS               : 37
PUB                  : 70
PUSH_VEC             : 119
READ                 : 96
REF                  : 
RETURN               : 
RPAREN               : 37 46 47 74 90 93 96 96 98 99 107 118 119 120
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 36
STAREQ               : 35
STATIC               : 
STDIN                : 96
STRING               : 38 39 123
STRUCT               : 67
SUPER                : 
TRAIT                : 
TUPLE                : 74
TYPE                 : 
U8                   : 57 58 78 80 81 82 82 88 88 92 93 111 124
UNION_HASH           : 47
UNIT                 : 73
UNSAFE               : 
USE                  : 
VARIABLE             : 21 22 24 28 29 30 31 46 47 47 56 56 57 58 65 66 68 69 70 75 77 79 79 80 81 89 90 93 97 98 99 100 101 114 115 119 120
VECT                 : 102 103 107 116 118
VECTMACRO            : 105 106 117
WHERE                : 
WHILE                : 95
error                : 

Nonterminals, with rules where they appear

argumentos_juntos    : 69 70 75
argumentos_tipo      : 72 74
arguments            : 98 101
art_exp              : 76 77 78
asignacion           : 1
asignacion_sintipo   : 2
comparison           : 53 54 55
conditional          : 5 48
conditional_asigned  : 6
data_vector          : 12
declarador           : 18 48
declarador_sintipo   : 20
declare_vector       : 102 103 104 105
element              : 108 109
element_type         : 105
empty                : 89 89 90 90 90 93 93 93 96 96 96 96 97 107 107 119 119 120 120
empty_function       : 17
empty_vec            : 102
empty_vector         : 10
expresion            : 18 21 42 46 110 119 129
expresion_sintipo    : 20
f_comparacion        : 66
for_loop             : 7
function             : 16
hashfunc             : 4
hashset              : 126
hashset_insert       : 44
hashset_union        : 45
if_type              : 49
let_asig             : 23
let_asig_sintipo     : 25
op_mat               : 127
oper_asig            : 21
other_operators      : 19
print_args           : 39 40
print_datos          : 40 41
print_expresion      : 37
prints               : 3
rango                : 64 89 91
read_data            : 15
reference            : 96
rust                 : 49 66 95 98 99 0
sent_stru            : 67
signo_arit           : 77 78 79 80 81 82
signo_comp           : 56 57 58
slice_contains       : 14
slice_exp            : 128
slice_get            : 13
struct_s             : 8
tipos                : 31 68 69 70 71 72 100 101
types_vector         : 102 103
validations          : 49 54 55 95
valor_get            : 90
var_tipo             : 26 27
vector_content       : 103 104
vector_elements      : 105 106 107 109
vector_methods       : 11
while_loop           : 9

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    if_type                        shift and go to state 25
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> asignacion_sintipo .

    $end            reduce using rule 2 (rust -> asignacion_sintipo .)
    LLAVEDER        reduce using rule 2 (rust -> asignacion_sintipo .)


state 4

    (3) rust -> prints .

    $end            reduce using rule 3 (rust -> prints .)
    LLAVEDER        reduce using rule 3 (rust -> prints .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) rust -> for_loop .

    $end            reduce using rule 7 (rust -> for_loop .)
    LLAVEDER        reduce using rule 7 (rust -> for_loop .)


state 9

    (8) rust -> struct_s .

    $end            reduce using rule 8 (rust -> struct_s .)
    LLAVEDER        reduce using rule 8 (rust -> struct_s .)


state 10

    (9) rust -> while_loop .

    $end            reduce using rule 9 (rust -> while_loop .)
    LLAVEDER        reduce using rule 9 (rust -> while_loop .)


state 11

    (10) rust -> empty_vector .

    $end            reduce using rule 10 (rust -> empty_vector .)
    LLAVEDER        reduce using rule 10 (rust -> empty_vector .)


state 12

    (11) rust -> vector_methods .

    $end            reduce using rule 11 (rust -> vector_methods .)
    LLAVEDER        reduce using rule 11 (rust -> vector_methods .)


state 13

    (12) rust -> data_vector .

    $end            reduce using rule 12 (rust -> data_vector .)
    LLAVEDER        reduce using rule 12 (rust -> data_vector .)


state 14

    (13) rust -> slice_get .

    $end            reduce using rule 13 (rust -> slice_get .)
    LLAVEDER        reduce using rule 13 (rust -> slice_get .)


state 15

    (14) rust -> slice_contains .

    $end            reduce using rule 14 (rust -> slice_contains .)
    LLAVEDER        reduce using rule 14 (rust -> slice_contains .)


state 16

    (15) rust -> read_data .

    $end            reduce using rule 15 (rust -> read_data .)
    LLAVEDER        reduce using rule 15 (rust -> read_data .)


state 17

    (16) rust -> function .

    $end            reduce using rule 16 (rust -> function .)
    LLAVEDER        reduce using rule 16 (rust -> function .)


state 18

    (17) rust -> empty_function .

    $end            reduce using rule 17 (rust -> empty_function .)
    LLAVEDER        reduce using rule 17 (rust -> empty_function .)


state 19

    (18) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (48) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 38


state 20

    (19) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 39


state 21

    (20) asignacion_sintipo -> declarador_sintipo . ASIGNAR expresion_sintipo ENDLINE

    ASIGNAR         shift and go to state 40


state 22

    (37) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 41


state 23

    (44) hashfunc -> hashset_insert .

    $end            reduce using rule 44 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 44 (hashfunc -> hashset_insert .)


state 24

    (45) hashfunc -> hashset_union .

    $end            reduce using rule 45 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 45 (hashfunc -> hashset_union .)


state 25

    (49) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (53) validations -> . comparison
    (54) validations -> . comparison ANDAND validations
    (55) validations -> . comparison OROR validations
    (56) comparison -> . VARIABLE signo_comp VARIABLE
    (57) comparison -> . VARIABLE signo_comp U8
    (58) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    validations                    shift and go to state 42
    comparison                     shift and go to state 43

state 26

    (66) for_loop -> FOR . VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 46


state 27

    (119) vector_methods -> VARIABLE . empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> VARIABLE . empty DOT empty POP_VEC LPAREN RPAREN
    (90) slice_get -> VARIABLE . empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> VARIABLE . empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (22) declarador -> VARIABLE .
    (21) other_operators -> VARIABLE . oper_asig expresion
    (24) declarador_sintipo -> VARIABLE .
    (46) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (94) empty -> .
    (32) oper_asig -> . ASIGNAR
    (33) oper_asig -> . PLUSEQ
    (34) oper_asig -> . MINUSEQ
    (35) oper_asig -> . STAREQ
    (36) oper_asig -> . SLASHEQ

  ! reduce/reduce conflict for ASIGNAR resolved using rule 22 (declarador -> VARIABLE .)
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
    DOT             shift and go to state 48
    ASIGNAR         shift and go to state 50
    PLUSEQ          shift and go to state 51
    MINUSEQ         shift and go to state 52
    STAREQ          shift and go to state 53
    SLASHEQ         shift and go to state 54

  ! ASIGNAR         [ reduce using rule 22 (declarador -> VARIABLE .) ]
  ! ASIGNAR         [ reduce using rule 24 (declarador_sintipo -> VARIABLE .) ]
  ! DOT             [ reduce using rule 94 (empty -> .) ]

    empty                          shift and go to state 47
    oper_asig                      shift and go to state 49

state 28

    (67) struct_s -> STRUCT . sent_stru
    (73) sent_stru -> . UNIT ENDLINE
    (74) sent_stru -> . TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
    (75) sent_stru -> . VARIABLE LLAVEIZ argumentos_juntos LLAVEDER

    UNIT            shift and go to state 56
    TUPLE           shift and go to state 57
    VARIABLE        shift and go to state 58

    sent_stru                      shift and go to state 55

state 29

    (95) while_loop -> WHILE . validations LLAVEIZ rust LLAVEDER
    (53) validations -> . comparison
    (54) validations -> . comparison ANDAND validations
    (55) validations -> . comparison OROR validations
    (56) comparison -> . VARIABLE signo_comp VARIABLE
    (57) comparison -> . VARIABLE signo_comp U8
    (58) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    validations                    shift and go to state 59
    comparison                     shift and go to state 43

state 30

    (102) empty_vector -> declare_vector . VECT types_vector empty_vec
    (103) data_vector -> declare_vector . VECT types_vector vector_content
    (104) data_vector -> declare_vector . vector_content
    (105) data_vector -> declare_vector . ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (106) vector_content -> . VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
    (107) vector_content -> . VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    VECT            shift and go to state 60
    ASIGNAR         shift and go to state 62
    VECTMACRO       shift and go to state 63

    vector_content                 shift and go to state 61

state 31

    (96) read_data -> IO . empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (94) empty -> .

    PATHSEP         reduce using rule 94 (empty -> .)

    empty                          shift and go to state 64

state 32

    (98) function -> FUNCTION . VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> FUNCTION . VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 65


state 33

    (23) declarador -> let_asig .

    ASIGNAR         reduce using rule 23 (declarador -> let_asig .)


state 34

    (25) declarador_sintipo -> let_asig_sintipo .

    ASIGNAR         reduce using rule 25 (declarador_sintipo -> let_asig_sintipo .)


state 35

    (50) if_type -> IF .

    VARIABLE        reduce using rule 50 (if_type -> IF .)
    U8              reduce using rule 50 (if_type -> IF .)


state 36

    (51) if_type -> ELSE . IF
    (52) if_type -> ELSE .

    IF              shift and go to state 66
    VARIABLE        reduce using rule 52 (if_type -> ELSE .)
    U8              reduce using rule 52 (if_type -> ELSE .)


state 37

    (114) declare_vector -> LET . MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> LET . VARIABLE ASIGNATION_TYPE
    (26) let_asig -> LET . var_tipo
    (27) let_asig -> LET . MUT var_tipo
    (28) let_asig_sintipo -> LET . MUT VARIABLE
    (29) let_asig_sintipo -> LET . VARIABLE
    (30) var_tipo -> . VARIABLE
    (31) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 67
    VARIABLE        shift and go to state 68

    var_tipo                       shift and go to state 69

state 38

    (18) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (48) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74
    IF              shift and go to state 35
    ELSE            shift and go to state 36

    expresion                      shift and go to state 70
    conditional                    shift and go to state 71
    if_type                        shift and go to state 25

state 39

    (19) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 19 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 19 (asignacion -> other_operators ENDLINE .)


state 40

    (20) asignacion_sintipo -> declarador_sintipo ASIGNAR . expresion_sintipo ENDLINE
    (126) expresion_sintipo -> . hashset
    (127) expresion_sintipo -> . op_mat
    (128) expresion_sintipo -> . slice_exp
    (129) expresion_sintipo -> . expresion
    (43) hashset -> . HASHSET PATHSEP NEWFUNC
    (76) op_mat -> . art_exp
    (77) op_mat -> . VARIABLE signo_arit art_exp
    (78) op_mat -> . U8 signo_arit art_exp
    (89) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32
    (79) art_exp -> . VARIABLE signo_arit VARIABLE
    (80) art_exp -> . U8 signo_arit VARIABLE
    (81) art_exp -> . VARIABLE signo_arit U8
    (82) art_exp -> . U8 signo_arit U8

    HASHSET         shift and go to state 80
    VARIABLE        shift and go to state 82
    U8              shift and go to state 83
    AND             shift and go to state 84
    STRING          shift and go to state 72
    F32             shift and go to state 74

    expresion_sintipo              shift and go to state 75
    hashset                        shift and go to state 76
    op_mat                         shift and go to state 77
    slice_exp                      shift and go to state 78
    expresion                      shift and go to state 79
    art_exp                        shift and go to state 81

state 41

    (37) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (38) print_expresion -> . STRING
    (39) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 86

    print_expresion                shift and go to state 85

state 42

    (49) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 87


state 43

    (53) validations -> comparison .
    (54) validations -> comparison . ANDAND validations
    (55) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 53 (validations -> comparison .)
    ANDAND          shift and go to state 88
    OROR            shift and go to state 89


state 44

    (56) comparison -> VARIABLE . signo_comp VARIABLE
    (57) comparison -> VARIABLE . signo_comp U8
    (59) signo_comp -> . GREATER
    (60) signo_comp -> . LESST
    (61) signo_comp -> . GREATEQ
    (62) signo_comp -> . EQUAL
    (63) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 91
    LESST           shift and go to state 92
    GREATEQ         shift and go to state 93
    EQUAL           shift and go to state 94
    DIFFERENT       shift and go to state 95

    signo_comp                     shift and go to state 90

state 45

    (58) comparison -> U8 . signo_comp VARIABLE
    (59) signo_comp -> . GREATER
    (60) signo_comp -> . LESST
    (61) signo_comp -> . GREATEQ
    (62) signo_comp -> . EQUAL
    (63) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 91
    LESST           shift and go to state 92
    GREATEQ         shift and go to state 93
    EQUAL           shift and go to state 94
    DIFFERENT       shift and go to state 95

    signo_comp                     shift and go to state 96

state 46

    (66) for_loop -> FOR VARIABLE . IN f_comparacion LLAVEIZ rust LLAVEDER

    IN              shift and go to state 97


state 47

    (119) vector_methods -> VARIABLE empty . DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> VARIABLE empty . DOT empty POP_VEC LPAREN RPAREN
    (90) slice_get -> VARIABLE empty . DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> VARIABLE empty . DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN

    DOT             shift and go to state 98


state 48

    (46) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    INSERT_HASH     shift and go to state 99
    UNION_HASH      shift and go to state 100


state 49

    (21) other_operators -> VARIABLE oper_asig . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    expresion                      shift and go to state 101

state 50

    (32) oper_asig -> ASIGNAR .

    STRING          reduce using rule 32 (oper_asig -> ASIGNAR .)
    U8              reduce using rule 32 (oper_asig -> ASIGNAR .)
    F32             reduce using rule 32 (oper_asig -> ASIGNAR .)


state 51

    (33) oper_asig -> PLUSEQ .

    STRING          reduce using rule 33 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 33 (oper_asig -> PLUSEQ .)
    F32             reduce using rule 33 (oper_asig -> PLUSEQ .)


state 52

    (34) oper_asig -> MINUSEQ .

    STRING          reduce using rule 34 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 34 (oper_asig -> MINUSEQ .)
    F32             reduce using rule 34 (oper_asig -> MINUSEQ .)


state 53

    (35) oper_asig -> STAREQ .

    STRING          reduce using rule 35 (oper_asig -> STAREQ .)
    U8              reduce using rule 35 (oper_asig -> STAREQ .)
    F32             reduce using rule 35 (oper_asig -> STAREQ .)


state 54

    (36) oper_asig -> SLASHEQ .

    STRING          reduce using rule 36 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 36 (oper_asig -> SLASHEQ .)
    F32             reduce using rule 36 (oper_asig -> SLASHEQ .)


state 55

    (67) struct_s -> STRUCT sent_stru .

    $end            reduce using rule 67 (struct_s -> STRUCT sent_stru .)
    LLAVEDER        reduce using rule 67 (struct_s -> STRUCT sent_stru .)


state 56

    (73) sent_stru -> UNIT . ENDLINE

    ENDLINE         shift and go to state 102


state 57

    (74) sent_stru -> TUPLE . LPAREN argumentos_tipo RPAREN ENDLINE

    LPAREN          shift and go to state 103


state 58

    (75) sent_stru -> VARIABLE . LLAVEIZ argumentos_juntos LLAVEDER

    LLAVEIZ         shift and go to state 104


state 59

    (95) while_loop -> WHILE validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 105


state 60

    (102) empty_vector -> declare_vector VECT . types_vector empty_vec
    (103) data_vector -> declare_vector VECT . types_vector vector_content
    (107) vector_content -> VECT . empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
    (112) types_vector -> . LESST DATATYPES GREATER
    (113) types_vector -> . LESST NUMDATATYPES GREATER
    (94) empty -> .

    LESST           shift and go to state 108
    PATHSEP         reduce using rule 94 (empty -> .)

    types_vector                   shift and go to state 106
    empty                          shift and go to state 107

state 61

    (104) data_vector -> declare_vector vector_content .

    $end            reduce using rule 104 (data_vector -> declare_vector vector_content .)
    LLAVEDER        reduce using rule 104 (data_vector -> declare_vector vector_content .)


state 62

    (105) data_vector -> declare_vector ASIGNAR . VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE

    VECTMACRO       shift and go to state 109


state 63

    (106) vector_content -> VECTMACRO . LLAVEIZ vector_elements LLAVEDER ENDLINE

    LLAVEIZ         shift and go to state 110


state 64

    (96) read_data -> IO empty . PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE

    PATHSEP         shift and go to state 111


state 65

    (98) function -> FUNCTION VARIABLE . LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> FUNCTION VARIABLE . LPAREN RPAREN LLAVEIZ rust LLAVEDER

    LPAREN          shift and go to state 112


state 66

    (51) if_type -> ELSE IF .

    VARIABLE        reduce using rule 51 (if_type -> ELSE IF .)
    U8              reduce using rule 51 (if_type -> ELSE IF .)


state 67

    (114) declare_vector -> LET MUT . VARIABLE ASIGNATION_TYPE
    (27) let_asig -> LET MUT . var_tipo
    (28) let_asig_sintipo -> LET MUT . VARIABLE
    (30) var_tipo -> . VARIABLE
    (31) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 113

    var_tipo                       shift and go to state 114

state 68

    (115) declare_vector -> LET VARIABLE . ASIGNATION_TYPE
    (29) let_asig_sintipo -> LET VARIABLE .
    (30) var_tipo -> VARIABLE .
    (31) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! reduce/reduce conflict for ASIGNAR resolved using rule 29 (let_asig_sintipo -> LET VARIABLE .)
    ASIGNATION_TYPE shift and go to state 115
    ASIGNAR         reduce using rule 29 (let_asig_sintipo -> LET VARIABLE .)

  ! ASIGNAR         [ reduce using rule 30 (var_tipo -> VARIABLE .) ]


state 69

    (26) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 26 (let_asig -> LET var_tipo .)


state 70

    (18) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 116


state 71

    (48) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 117


state 72

    (123) expresion -> STRING .

    ENDLINE         reduce using rule 123 (expresion -> STRING .)
    COMMA           reduce using rule 123 (expresion -> STRING .)
    LLAVEDER        reduce using rule 123 (expresion -> STRING .)
    RPAREN          reduce using rule 123 (expresion -> STRING .)


state 73

    (124) expresion -> U8 .

    ENDLINE         reduce using rule 124 (expresion -> U8 .)
    COMMA           reduce using rule 124 (expresion -> U8 .)
    LLAVEDER        reduce using rule 124 (expresion -> U8 .)
    RPAREN          reduce using rule 124 (expresion -> U8 .)


state 74

    (125) expresion -> F32 .

    ENDLINE         reduce using rule 125 (expresion -> F32 .)
    COMMA           reduce using rule 125 (expresion -> F32 .)
    LLAVEDER        reduce using rule 125 (expresion -> F32 .)
    RPAREN          reduce using rule 125 (expresion -> F32 .)


state 75

    (20) asignacion_sintipo -> declarador_sintipo ASIGNAR expresion_sintipo . ENDLINE

    ENDLINE         shift and go to state 118


state 76

    (126) expresion_sintipo -> hashset .

    ENDLINE         reduce using rule 126 (expresion_sintipo -> hashset .)


state 77

    (127) expresion_sintipo -> op_mat .

    ENDLINE         reduce using rule 127 (expresion_sintipo -> op_mat .)


state 78

    (128) expresion_sintipo -> slice_exp .

    ENDLINE         reduce using rule 128 (expresion_sintipo -> slice_exp .)


state 79

    (129) expresion_sintipo -> expresion .

    ENDLINE         reduce using rule 129 (expresion_sintipo -> expresion .)


state 80

    (43) hashset -> HASHSET . PATHSEP NEWFUNC

    PATHSEP         shift and go to state 119


state 81

    (76) op_mat -> art_exp .

    ENDLINE         reduce using rule 76 (op_mat -> art_exp .)


state 82

    (77) op_mat -> VARIABLE . signo_arit art_exp
    (79) art_exp -> VARIABLE . signo_arit VARIABLE
    (81) art_exp -> VARIABLE . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 120

state 83

    (78) op_mat -> U8 . signo_arit art_exp
    (124) expresion -> U8 .
    (80) art_exp -> U8 . signo_arit VARIABLE
    (82) art_exp -> U8 . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    ENDLINE         reduce using rule 124 (expresion -> U8 .)
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 126

state 84

    (89) slice_exp -> AND . empty VARIABLE empty BRACKETL rango BRACKETR
    (94) empty -> .

    VARIABLE        reduce using rule 94 (empty -> .)

    empty                          shift and go to state 127

state 85

    (37) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 128


state 86

    (38) print_expresion -> STRING .
    (39) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 38 (print_expresion -> STRING .)
    COMMA           shift and go to state 129


state 87

    (49) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    if_type                        shift and go to state 25
    rust                           shift and go to state 130
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 88

    (54) validations -> comparison ANDAND . validations
    (53) validations -> . comparison
    (54) validations -> . comparison ANDAND validations
    (55) validations -> . comparison OROR validations
    (56) comparison -> . VARIABLE signo_comp VARIABLE
    (57) comparison -> . VARIABLE signo_comp U8
    (58) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    comparison                     shift and go to state 43
    validations                    shift and go to state 131

state 89

    (55) validations -> comparison OROR . validations
    (53) validations -> . comparison
    (54) validations -> . comparison ANDAND validations
    (55) validations -> . comparison OROR validations
    (56) comparison -> . VARIABLE signo_comp VARIABLE
    (57) comparison -> . VARIABLE signo_comp U8
    (58) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 44
    U8              shift and go to state 45

    comparison                     shift and go to state 43
    validations                    shift and go to state 132

state 90

    (56) comparison -> VARIABLE signo_comp . VARIABLE
    (57) comparison -> VARIABLE signo_comp . U8

    VARIABLE        shift and go to state 133
    U8              shift and go to state 134


state 91

    (59) signo_comp -> GREATER .

    VARIABLE        reduce using rule 59 (signo_comp -> GREATER .)
    U8              reduce using rule 59 (signo_comp -> GREATER .)


state 92

    (60) signo_comp -> LESST .

    VARIABLE        reduce using rule 60 (signo_comp -> LESST .)
    U8              reduce using rule 60 (signo_comp -> LESST .)


state 93

    (61) signo_comp -> GREATEQ .

    VARIABLE        reduce using rule 61 (signo_comp -> GREATEQ .)
    U8              reduce using rule 61 (signo_comp -> GREATEQ .)


state 94

    (62) signo_comp -> EQUAL .

    VARIABLE        reduce using rule 62 (signo_comp -> EQUAL .)
    U8              reduce using rule 62 (signo_comp -> EQUAL .)


state 95

    (63) signo_comp -> DIFFERENT .

    VARIABLE        reduce using rule 63 (signo_comp -> DIFFERENT .)
    U8              reduce using rule 63 (signo_comp -> DIFFERENT .)


state 96

    (58) comparison -> U8 signo_comp . VARIABLE

    VARIABLE        shift and go to state 135


state 97

    (66) for_loop -> FOR VARIABLE IN . f_comparacion LLAVEIZ rust LLAVEDER
    (64) f_comparacion -> . rango
    (65) f_comparacion -> . VARIABLE
    (88) rango -> . U8 DOT DOT U8

    VARIABLE        shift and go to state 136
    U8              shift and go to state 139

    f_comparacion                  shift and go to state 137
    rango                          shift and go to state 138

state 98

    (119) vector_methods -> VARIABLE empty DOT . empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> VARIABLE empty DOT . empty POP_VEC LPAREN RPAREN
    (90) slice_get -> VARIABLE empty DOT . empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> VARIABLE empty DOT . empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (94) empty -> .

    PUSH_VEC        reduce using rule 94 (empty -> .)
    POP_VEC         reduce using rule 94 (empty -> .)
    GET_SLICE       reduce using rule 94 (empty -> .)
    CONTAINS_SLICE  reduce using rule 94 (empty -> .)

    empty                          shift and go to state 140

state 99

    (46) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 141


state 100

    (47) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 142


state 101

    (21) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 21 (other_operators -> VARIABLE oper_asig expresion .)


state 102

    (73) sent_stru -> UNIT ENDLINE .

    $end            reduce using rule 73 (sent_stru -> UNIT ENDLINE .)
    LLAVEDER        reduce using rule 73 (sent_stru -> UNIT ENDLINE .)


state 103

    (74) sent_stru -> TUPLE LPAREN . argumentos_tipo RPAREN ENDLINE
    (71) argumentos_tipo -> . tipos
    (72) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    argumentos_tipo                shift and go to state 143
    tipos                          shift and go to state 144

state 104

    (75) sent_stru -> VARIABLE LLAVEIZ . argumentos_juntos LLAVEDER
    (68) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (69) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (70) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 147
    PUB             shift and go to state 149

    argumentos_juntos              shift and go to state 148

state 105

    (95) while_loop -> WHILE validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    rust                           shift and go to state 150
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    if_type                        shift and go to state 25
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 106

    (102) empty_vector -> declare_vector VECT types_vector . empty_vec
    (103) data_vector -> declare_vector VECT types_vector . vector_content
    (116) empty_vec -> . ASIGNAR VECT PATHSEP NEWFUNC ENDLINE
    (117) empty_vec -> . ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE
    (118) empty_vec -> . ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE
    (106) vector_content -> . VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE
    (107) vector_content -> . VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    ASIGNAR         shift and go to state 154
    VECTMACRO       shift and go to state 63
    VECT            shift and go to state 151

    empty_vec                      shift and go to state 152
    vector_content                 shift and go to state 153

state 107

    (107) vector_content -> VECT empty . PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    PATHSEP         shift and go to state 155


state 108

    (112) types_vector -> LESST . DATATYPES GREATER
    (113) types_vector -> LESST . NUMDATATYPES GREATER

    DATATYPES       shift and go to state 156
    NUMDATATYPES    shift and go to state 157


state 109

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO . LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE

    LLAVEIZ         shift and go to state 158


state 110

    (106) vector_content -> VECTMACRO LLAVEIZ . vector_elements LLAVEDER ENDLINE
    (108) vector_elements -> . element
    (109) vector_elements -> . element COMMA vector_elements
    (110) element -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    vector_elements                shift and go to state 159
    element                        shift and go to state 160
    expresion                      shift and go to state 161

state 111

    (96) read_data -> IO empty PATHSEP . empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (94) empty -> .

    STDIN           reduce using rule 94 (empty -> .)

    empty                          shift and go to state 162

state 112

    (98) function -> FUNCTION VARIABLE LPAREN . arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> FUNCTION VARIABLE LPAREN . RPAREN LLAVEIZ rust LLAVEDER
    (100) arguments -> . VARIABLE ASIGNATION_TYPE tipos
    (101) arguments -> . VARIABLE ASIGNATION_TYPE tipos COMMA arguments

    RPAREN          shift and go to state 165
    VARIABLE        shift and go to state 163

    arguments                      shift and go to state 164

state 113

    (114) declare_vector -> LET MUT VARIABLE . ASIGNATION_TYPE
    (28) let_asig_sintipo -> LET MUT VARIABLE .
    (30) var_tipo -> VARIABLE .
    (31) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! reduce/reduce conflict for ASIGNAR resolved using rule 28 (let_asig_sintipo -> LET MUT VARIABLE .)
    ASIGNATION_TYPE shift and go to state 166
    ASIGNAR         reduce using rule 28 (let_asig_sintipo -> LET MUT VARIABLE .)

  ! ASIGNAR         [ reduce using rule 30 (var_tipo -> VARIABLE .) ]


state 114

    (27) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 27 (let_asig -> LET MUT var_tipo .)


state 115

    (115) declare_vector -> LET VARIABLE ASIGNATION_TYPE .
    (31) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    VECT            reduce using rule 115 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    ASIGNAR         reduce using rule 115 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    VECTMACRO       reduce using rule 115 (declare_vector -> LET VARIABLE ASIGNATION_TYPE .)
    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 167

state 116

    (18) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 18 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 18 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 117

    (48) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 48 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 48 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 118

    (20) asignacion_sintipo -> declarador_sintipo ASIGNAR expresion_sintipo ENDLINE .

    $end            reduce using rule 20 (asignacion_sintipo -> declarador_sintipo ASIGNAR expresion_sintipo ENDLINE .)
    LLAVEDER        reduce using rule 20 (asignacion_sintipo -> declarador_sintipo ASIGNAR expresion_sintipo ENDLINE .)


state 119

    (43) hashset -> HASHSET PATHSEP . NEWFUNC

    NEWFUNC         shift and go to state 168


state 120

    (77) op_mat -> VARIABLE signo_arit . art_exp
    (79) art_exp -> VARIABLE signo_arit . VARIABLE
    (81) art_exp -> VARIABLE signo_arit . U8
    (79) art_exp -> . VARIABLE signo_arit VARIABLE
    (80) art_exp -> . U8 signo_arit VARIABLE
    (81) art_exp -> . VARIABLE signo_arit U8
    (82) art_exp -> . U8 signo_arit U8

    VARIABLE        shift and go to state 169
    U8              shift and go to state 171

    art_exp                        shift and go to state 170

state 121

    (83) signo_arit -> MAS .

    VARIABLE        reduce using rule 83 (signo_arit -> MAS .)
    U8              reduce using rule 83 (signo_arit -> MAS .)


state 122

    (84) signo_arit -> MENOS .

    VARIABLE        reduce using rule 84 (signo_arit -> MENOS .)
    U8              reduce using rule 84 (signo_arit -> MENOS .)


state 123

    (85) signo_arit -> MULT .

    VARIABLE        reduce using rule 85 (signo_arit -> MULT .)
    U8              reduce using rule 85 (signo_arit -> MULT .)


state 124

    (86) signo_arit -> DIVISION .

    VARIABLE        reduce using rule 86 (signo_arit -> DIVISION .)
    U8              reduce using rule 86 (signo_arit -> DIVISION .)


state 125

    (87) signo_arit -> MODULO .

    VARIABLE        reduce using rule 87 (signo_arit -> MODULO .)
    U8              reduce using rule 87 (signo_arit -> MODULO .)


state 126

    (78) op_mat -> U8 signo_arit . art_exp
    (80) art_exp -> U8 signo_arit . VARIABLE
    (82) art_exp -> U8 signo_arit . U8
    (79) art_exp -> . VARIABLE signo_arit VARIABLE
    (80) art_exp -> . U8 signo_arit VARIABLE
    (81) art_exp -> . VARIABLE signo_arit U8
    (82) art_exp -> . U8 signo_arit U8

    VARIABLE        shift and go to state 174
    U8              shift and go to state 172

    art_exp                        shift and go to state 173

state 127

    (89) slice_exp -> AND empty . VARIABLE empty BRACKETL rango BRACKETR

    VARIABLE        shift and go to state 175


state 128

    (37) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 176


state 129

    (39) print_expresion -> STRING COMMA . print_args
    (40) print_args -> . print_datos COMMA print_args
    (41) print_args -> . print_datos
    (42) print_datos -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    print_args                     shift and go to state 177
    print_datos                    shift and go to state 178
    expresion                      shift and go to state 179

state 130

    (49) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 180


state 131

    (54) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 54 (validations -> comparison ANDAND validations .)


state 132

    (55) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 55 (validations -> comparison OROR validations .)


state 133

    (56) comparison -> VARIABLE signo_comp VARIABLE .

    ANDAND          reduce using rule 56 (comparison -> VARIABLE signo_comp VARIABLE .)
    OROR            reduce using rule 56 (comparison -> VARIABLE signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 56 (comparison -> VARIABLE signo_comp VARIABLE .)


state 134

    (57) comparison -> VARIABLE signo_comp U8 .

    ANDAND          reduce using rule 57 (comparison -> VARIABLE signo_comp U8 .)
    OROR            reduce using rule 57 (comparison -> VARIABLE signo_comp U8 .)
    LLAVEIZ         reduce using rule 57 (comparison -> VARIABLE signo_comp U8 .)


state 135

    (58) comparison -> U8 signo_comp VARIABLE .

    ANDAND          reduce using rule 58 (comparison -> U8 signo_comp VARIABLE .)
    OROR            reduce using rule 58 (comparison -> U8 signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 58 (comparison -> U8 signo_comp VARIABLE .)


state 136

    (65) f_comparacion -> VARIABLE .

    LLAVEIZ         reduce using rule 65 (f_comparacion -> VARIABLE .)


state 137

    (66) for_loop -> FOR VARIABLE IN f_comparacion . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 181


state 138

    (64) f_comparacion -> rango .

    LLAVEIZ         reduce using rule 64 (f_comparacion -> rango .)


state 139

    (88) rango -> U8 . DOT DOT U8

    DOT             shift and go to state 182


state 140

    (119) vector_methods -> VARIABLE empty DOT empty . PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> VARIABLE empty DOT empty . POP_VEC LPAREN RPAREN
    (90) slice_get -> VARIABLE empty DOT empty . GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> VARIABLE empty DOT empty . CONTAINS_SLICE empty LPAREN AND U8 RPAREN

    PUSH_VEC        shift and go to state 183
    POP_VEC         shift and go to state 184
    GET_SLICE       shift and go to state 185
    CONTAINS_SLICE  shift and go to state 186


state 141

    (46) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    expresion                      shift and go to state 187

state 142

    (47) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 188


state 143

    (74) sent_stru -> TUPLE LPAREN argumentos_tipo . RPAREN ENDLINE

    RPAREN          shift and go to state 189


state 144

    (71) argumentos_tipo -> tipos .
    (72) argumentos_tipo -> tipos . COMMA argumentos_tipo

    RPAREN          reduce using rule 71 (argumentos_tipo -> tipos .)
    COMMA           shift and go to state 190


state 145

    (121) tipos -> DATATYPES .

    COMMA           reduce using rule 121 (tipos -> DATATYPES .)
    RPAREN          reduce using rule 121 (tipos -> DATATYPES .)
    ASIGNAR         reduce using rule 121 (tipos -> DATATYPES .)
    LLAVEDER        reduce using rule 121 (tipos -> DATATYPES .)


state 146

    (122) tipos -> NUMDATATYPES .

    COMMA           reduce using rule 122 (tipos -> NUMDATATYPES .)
    RPAREN          reduce using rule 122 (tipos -> NUMDATATYPES .)
    ASIGNAR         reduce using rule 122 (tipos -> NUMDATATYPES .)
    LLAVEDER        reduce using rule 122 (tipos -> NUMDATATYPES .)


state 147

    (68) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos
    (69) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 191


state 148

    (75) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos . LLAVEDER

    LLAVEDER        shift and go to state 192


state 149

    (70) argumentos_juntos -> PUB . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 193


state 150

    (95) while_loop -> WHILE validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 194


state 151

    (107) vector_content -> VECT . empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
    (94) empty -> .

    PATHSEP         reduce using rule 94 (empty -> .)

    empty                          shift and go to state 107

state 152

    (102) empty_vector -> declare_vector VECT types_vector empty_vec .

    $end            reduce using rule 102 (empty_vector -> declare_vector VECT types_vector empty_vec .)
    LLAVEDER        reduce using rule 102 (empty_vector -> declare_vector VECT types_vector empty_vec .)


state 153

    (103) data_vector -> declare_vector VECT types_vector vector_content .

    $end            reduce using rule 103 (data_vector -> declare_vector VECT types_vector vector_content .)
    LLAVEDER        reduce using rule 103 (data_vector -> declare_vector VECT types_vector vector_content .)


state 154

    (116) empty_vec -> ASIGNAR . VECT PATHSEP NEWFUNC ENDLINE
    (117) empty_vec -> ASIGNAR . VECTMACRO BRACKETL BRACKETR ENDLINE
    (118) empty_vec -> ASIGNAR . VECT PATHSEP FROM LPAREN RPAREN ENDLINE

    VECT            shift and go to state 195
    VECTMACRO       shift and go to state 196


state 155

    (107) vector_content -> VECT empty PATHSEP . empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE
    (94) empty -> .

    FROM            reduce using rule 94 (empty -> .)

    empty                          shift and go to state 197

state 156

    (112) types_vector -> LESST DATATYPES . GREATER

    GREATER         shift and go to state 198


state 157

    (113) types_vector -> LESST NUMDATATYPES . GREATER

    GREATER         shift and go to state 199


state 158

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ . element_type COMMA vector_elements LLAVEDER ENDLINE
    (111) element_type -> . U8 NUMDATATYPES

    U8              shift and go to state 201

    element_type                   shift and go to state 200

state 159

    (106) vector_content -> VECTMACRO LLAVEIZ vector_elements . LLAVEDER ENDLINE

    LLAVEDER        shift and go to state 202


state 160

    (108) vector_elements -> element .
    (109) vector_elements -> element . COMMA vector_elements

    LLAVEDER        reduce using rule 108 (vector_elements -> element .)
    COMMA           shift and go to state 203


state 161

    (110) element -> expresion .

    COMMA           reduce using rule 110 (element -> expresion .)
    LLAVEDER        reduce using rule 110 (element -> expresion .)


state 162

    (96) read_data -> IO empty PATHSEP empty . STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE

    STDIN           shift and go to state 204


state 163

    (100) arguments -> VARIABLE . ASIGNATION_TYPE tipos
    (101) arguments -> VARIABLE . ASIGNATION_TYPE tipos COMMA arguments

    ASIGNATION_TYPE shift and go to state 205


state 164

    (98) function -> FUNCTION VARIABLE LPAREN arguments . RPAREN LLAVEIZ rust LLAVEDER

    RPAREN          shift and go to state 206


state 165

    (99) empty_function -> FUNCTION VARIABLE LPAREN RPAREN . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 207


state 166

    (114) declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .
    (31) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    VECT            reduce using rule 114 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    ASIGNAR         reduce using rule 114 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    VECTMACRO       reduce using rule 114 (declare_vector -> LET MUT VARIABLE ASIGNATION_TYPE .)
    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 167

state 167

    (31) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 31 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 168

    (43) hashset -> HASHSET PATHSEP NEWFUNC .

    ENDLINE         reduce using rule 43 (hashset -> HASHSET PATHSEP NEWFUNC .)


state 169

    (79) art_exp -> VARIABLE signo_arit VARIABLE .
    (79) art_exp -> VARIABLE . signo_arit VARIABLE
    (81) art_exp -> VARIABLE . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    ENDLINE         reduce using rule 79 (art_exp -> VARIABLE signo_arit VARIABLE .)
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 208

state 170

    (77) op_mat -> VARIABLE signo_arit art_exp .

    ENDLINE         reduce using rule 77 (op_mat -> VARIABLE signo_arit art_exp .)


state 171

    (81) art_exp -> VARIABLE signo_arit U8 .
    (80) art_exp -> U8 . signo_arit VARIABLE
    (82) art_exp -> U8 . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    ENDLINE         reduce using rule 81 (art_exp -> VARIABLE signo_arit U8 .)
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 209

state 172

    (82) art_exp -> U8 signo_arit U8 .
    (80) art_exp -> U8 . signo_arit VARIABLE
    (82) art_exp -> U8 . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    ENDLINE         reduce using rule 82 (art_exp -> U8 signo_arit U8 .)
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 209

state 173

    (78) op_mat -> U8 signo_arit art_exp .

    ENDLINE         reduce using rule 78 (op_mat -> U8 signo_arit art_exp .)


state 174

    (80) art_exp -> U8 signo_arit VARIABLE .
    (79) art_exp -> VARIABLE . signo_arit VARIABLE
    (81) art_exp -> VARIABLE . signo_arit U8
    (83) signo_arit -> . MAS
    (84) signo_arit -> . MENOS
    (85) signo_arit -> . MULT
    (86) signo_arit -> . DIVISION
    (87) signo_arit -> . MODULO

    ENDLINE         reduce using rule 80 (art_exp -> U8 signo_arit VARIABLE .)
    MAS             shift and go to state 121
    MENOS           shift and go to state 122
    MULT            shift and go to state 123
    DIVISION        shift and go to state 124
    MODULO          shift and go to state 125

    signo_arit                     shift and go to state 208

state 175

    (89) slice_exp -> AND empty VARIABLE . empty BRACKETL rango BRACKETR
    (94) empty -> .

    BRACKETL        reduce using rule 94 (empty -> .)

    empty                          shift and go to state 210

state 176

    (37) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 37 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 37 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 177

    (39) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 39 (print_expresion -> STRING COMMA print_args .)


state 178

    (40) print_args -> print_datos . COMMA print_args
    (41) print_args -> print_datos .

    COMMA           shift and go to state 211
    RPAREN          reduce using rule 41 (print_args -> print_datos .)


state 179

    (42) print_datos -> expresion .

    COMMA           reduce using rule 42 (print_datos -> expresion .)
    RPAREN          reduce using rule 42 (print_datos -> expresion .)


state 180

    (49) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 49 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 49 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 49 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 181

    (66) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    rust                           shift and go to state 212
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    if_type                        shift and go to state 25
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 182

    (88) rango -> U8 DOT . DOT U8

    DOT             shift and go to state 213


state 183

    (119) vector_methods -> VARIABLE empty DOT empty PUSH_VEC . LPAREN expresion RPAREN

    LPAREN          shift and go to state 214


state 184

    (120) vector_methods -> VARIABLE empty DOT empty POP_VEC . LPAREN RPAREN

    LPAREN          shift and go to state 215


state 185

    (90) slice_get -> VARIABLE empty DOT empty GET_SLICE . empty LPAREN valor_get RPAREN
    (94) empty -> .

    LPAREN          reduce using rule 94 (empty -> .)

    empty                          shift and go to state 216

state 186

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE . empty LPAREN AND U8 RPAREN
    (94) empty -> .

    LPAREN          reduce using rule 94 (empty -> .)

    empty                          shift and go to state 217

state 187

    (46) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 218


state 188

    (47) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 219


state 189

    (74) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN . ENDLINE

    ENDLINE         shift and go to state 220


state 190

    (72) argumentos_tipo -> tipos COMMA . argumentos_tipo
    (71) argumentos_tipo -> . tipos
    (72) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 144
    argumentos_tipo                shift and go to state 221

state 191

    (68) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos
    (69) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 222

state 192

    (75) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .

    $end            reduce using rule 75 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)
    LLAVEDER        reduce using rule 75 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)


state 193

    (70) argumentos_juntos -> PUB VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 223


state 194

    (95) while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 95 (while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 95 (while_loop -> WHILE validations LLAVEIZ rust LLAVEDER .)


state 195

    (116) empty_vec -> ASIGNAR VECT . PATHSEP NEWFUNC ENDLINE
    (118) empty_vec -> ASIGNAR VECT . PATHSEP FROM LPAREN RPAREN ENDLINE

    PATHSEP         shift and go to state 224


state 196

    (117) empty_vec -> ASIGNAR VECTMACRO . BRACKETL BRACKETR ENDLINE

    BRACKETL        shift and go to state 225


state 197

    (107) vector_content -> VECT empty PATHSEP empty . FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    FROM            shift and go to state 226


state 198

    (112) types_vector -> LESST DATATYPES GREATER .

    ASIGNAR         reduce using rule 112 (types_vector -> LESST DATATYPES GREATER .)
    VECTMACRO       reduce using rule 112 (types_vector -> LESST DATATYPES GREATER .)
    VECT            reduce using rule 112 (types_vector -> LESST DATATYPES GREATER .)


state 199

    (113) types_vector -> LESST NUMDATATYPES GREATER .

    ASIGNAR         reduce using rule 113 (types_vector -> LESST NUMDATATYPES GREATER .)
    VECTMACRO       reduce using rule 113 (types_vector -> LESST NUMDATATYPES GREATER .)
    VECT            reduce using rule 113 (types_vector -> LESST NUMDATATYPES GREATER .)


state 200

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type . COMMA vector_elements LLAVEDER ENDLINE

    COMMA           shift and go to state 227


state 201

    (111) element_type -> U8 . NUMDATATYPES

    NUMDATATYPES    shift and go to state 228


state 202

    (106) vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER . ENDLINE

    ENDLINE         shift and go to state 229


state 203

    (109) vector_elements -> element COMMA . vector_elements
    (108) vector_elements -> . element
    (109) vector_elements -> . element COMMA vector_elements
    (110) element -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    element                        shift and go to state 160
    vector_elements                shift and go to state 230
    expresion                      shift and go to state 161

state 204

    (96) read_data -> IO empty PATHSEP empty STDIN . LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE

    LPAREN          shift and go to state 231


state 205

    (100) arguments -> VARIABLE ASIGNATION_TYPE . tipos
    (101) arguments -> VARIABLE ASIGNATION_TYPE . tipos COMMA arguments
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 232

state 206

    (98) function -> FUNCTION VARIABLE LPAREN arguments RPAREN . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 233


state 207

    (99) empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    rust                           shift and go to state 234
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    if_type                        shift and go to state 25
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 208

    (79) art_exp -> VARIABLE signo_arit . VARIABLE
    (81) art_exp -> VARIABLE signo_arit . U8

    VARIABLE        shift and go to state 235
    U8              shift and go to state 236


state 209

    (80) art_exp -> U8 signo_arit . VARIABLE
    (82) art_exp -> U8 signo_arit . U8

    VARIABLE        shift and go to state 238
    U8              shift and go to state 237


state 210

    (89) slice_exp -> AND empty VARIABLE empty . BRACKETL rango BRACKETR

    BRACKETL        shift and go to state 239


state 211

    (40) print_args -> print_datos COMMA . print_args
    (40) print_args -> . print_datos COMMA print_args
    (41) print_args -> . print_datos
    (42) print_datos -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    print_datos                    shift and go to state 178
    print_args                     shift and go to state 240
    expresion                      shift and go to state 179

state 212

    (66) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 241


state 213

    (88) rango -> U8 DOT DOT . U8

    U8              shift and go to state 242


state 214

    (119) vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN . expresion RPAREN
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    expresion                      shift and go to state 243

state 215

    (120) vector_methods -> VARIABLE empty DOT empty POP_VEC LPAREN . RPAREN

    RPAREN          shift and go to state 244


state 216

    (90) slice_get -> VARIABLE empty DOT empty GET_SLICE empty . LPAREN valor_get RPAREN

    LPAREN          shift and go to state 245


state 217

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty . LPAREN AND U8 RPAREN

    LPAREN          shift and go to state 246


state 218

    (46) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 247


state 219

    (47) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 248


state 220

    (74) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .

    $end            reduce using rule 74 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 74 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)


state 221

    (72) argumentos_tipo -> tipos COMMA argumentos_tipo .

    RPAREN          reduce using rule 72 (argumentos_tipo -> tipos COMMA argumentos_tipo .)


state 222

    (68) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .
    (69) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    LLAVEDER        reduce using rule 68 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 249


state 223

    (70) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (121) tipos -> . DATATYPES
    (122) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 145
    NUMDATATYPES    shift and go to state 146

    tipos                          shift and go to state 250

state 224

    (116) empty_vec -> ASIGNAR VECT PATHSEP . NEWFUNC ENDLINE
    (118) empty_vec -> ASIGNAR VECT PATHSEP . FROM LPAREN RPAREN ENDLINE

    NEWFUNC         shift and go to state 251
    FROM            shift and go to state 252


state 225

    (117) empty_vec -> ASIGNAR VECTMACRO BRACKETL . BRACKETR ENDLINE

    BRACKETR        shift and go to state 253


state 226

    (107) vector_content -> VECT empty PATHSEP empty FROM . LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    LPAREN          shift and go to state 254


state 227

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA . vector_elements LLAVEDER ENDLINE
    (108) vector_elements -> . element
    (109) vector_elements -> . element COMMA vector_elements
    (110) element -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    vector_elements                shift and go to state 255
    element                        shift and go to state 160
    expresion                      shift and go to state 161

state 228

    (111) element_type -> U8 NUMDATATYPES .

    COMMA           reduce using rule 111 (element_type -> U8 NUMDATATYPES .)


state 229

    (106) vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .

    $end            reduce using rule 106 (vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .)
    LLAVEDER        reduce using rule 106 (vector_content -> VECTMACRO LLAVEIZ vector_elements LLAVEDER ENDLINE .)


state 230

    (109) vector_elements -> element COMMA vector_elements .

    LLAVEDER        reduce using rule 109 (vector_elements -> element COMMA vector_elements .)


state 231

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN . RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE

    RPAREN          shift and go to state 256


state 232

    (100) arguments -> VARIABLE ASIGNATION_TYPE tipos .
    (101) arguments -> VARIABLE ASIGNATION_TYPE tipos . COMMA arguments

    RPAREN          reduce using rule 100 (arguments -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 257


state 233

    (98) function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . asignacion_sintipo
    (3) rust -> . prints
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . while_loop
    (10) rust -> . empty_vector
    (11) rust -> . vector_methods
    (12) rust -> . data_vector
    (13) rust -> . slice_get
    (14) rust -> . slice_contains
    (15) rust -> . read_data
    (16) rust -> . function
    (17) rust -> . empty_function
    (18) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (19) asignacion -> . other_operators ENDLINE
    (20) asignacion_sintipo -> . declarador_sintipo ASIGNAR expresion_sintipo ENDLINE
    (37) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (44) hashfunc -> . hashset_insert
    (45) hashfunc -> . hashset_union
    (49) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (48) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (66) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (67) struct_s -> . STRUCT sent_stru
    (95) while_loop -> . WHILE validations LLAVEIZ rust LLAVEDER
    (102) empty_vector -> . declare_vector VECT types_vector empty_vec
    (119) vector_methods -> . VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN
    (120) vector_methods -> . VARIABLE empty DOT empty POP_VEC LPAREN RPAREN
    (103) data_vector -> . declare_vector VECT types_vector vector_content
    (104) data_vector -> . declare_vector vector_content
    (105) data_vector -> . declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE
    (90) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (93) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (96) read_data -> . IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (98) function -> . FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER
    (99) empty_function -> . FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER
    (22) declarador -> . VARIABLE
    (23) declarador -> . let_asig
    (21) other_operators -> . VARIABLE oper_asig expresion
    (24) declarador_sintipo -> . VARIABLE
    (25) declarador_sintipo -> . let_asig_sintipo
    (46) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (47) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (50) if_type -> . IF
    (51) if_type -> . ELSE IF
    (52) if_type -> . ELSE
    (114) declare_vector -> . LET MUT VARIABLE ASIGNATION_TYPE
    (115) declare_vector -> . LET VARIABLE ASIGNATION_TYPE
    (26) let_asig -> . LET var_tipo
    (27) let_asig -> . LET MUT var_tipo
    (28) let_asig_sintipo -> . LET MUT VARIABLE
    (29) let_asig_sintipo -> . LET VARIABLE

    PRINTS          shift and go to state 22
    FOR             shift and go to state 26
    STRUCT          shift and go to state 28
    WHILE           shift and go to state 29
    VARIABLE        shift and go to state 27
    IO              shift and go to state 31
    FUNCTION        shift and go to state 32
    IF              shift and go to state 35
    ELSE            shift and go to state 36
    LET             shift and go to state 37

    rust                           shift and go to state 258
    asignacion                     shift and go to state 2
    asignacion_sintipo             shift and go to state 3
    prints                         shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    while_loop                     shift and go to state 10
    empty_vector                   shift and go to state 11
    vector_methods                 shift and go to state 12
    data_vector                    shift and go to state 13
    slice_get                      shift and go to state 14
    slice_contains                 shift and go to state 15
    read_data                      shift and go to state 16
    function                       shift and go to state 17
    empty_function                 shift and go to state 18
    declarador                     shift and go to state 19
    other_operators                shift and go to state 20
    declarador_sintipo             shift and go to state 21
    hashset_insert                 shift and go to state 23
    hashset_union                  shift and go to state 24
    if_type                        shift and go to state 25
    declare_vector                 shift and go to state 30
    let_asig                       shift and go to state 33
    let_asig_sintipo               shift and go to state 34

state 234

    (99) empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 259


state 235

    (79) art_exp -> VARIABLE signo_arit VARIABLE .

    ENDLINE         reduce using rule 79 (art_exp -> VARIABLE signo_arit VARIABLE .)


state 236

    (81) art_exp -> VARIABLE signo_arit U8 .

    ENDLINE         reduce using rule 81 (art_exp -> VARIABLE signo_arit U8 .)


state 237

    (82) art_exp -> U8 signo_arit U8 .

    ENDLINE         reduce using rule 82 (art_exp -> U8 signo_arit U8 .)


state 238

    (80) art_exp -> U8 signo_arit VARIABLE .

    ENDLINE         reduce using rule 80 (art_exp -> U8 signo_arit VARIABLE .)


state 239

    (89) slice_exp -> AND empty VARIABLE empty BRACKETL . rango BRACKETR
    (88) rango -> . U8 DOT DOT U8

    U8              shift and go to state 139

    rango                          shift and go to state 260

state 240

    (40) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 40 (print_args -> print_datos COMMA print_args .)


state 241

    (66) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 66 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 66 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)


state 242

    (88) rango -> U8 DOT DOT U8 .

    LLAVEIZ         reduce using rule 88 (rango -> U8 DOT DOT U8 .)
    BRACKETR        reduce using rule 88 (rango -> U8 DOT DOT U8 .)
    RPAREN          reduce using rule 88 (rango -> U8 DOT DOT U8 .)


state 243

    (119) vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN expresion . RPAREN

    RPAREN          shift and go to state 261


state 244

    (120) vector_methods -> VARIABLE empty DOT empty POP_VEC LPAREN RPAREN .

    $end            reduce using rule 120 (vector_methods -> VARIABLE empty DOT empty POP_VEC LPAREN RPAREN .)
    LLAVEDER        reduce using rule 120 (vector_methods -> VARIABLE empty DOT empty POP_VEC LPAREN RPAREN .)


state 245

    (90) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN . valor_get RPAREN
    (91) valor_get -> . rango
    (92) valor_get -> . U8
    (88) rango -> . U8 DOT DOT U8

    U8              shift and go to state 264

    valor_get                      shift and go to state 262
    rango                          shift and go to state 263

state 246

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN . AND U8 RPAREN

    AND             shift and go to state 265


state 247

    (46) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 46 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 46 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 248

    (47) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 266


state 249

    (69) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (68) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (69) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (70) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 147
    PUB             shift and go to state 149

    argumentos_juntos              shift and go to state 267

state 250

    (70) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    COMMA           shift and go to state 268


state 251

    (116) empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 269


state 252

    (118) empty_vec -> ASIGNAR VECT PATHSEP FROM . LPAREN RPAREN ENDLINE

    LPAREN          shift and go to state 270


state 253

    (117) empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR . ENDLINE

    ENDLINE         shift and go to state 271


state 254

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN . LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE

    LLAVEIZ         shift and go to state 272


state 255

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements . LLAVEDER ENDLINE

    LLAVEDER        shift and go to state 273


state 256

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN . empty DOT empty READ LPAREN reference RPAREN ENDLINE
    (94) empty -> .

    DOT             reduce using rule 94 (empty -> .)

    empty                          shift and go to state 274

state 257

    (101) arguments -> VARIABLE ASIGNATION_TYPE tipos COMMA . arguments
    (100) arguments -> . VARIABLE ASIGNATION_TYPE tipos
    (101) arguments -> . VARIABLE ASIGNATION_TYPE tipos COMMA arguments

    VARIABLE        shift and go to state 163

    arguments                      shift and go to state 275

state 258

    (98) function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 276


state 259

    (99) empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 99 (empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 99 (empty_function -> FUNCTION VARIABLE LPAREN RPAREN LLAVEIZ rust LLAVEDER .)


state 260

    (89) slice_exp -> AND empty VARIABLE empty BRACKETL rango . BRACKETR

    BRACKETR        shift and go to state 277


state 261

    (119) vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN .

    $end            reduce using rule 119 (vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN .)
    LLAVEDER        reduce using rule 119 (vector_methods -> VARIABLE empty DOT empty PUSH_VEC LPAREN expresion RPAREN .)


state 262

    (90) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get . RPAREN

    RPAREN          shift and go to state 278


state 263

    (91) valor_get -> rango .

    RPAREN          reduce using rule 91 (valor_get -> rango .)


state 264

    (92) valor_get -> U8 .
    (88) rango -> U8 . DOT DOT U8

    RPAREN          reduce using rule 92 (valor_get -> U8 .)
    DOT             shift and go to state 182


state 265

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND . U8 RPAREN

    U8              shift and go to state 279


state 266

    (47) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 47 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 47 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)


state 267

    (69) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 69 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 268

    (70) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (68) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (69) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (70) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 147
    PUB             shift and go to state 149

    argumentos_juntos              shift and go to state 280

state 269

    (116) empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 116 (empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 116 (empty_vec -> ASIGNAR VECT PATHSEP NEWFUNC ENDLINE .)


state 270

    (118) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN . RPAREN ENDLINE

    RPAREN          shift and go to state 281


state 271

    (117) empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .

    $end            reduce using rule 117 (empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .)
    LLAVEDER        reduce using rule 117 (empty_vec -> ASIGNAR VECTMACRO BRACKETL BRACKETR ENDLINE .)


state 272

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ . vector_elements LLAVEDER RPAREN ENDLINE
    (108) vector_elements -> . element
    (109) vector_elements -> . element COMMA vector_elements
    (110) element -> . expresion
    (123) expresion -> . STRING
    (124) expresion -> . U8
    (125) expresion -> . F32

    STRING          shift and go to state 72
    U8              shift and go to state 73
    F32             shift and go to state 74

    vector_elements                shift and go to state 282
    element                        shift and go to state 160
    expresion                      shift and go to state 161

state 273

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER . ENDLINE

    ENDLINE         shift and go to state 283


state 274

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty . DOT empty READ LPAREN reference RPAREN ENDLINE

    DOT             shift and go to state 284


state 275

    (101) arguments -> VARIABLE ASIGNATION_TYPE tipos COMMA arguments .

    RPAREN          reduce using rule 101 (arguments -> VARIABLE ASIGNATION_TYPE tipos COMMA arguments .)


state 276

    (98) function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 98 (function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 98 (function -> FUNCTION VARIABLE LPAREN arguments RPAREN LLAVEIZ rust LLAVEDER .)


state 277

    (89) slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .

    ENDLINE         reduce using rule 89 (slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .)


state 278

    (90) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .

    $end            reduce using rule 90 (slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .)
    LLAVEDER        reduce using rule 90 (slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .)


state 279

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 . RPAREN

    RPAREN          shift and go to state 285


state 280

    (70) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 70 (argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 281

    (118) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN . ENDLINE

    ENDLINE         shift and go to state 286


state 282

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements . LLAVEDER RPAREN ENDLINE

    LLAVEDER        shift and go to state 287


state 283

    (105) data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .

    $end            reduce using rule 105 (data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .)
    LLAVEDER        reduce using rule 105 (data_vector -> declare_vector ASIGNAR VECTMACRO LLAVEIZ element_type COMMA vector_elements LLAVEDER ENDLINE .)


state 284

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT . empty READ LPAREN reference RPAREN ENDLINE
    (94) empty -> .

    READ            reduce using rule 94 (empty -> .)

    empty                          shift and go to state 288

state 285

    (93) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .

    $end            reduce using rule 93 (slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .)
    LLAVEDER        reduce using rule 93 (slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .)


state 286

    (118) empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .

    $end            reduce using rule 118 (empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 118 (empty_vec -> ASIGNAR VECT PATHSEP FROM LPAREN RPAREN ENDLINE .)


state 287

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER . RPAREN ENDLINE

    RPAREN          shift and go to state 289


state 288

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty . READ LPAREN reference RPAREN ENDLINE

    READ            shift and go to state 290


state 289

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN . ENDLINE

    ENDLINE         shift and go to state 291


state 290

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ . LPAREN reference RPAREN ENDLINE

    LPAREN          shift and go to state 292


state 291

    (107) vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .

    $end            reduce using rule 107 (vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 107 (vector_content -> VECT empty PATHSEP empty FROM LPAREN LLAVEIZ vector_elements LLAVEDER RPAREN ENDLINE .)


state 292

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN . reference RPAREN ENDLINE
    (97) reference -> . AND empty MUT VARIABLE

    AND             shift and go to state 294

    reference                      shift and go to state 293

state 293

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference . RPAREN ENDLINE

    RPAREN          shift and go to state 295


state 294

    (97) reference -> AND . empty MUT VARIABLE
    (94) empty -> .

    MUT             reduce using rule 94 (empty -> .)

    empty                          shift and go to state 296

state 295

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN . ENDLINE

    ENDLINE         shift and go to state 297


state 296

    (97) reference -> AND empty . MUT VARIABLE

    MUT             shift and go to state 298


state 297

    (96) read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE .

    $end            reduce using rule 96 (read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 96 (read_data -> IO empty PATHSEP empty STDIN LPAREN RPAREN empty DOT empty READ LPAREN reference RPAREN ENDLINE .)


state 298

    (97) reference -> AND empty MUT . VARIABLE

    VARIABLE        shift and go to state 299


state 299

    (97) reference -> AND empty MUT VARIABLE .

    RPAREN          reduce using rule 97 (reference -> AND empty MUT VARIABLE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 27 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 27 resolved as shift
WARNING: reduce/reduce conflict in state 27 resolved using rule (declarador -> VARIABLE)
WARNING: rejected rule (declarador_sintipo -> VARIABLE) in state 27
WARNING: reduce/reduce conflict in state 68 resolved using rule (let_asig_sintipo -> LET VARIABLE)
WARNING: rejected rule (var_tipo -> VARIABLE) in state 68
WARNING: reduce/reduce conflict in state 113 resolved using rule (let_asig_sintipo -> LET MUT VARIABLE)
WARNING: rejected rule (var_tipo -> VARIABLE) in state 113
WARNING: Rule (declarador_sintipo -> VARIABLE) is never reduced
WARNING: Rule (var_tipo -> VARIABLE) is never reduced
