Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTIN
    CRATE
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    ERRORPROP
    EXTERN
    FUNCTION
    IMPL
    LESSEQ
    LOOP
    MATCH
    MAYOR
    MAYORIGUAL
    MOD
    MOVE
    NOT
    NUMBER
    OR
    POP_VEC
    PRINT
    PUSH_VEC
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    VECTOR
    WHERE
    WHILE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> prints
Rule 3     rust -> hashset
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     rust -> for_loop
Rule 8     rust -> struct_s
Rule 9     rust -> slice_get
Rule 10    rust -> slice_contains
Rule 11    asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 12    asignacion -> other_operators ENDLINE
Rule 13    other_operators -> VARIABLE oper_asig expresion
Rule 14    declarador -> VARIABLE
Rule 15    declarador -> let_asig
Rule 16    let_asig -> LET var_tipo
Rule 17    let_asig -> LET MUT var_tipo
Rule 18    var_tipo -> VARIABLE
Rule 19    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 20    tipos -> DATATYPES
Rule 21    tipos -> NUMDATATYPES
Rule 22    oper_asig -> ASIGNAR
Rule 23    oper_asig -> PLUSEQ
Rule 24    oper_asig -> MINUSEQ
Rule 25    oper_asig -> STAREQ
Rule 26    oper_asig -> SLASHEQ
Rule 27    expresion -> STRING
Rule 28    expresion -> U8
Rule 29    expresion -> op_mat
Rule 30    expresion -> slice_exp
Rule 31    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 32    print_expresion -> STRING
Rule 33    print_expresion -> STRING COMMA print_args
Rule 34    print_args -> print_datos COMMA print_args
Rule 35    print_args -> print_datos
Rule 36    print_datos -> expresion
Rule 37    hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
Rule 38    hashfunc -> hashset_insert
Rule 39    hashfunc -> hashset_union
Rule 40    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 41    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 42    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 43    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 44    if_type -> IF
Rule 45    if_type -> ELSE IF
Rule 46    if_type -> ELSE
Rule 47    validations -> comparison
Rule 48    validations -> comparison ANDAND validations
Rule 49    validations -> comparison OROR validations
Rule 50    comparison -> VARIABLE signo_comp VARIABLE
Rule 51    comparison -> VARIABLE signo_comp U8
Rule 52    comparison -> U8 signo_comp VARIABLE
Rule 53    signo_comp -> GREATER
Rule 54    signo_comp -> LESST
Rule 55    signo_comp -> GREATEQ
Rule 56    signo_comp -> EQUAL
Rule 57    signo_comp -> DIFFERENT
Rule 58    f_comparacion -> rango
Rule 59    f_comparacion -> VARIABLE
Rule 60    for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
Rule 61    struct_s -> STRUCT sent_stru
Rule 62    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos
Rule 63    argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 64    argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
Rule 65    argumentos_tipo -> tipos
Rule 66    argumentos_tipo -> tipos COMMA argumentos_tipo
Rule 67    sent_stru -> UNIT ENDLINE
Rule 68    sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
Rule 69    sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER
Rule 70    op_mat -> art_exp
Rule 71    op_mat -> VARIABLE signo_arit art_exp
Rule 72    op_mat -> U8 signo_arit art_exp
Rule 73    art_exp -> VARIABLE signo_arit VARIABLE
Rule 74    art_exp -> U8 signo_arit VARIABLE
Rule 75    art_exp -> VARIABLE signo_arit U8
Rule 76    art_exp -> U8 signo_arit U8
Rule 77    signo_arit -> MAS
Rule 78    signo_arit -> MENOS
Rule 79    signo_arit -> MULT
Rule 80    signo_arit -> DIVISION
Rule 81    signo_arit -> MODULO
Rule 82    rango -> U8 DOT DOT U8
Rule 83    slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR
Rule 84    slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
Rule 85    valor_get -> rango
Rule 86    valor_get -> U8
Rule 87    slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
Rule 88    empty -> <empty>

Terminals, with rules where they appear

AND                  : 41 83 87
ANDAND               : 48
ARROW                : 
AS                   : 
ASIGNAR              : 11 22 37 42
ASIGNATION_TYPE      : 19 62 63 64
ASYNC                : 
AWAIT                : 
BRACKETL             : 83
BRACKETR             : 83
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 33 34 63 64 66
CONST                : 
CONTAINS_SLICE       : 87
CONTIN               : 
CRATE                : 
DATATYPES            : 20
DIFFERENT            : 57
DIVISION             : 80
DOLLAR               : 
DOT                  : 40 41 82 82 84 87
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 45 46
ENDLINE              : 11 12 31 37 40 41 42 67 68
ENUM                 : 
EQUAL                : 56
ERRORPROP            : 
EXTERN               : 
FOR                  : 60
FUNCTION             : 
GET_SLICE            : 84
GREATEQ              : 55
GREATER              : 53
HASHSET              : 37
IF                   : 44 45
IMPL                 : 
IN                   : 60
INSERT_HASH          : 40
LESSEQ               : 
LESST                : 54
LET                  : 16 17 37
LLAVEDER             : 43 60 69
LLAVEIZ              : 43 60 69
LOOP                 : 
LPAREN               : 31 40 41 68 84 87
MAS                  : 77
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 78
MINUSEQ              : 24
MOD                  : 
MODULO               : 81
MOVE                 : 
MULT                 : 79
MUT                  : 17 37
NEWFUNC              : 37
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 21
OR                   : 
OROR                 : 49
PATHSEP              : 37
PLUSEQ               : 23
POP_VEC              : 
PRINT                : 
PRINTS               : 31
PUB                  : 64
PUSH_VEC             : 
REF                  : 
RETURN               : 
RPAREN               : 31 40 41 68 84 87
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 26
STAREQ               : 25
STATIC               : 
STRING               : 27 32 33
STRUCT               : 61
SUPER                : 
TRAIT                : 
TUPLE                : 68
TYPE                 : 
U8                   : 28 51 52 72 74 75 76 76 82 82 86 87
UNION_HASH           : 41
UNIT                 : 67
UNSAFE               : 
USE                  : 
VARIABLE             : 13 14 18 19 37 40 41 41 50 50 51 52 59 60 62 63 64 69 71 73 73 74 75 83 84 87
VECTOR               : 
WHERE                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

argumentos_juntos    : 63 64 69
argumentos_tipo      : 66 68
art_exp              : 70 71 72
asignacion           : 1
comparison           : 47 48 49
conditional          : 5 42
conditional_asigned  : 6
declarador           : 11 42
empty                : 83 83 84 84 84 87 87 87
expresion            : 11 13 36 40
f_comparacion        : 60
for_loop             : 7
hashfunc             : 4
hashset              : 3
hashset_insert       : 38
hashset_union        : 39
if_type              : 43
let_asig             : 15
op_mat               : 29
oper_asig            : 13
other_operators      : 12
print_args           : 33 34
print_datos          : 34 35
print_expresion      : 31
prints               : 2
rango                : 58 83 85
rust                 : 43 60 0
sent_stru            : 61
signo_arit           : 71 72 73 74 75 76
signo_comp           : 50 51 52
slice_contains       : 10
slice_exp            : 30
slice_get            : 9
struct_s             : 8
tipos                : 19 62 63 64 65 66
validations          : 43 48 49
valor_get            : 84
var_tipo             : 16 17

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . slice_get
    (10) rust -> . slice_contains
    (11) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (12) asignacion -> . other_operators ENDLINE
    (31) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (37) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (38) hashfunc -> . hashset_insert
    (39) hashfunc -> . hashset_union
    (43) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (42) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (60) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (61) struct_s -> . STRUCT sent_stru
    (84) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (14) declarador -> . VARIABLE
    (15) declarador -> . let_asig
    (13) other_operators -> . VARIABLE oper_asig expresion
    (40) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (41) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (44) if_type -> . IF
    (45) if_type -> . ELSE IF
    (46) if_type -> . ELSE
    (16) let_asig -> . LET var_tipo
    (17) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 14
    LET             shift and go to state 15
    FOR             shift and go to state 20
    STRUCT          shift and go to state 21
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    ELSE            shift and go to state 24

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    slice_get                      shift and go to state 10
    slice_contains                 shift and go to state 11
    declarador                     shift and go to state 12
    other_operators                shift and go to state 13
    hashset_insert                 shift and go to state 17
    hashset_union                  shift and go to state 18
    if_type                        shift and go to state 19
    let_asig                       shift and go to state 22

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> prints .

    $end            reduce using rule 2 (rust -> prints .)
    LLAVEDER        reduce using rule 2 (rust -> prints .)


state 4

    (3) rust -> hashset .

    $end            reduce using rule 3 (rust -> hashset .)
    LLAVEDER        reduce using rule 3 (rust -> hashset .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) rust -> for_loop .

    $end            reduce using rule 7 (rust -> for_loop .)
    LLAVEDER        reduce using rule 7 (rust -> for_loop .)


state 9

    (8) rust -> struct_s .

    $end            reduce using rule 8 (rust -> struct_s .)
    LLAVEDER        reduce using rule 8 (rust -> struct_s .)


state 10

    (9) rust -> slice_get .

    $end            reduce using rule 9 (rust -> slice_get .)
    LLAVEDER        reduce using rule 9 (rust -> slice_get .)


state 11

    (10) rust -> slice_contains .

    $end            reduce using rule 10 (rust -> slice_contains .)
    LLAVEDER        reduce using rule 10 (rust -> slice_contains .)


state 12

    (11) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (42) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 25


state 13

    (12) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 26


state 14

    (31) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 27


state 15

    (37) hashset -> LET . MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (16) let_asig -> LET . var_tipo
    (17) let_asig -> LET . MUT var_tipo
    (18) var_tipo -> . VARIABLE
    (19) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 28
    VARIABLE        shift and go to state 29

    var_tipo                       shift and go to state 30

state 16

    (84) slice_get -> VARIABLE . empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> VARIABLE . empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (14) declarador -> VARIABLE .
    (13) other_operators -> VARIABLE . oper_asig expresion
    (40) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (41) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (88) empty -> .
    (22) oper_asig -> . ASIGNAR
    (23) oper_asig -> . PLUSEQ
    (24) oper_asig -> . MINUSEQ
    (25) oper_asig -> . STAREQ
    (26) oper_asig -> . SLASHEQ

  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for ASIGNAR resolved as shift
    DOT             shift and go to state 32
    ASIGNAR         shift and go to state 34
    PLUSEQ          shift and go to state 35
    MINUSEQ         shift and go to state 36
    STAREQ          shift and go to state 37
    SLASHEQ         shift and go to state 38

  ! ASIGNAR         [ reduce using rule 14 (declarador -> VARIABLE .) ]
  ! DOT             [ reduce using rule 88 (empty -> .) ]

    empty                          shift and go to state 31
    oper_asig                      shift and go to state 33

state 17

    (38) hashfunc -> hashset_insert .

    $end            reduce using rule 38 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 38 (hashfunc -> hashset_insert .)


state 18

    (39) hashfunc -> hashset_union .

    $end            reduce using rule 39 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 39 (hashfunc -> hashset_union .)


state 19

    (43) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (47) validations -> . comparison
    (48) validations -> . comparison ANDAND validations
    (49) validations -> . comparison OROR validations
    (50) comparison -> . VARIABLE signo_comp VARIABLE
    (51) comparison -> . VARIABLE signo_comp U8
    (52) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 41
    U8              shift and go to state 42

    validations                    shift and go to state 39
    comparison                     shift and go to state 40

state 20

    (60) for_loop -> FOR . VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER

    VARIABLE        shift and go to state 43


state 21

    (61) struct_s -> STRUCT . sent_stru
    (67) sent_stru -> . UNIT ENDLINE
    (68) sent_stru -> . TUPLE LPAREN argumentos_tipo RPAREN ENDLINE
    (69) sent_stru -> . VARIABLE LLAVEIZ argumentos_juntos LLAVEDER

    UNIT            shift and go to state 45
    TUPLE           shift and go to state 46
    VARIABLE        shift and go to state 47

    sent_stru                      shift and go to state 44

state 22

    (15) declarador -> let_asig .

    ASIGNAR         reduce using rule 15 (declarador -> let_asig .)


state 23

    (44) if_type -> IF .

    VARIABLE        reduce using rule 44 (if_type -> IF .)
    U8              reduce using rule 44 (if_type -> IF .)


state 24

    (45) if_type -> ELSE . IF
    (46) if_type -> ELSE .

    IF              shift and go to state 48
    VARIABLE        reduce using rule 46 (if_type -> ELSE .)
    U8              reduce using rule 46 (if_type -> ELSE .)


state 25

    (11) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (42) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (27) expresion -> . STRING
    (28) expresion -> . U8
    (29) expresion -> . op_mat
    (30) expresion -> . slice_exp
    (43) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE signo_arit art_exp
    (72) op_mat -> . U8 signo_arit art_exp
    (83) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (44) if_type -> . IF
    (45) if_type -> . ELSE IF
    (46) if_type -> . ELSE
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    STRING          shift and go to state 51
    U8              shift and go to state 52
    VARIABLE        shift and go to state 56
    AND             shift and go to state 57
    IF              shift and go to state 23
    ELSE            shift and go to state 24

    expresion                      shift and go to state 49
    conditional                    shift and go to state 50
    op_mat                         shift and go to state 53
    slice_exp                      shift and go to state 54
    if_type                        shift and go to state 19
    art_exp                        shift and go to state 55

state 26

    (12) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 12 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 12 (asignacion -> other_operators ENDLINE .)


state 27

    (31) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (32) print_expresion -> . STRING
    (33) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 59

    print_expresion                shift and go to state 58

state 28

    (37) hashset -> LET MUT . VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (17) let_asig -> LET MUT . var_tipo
    (18) var_tipo -> . VARIABLE
    (19) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 60

    var_tipo                       shift and go to state 61

state 29

    (18) var_tipo -> VARIABLE .
    (19) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

    ASIGNAR         reduce using rule 18 (var_tipo -> VARIABLE .)
    ASIGNATION_TYPE shift and go to state 62


state 30

    (16) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 16 (let_asig -> LET var_tipo .)


state 31

    (84) slice_get -> VARIABLE empty . DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> VARIABLE empty . DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN

    DOT             shift and go to state 63


state 32

    (40) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (41) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    INSERT_HASH     shift and go to state 64
    UNION_HASH      shift and go to state 65


state 33

    (13) other_operators -> VARIABLE oper_asig . expresion
    (27) expresion -> . STRING
    (28) expresion -> . U8
    (29) expresion -> . op_mat
    (30) expresion -> . slice_exp
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE signo_arit art_exp
    (72) op_mat -> . U8 signo_arit art_exp
    (83) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    STRING          shift and go to state 51
    U8              shift and go to state 52
    VARIABLE        shift and go to state 56
    AND             shift and go to state 57

    expresion                      shift and go to state 66
    op_mat                         shift and go to state 53
    slice_exp                      shift and go to state 54
    art_exp                        shift and go to state 55

state 34

    (22) oper_asig -> ASIGNAR .

    STRING          reduce using rule 22 (oper_asig -> ASIGNAR .)
    U8              reduce using rule 22 (oper_asig -> ASIGNAR .)
    VARIABLE        reduce using rule 22 (oper_asig -> ASIGNAR .)
    AND             reduce using rule 22 (oper_asig -> ASIGNAR .)


state 35

    (23) oper_asig -> PLUSEQ .

    STRING          reduce using rule 23 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 23 (oper_asig -> PLUSEQ .)
    VARIABLE        reduce using rule 23 (oper_asig -> PLUSEQ .)
    AND             reduce using rule 23 (oper_asig -> PLUSEQ .)


state 36

    (24) oper_asig -> MINUSEQ .

    STRING          reduce using rule 24 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 24 (oper_asig -> MINUSEQ .)
    VARIABLE        reduce using rule 24 (oper_asig -> MINUSEQ .)
    AND             reduce using rule 24 (oper_asig -> MINUSEQ .)


state 37

    (25) oper_asig -> STAREQ .

    STRING          reduce using rule 25 (oper_asig -> STAREQ .)
    U8              reduce using rule 25 (oper_asig -> STAREQ .)
    VARIABLE        reduce using rule 25 (oper_asig -> STAREQ .)
    AND             reduce using rule 25 (oper_asig -> STAREQ .)


state 38

    (26) oper_asig -> SLASHEQ .

    STRING          reduce using rule 26 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 26 (oper_asig -> SLASHEQ .)
    VARIABLE        reduce using rule 26 (oper_asig -> SLASHEQ .)
    AND             reduce using rule 26 (oper_asig -> SLASHEQ .)


state 39

    (43) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 67


state 40

    (47) validations -> comparison .
    (48) validations -> comparison . ANDAND validations
    (49) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 47 (validations -> comparison .)
    ANDAND          shift and go to state 68
    OROR            shift and go to state 69


state 41

    (50) comparison -> VARIABLE . signo_comp VARIABLE
    (51) comparison -> VARIABLE . signo_comp U8
    (53) signo_comp -> . GREATER
    (54) signo_comp -> . LESST
    (55) signo_comp -> . GREATEQ
    (56) signo_comp -> . EQUAL
    (57) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 71
    LESST           shift and go to state 72
    GREATEQ         shift and go to state 73
    EQUAL           shift and go to state 74
    DIFFERENT       shift and go to state 75

    signo_comp                     shift and go to state 70

state 42

    (52) comparison -> U8 . signo_comp VARIABLE
    (53) signo_comp -> . GREATER
    (54) signo_comp -> . LESST
    (55) signo_comp -> . GREATEQ
    (56) signo_comp -> . EQUAL
    (57) signo_comp -> . DIFFERENT

    GREATER         shift and go to state 71
    LESST           shift and go to state 72
    GREATEQ         shift and go to state 73
    EQUAL           shift and go to state 74
    DIFFERENT       shift and go to state 75

    signo_comp                     shift and go to state 76

state 43

    (60) for_loop -> FOR VARIABLE . IN f_comparacion LLAVEIZ rust LLAVEDER

    IN              shift and go to state 77


state 44

    (61) struct_s -> STRUCT sent_stru .

    $end            reduce using rule 61 (struct_s -> STRUCT sent_stru .)
    LLAVEDER        reduce using rule 61 (struct_s -> STRUCT sent_stru .)


state 45

    (67) sent_stru -> UNIT . ENDLINE

    ENDLINE         shift and go to state 78


state 46

    (68) sent_stru -> TUPLE . LPAREN argumentos_tipo RPAREN ENDLINE

    LPAREN          shift and go to state 79


state 47

    (69) sent_stru -> VARIABLE . LLAVEIZ argumentos_juntos LLAVEDER

    LLAVEIZ         shift and go to state 80


state 48

    (45) if_type -> ELSE IF .

    VARIABLE        reduce using rule 45 (if_type -> ELSE IF .)
    U8              reduce using rule 45 (if_type -> ELSE IF .)


state 49

    (11) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 81


state 50

    (42) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 82


state 51

    (27) expresion -> STRING .

    ENDLINE         reduce using rule 27 (expresion -> STRING .)
    COMMA           reduce using rule 27 (expresion -> STRING .)
    RPAREN          reduce using rule 27 (expresion -> STRING .)


state 52

    (28) expresion -> U8 .
    (72) op_mat -> U8 . signo_arit art_exp
    (74) art_exp -> U8 . signo_arit VARIABLE
    (76) art_exp -> U8 . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    ENDLINE         reduce using rule 28 (expresion -> U8 .)
    COMMA           reduce using rule 28 (expresion -> U8 .)
    RPAREN          reduce using rule 28 (expresion -> U8 .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 83

state 53

    (29) expresion -> op_mat .

    ENDLINE         reduce using rule 29 (expresion -> op_mat .)
    COMMA           reduce using rule 29 (expresion -> op_mat .)
    RPAREN          reduce using rule 29 (expresion -> op_mat .)


state 54

    (30) expresion -> slice_exp .

    ENDLINE         reduce using rule 30 (expresion -> slice_exp .)
    COMMA           reduce using rule 30 (expresion -> slice_exp .)
    RPAREN          reduce using rule 30 (expresion -> slice_exp .)


state 55

    (70) op_mat -> art_exp .

    ENDLINE         reduce using rule 70 (op_mat -> art_exp .)
    COMMA           reduce using rule 70 (op_mat -> art_exp .)
    RPAREN          reduce using rule 70 (op_mat -> art_exp .)


state 56

    (71) op_mat -> VARIABLE . signo_arit art_exp
    (73) art_exp -> VARIABLE . signo_arit VARIABLE
    (75) art_exp -> VARIABLE . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 89

state 57

    (83) slice_exp -> AND . empty VARIABLE empty BRACKETL rango BRACKETR
    (88) empty -> .

    VARIABLE        reduce using rule 88 (empty -> .)

    empty                          shift and go to state 90

state 58

    (31) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 91


state 59

    (32) print_expresion -> STRING .
    (33) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 32 (print_expresion -> STRING .)
    COMMA           shift and go to state 92


state 60

    (37) hashset -> LET MUT VARIABLE . ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (18) var_tipo -> VARIABLE .
    (19) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 93
    ASIGNATION_TYPE shift and go to state 62

  ! ASIGNAR         [ reduce using rule 18 (var_tipo -> VARIABLE .) ]


state 61

    (17) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 17 (let_asig -> LET MUT var_tipo .)


state 62

    (19) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (20) tipos -> . DATATYPES
    (21) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 95
    NUMDATATYPES    shift and go to state 96

    tipos                          shift and go to state 94

state 63

    (84) slice_get -> VARIABLE empty DOT . empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> VARIABLE empty DOT . empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (88) empty -> .

    GET_SLICE       reduce using rule 88 (empty -> .)
    CONTAINS_SLICE  reduce using rule 88 (empty -> .)

    empty                          shift and go to state 97

state 64

    (40) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 98


state 65

    (41) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 99


state 66

    (13) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 13 (other_operators -> VARIABLE oper_asig expresion .)


state 67

    (43) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . slice_get
    (10) rust -> . slice_contains
    (11) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (12) asignacion -> . other_operators ENDLINE
    (31) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (37) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (38) hashfunc -> . hashset_insert
    (39) hashfunc -> . hashset_union
    (43) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (42) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (60) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (61) struct_s -> . STRUCT sent_stru
    (84) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (14) declarador -> . VARIABLE
    (15) declarador -> . let_asig
    (13) other_operators -> . VARIABLE oper_asig expresion
    (40) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (41) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (44) if_type -> . IF
    (45) if_type -> . ELSE IF
    (46) if_type -> . ELSE
    (16) let_asig -> . LET var_tipo
    (17) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 14
    LET             shift and go to state 15
    FOR             shift and go to state 20
    STRUCT          shift and go to state 21
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    ELSE            shift and go to state 24

    if_type                        shift and go to state 19
    rust                           shift and go to state 100
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    slice_get                      shift and go to state 10
    slice_contains                 shift and go to state 11
    declarador                     shift and go to state 12
    other_operators                shift and go to state 13
    hashset_insert                 shift and go to state 17
    hashset_union                  shift and go to state 18
    let_asig                       shift and go to state 22

state 68

    (48) validations -> comparison ANDAND . validations
    (47) validations -> . comparison
    (48) validations -> . comparison ANDAND validations
    (49) validations -> . comparison OROR validations
    (50) comparison -> . VARIABLE signo_comp VARIABLE
    (51) comparison -> . VARIABLE signo_comp U8
    (52) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 41
    U8              shift and go to state 42

    comparison                     shift and go to state 40
    validations                    shift and go to state 101

state 69

    (49) validations -> comparison OROR . validations
    (47) validations -> . comparison
    (48) validations -> . comparison ANDAND validations
    (49) validations -> . comparison OROR validations
    (50) comparison -> . VARIABLE signo_comp VARIABLE
    (51) comparison -> . VARIABLE signo_comp U8
    (52) comparison -> . U8 signo_comp VARIABLE

    VARIABLE        shift and go to state 41
    U8              shift and go to state 42

    comparison                     shift and go to state 40
    validations                    shift and go to state 102

state 70

    (50) comparison -> VARIABLE signo_comp . VARIABLE
    (51) comparison -> VARIABLE signo_comp . U8

    VARIABLE        shift and go to state 103
    U8              shift and go to state 104


state 71

    (53) signo_comp -> GREATER .

    VARIABLE        reduce using rule 53 (signo_comp -> GREATER .)
    U8              reduce using rule 53 (signo_comp -> GREATER .)


state 72

    (54) signo_comp -> LESST .

    VARIABLE        reduce using rule 54 (signo_comp -> LESST .)
    U8              reduce using rule 54 (signo_comp -> LESST .)


state 73

    (55) signo_comp -> GREATEQ .

    VARIABLE        reduce using rule 55 (signo_comp -> GREATEQ .)
    U8              reduce using rule 55 (signo_comp -> GREATEQ .)


state 74

    (56) signo_comp -> EQUAL .

    VARIABLE        reduce using rule 56 (signo_comp -> EQUAL .)
    U8              reduce using rule 56 (signo_comp -> EQUAL .)


state 75

    (57) signo_comp -> DIFFERENT .

    VARIABLE        reduce using rule 57 (signo_comp -> DIFFERENT .)
    U8              reduce using rule 57 (signo_comp -> DIFFERENT .)


state 76

    (52) comparison -> U8 signo_comp . VARIABLE

    VARIABLE        shift and go to state 105


state 77

    (60) for_loop -> FOR VARIABLE IN . f_comparacion LLAVEIZ rust LLAVEDER
    (58) f_comparacion -> . rango
    (59) f_comparacion -> . VARIABLE
    (82) rango -> . U8 DOT DOT U8

    VARIABLE        shift and go to state 106
    U8              shift and go to state 109

    f_comparacion                  shift and go to state 107
    rango                          shift and go to state 108

state 78

    (67) sent_stru -> UNIT ENDLINE .

    $end            reduce using rule 67 (sent_stru -> UNIT ENDLINE .)
    LLAVEDER        reduce using rule 67 (sent_stru -> UNIT ENDLINE .)


state 79

    (68) sent_stru -> TUPLE LPAREN . argumentos_tipo RPAREN ENDLINE
    (65) argumentos_tipo -> . tipos
    (66) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (20) tipos -> . DATATYPES
    (21) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 95
    NUMDATATYPES    shift and go to state 96

    argumentos_tipo                shift and go to state 110
    tipos                          shift and go to state 111

state 80

    (69) sent_stru -> VARIABLE LLAVEIZ . argumentos_juntos LLAVEDER
    (62) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (63) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (64) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 112
    PUB             shift and go to state 114

    argumentos_juntos              shift and go to state 113

state 81

    (11) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 11 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 11 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 82

    (42) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 42 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 42 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 83

    (72) op_mat -> U8 signo_arit . art_exp
    (74) art_exp -> U8 signo_arit . VARIABLE
    (76) art_exp -> U8 signo_arit . U8
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    VARIABLE        shift and go to state 117
    U8              shift and go to state 115

    art_exp                        shift and go to state 116

state 84

    (77) signo_arit -> MAS .

    VARIABLE        reduce using rule 77 (signo_arit -> MAS .)
    U8              reduce using rule 77 (signo_arit -> MAS .)


state 85

    (78) signo_arit -> MENOS .

    VARIABLE        reduce using rule 78 (signo_arit -> MENOS .)
    U8              reduce using rule 78 (signo_arit -> MENOS .)


state 86

    (79) signo_arit -> MULT .

    VARIABLE        reduce using rule 79 (signo_arit -> MULT .)
    U8              reduce using rule 79 (signo_arit -> MULT .)


state 87

    (80) signo_arit -> DIVISION .

    VARIABLE        reduce using rule 80 (signo_arit -> DIVISION .)
    U8              reduce using rule 80 (signo_arit -> DIVISION .)


state 88

    (81) signo_arit -> MODULO .

    VARIABLE        reduce using rule 81 (signo_arit -> MODULO .)
    U8              reduce using rule 81 (signo_arit -> MODULO .)


state 89

    (71) op_mat -> VARIABLE signo_arit . art_exp
    (73) art_exp -> VARIABLE signo_arit . VARIABLE
    (75) art_exp -> VARIABLE signo_arit . U8
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    VARIABLE        shift and go to state 118
    U8              shift and go to state 120

    art_exp                        shift and go to state 119

state 90

    (83) slice_exp -> AND empty . VARIABLE empty BRACKETL rango BRACKETR

    VARIABLE        shift and go to state 121


state 91

    (31) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 122


state 92

    (33) print_expresion -> STRING COMMA . print_args
    (34) print_args -> . print_datos COMMA print_args
    (35) print_args -> . print_datos
    (36) print_datos -> . expresion
    (27) expresion -> . STRING
    (28) expresion -> . U8
    (29) expresion -> . op_mat
    (30) expresion -> . slice_exp
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE signo_arit art_exp
    (72) op_mat -> . U8 signo_arit art_exp
    (83) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    STRING          shift and go to state 51
    U8              shift and go to state 52
    VARIABLE        shift and go to state 56
    AND             shift and go to state 57

    print_args                     shift and go to state 123
    print_datos                    shift and go to state 124
    expresion                      shift and go to state 125
    op_mat                         shift and go to state 53
    slice_exp                      shift and go to state 54
    art_exp                        shift and go to state 55

state 93

    (37) hashset -> LET MUT VARIABLE ASIGNAR . HASHSET PATHSEP NEWFUNC ENDLINE

    HASHSET         shift and go to state 126


state 94

    (19) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 19 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 95

    (20) tipos -> DATATYPES .

    ASIGNAR         reduce using rule 20 (tipos -> DATATYPES .)
    COMMA           reduce using rule 20 (tipos -> DATATYPES .)
    RPAREN          reduce using rule 20 (tipos -> DATATYPES .)
    LLAVEDER        reduce using rule 20 (tipos -> DATATYPES .)


state 96

    (21) tipos -> NUMDATATYPES .

    ASIGNAR         reduce using rule 21 (tipos -> NUMDATATYPES .)
    COMMA           reduce using rule 21 (tipos -> NUMDATATYPES .)
    RPAREN          reduce using rule 21 (tipos -> NUMDATATYPES .)
    LLAVEDER        reduce using rule 21 (tipos -> NUMDATATYPES .)


state 97

    (84) slice_get -> VARIABLE empty DOT empty . GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> VARIABLE empty DOT empty . CONTAINS_SLICE empty LPAREN AND U8 RPAREN

    GET_SLICE       shift and go to state 127
    CONTAINS_SLICE  shift and go to state 128


state 98

    (40) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (27) expresion -> . STRING
    (28) expresion -> . U8
    (29) expresion -> . op_mat
    (30) expresion -> . slice_exp
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE signo_arit art_exp
    (72) op_mat -> . U8 signo_arit art_exp
    (83) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    STRING          shift and go to state 51
    U8              shift and go to state 52
    VARIABLE        shift and go to state 56
    AND             shift and go to state 57

    expresion                      shift and go to state 129
    op_mat                         shift and go to state 53
    slice_exp                      shift and go to state 54
    art_exp                        shift and go to state 55

state 99

    (41) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 130


state 100

    (43) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 131


state 101

    (48) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 48 (validations -> comparison ANDAND validations .)


state 102

    (49) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 49 (validations -> comparison OROR validations .)


state 103

    (50) comparison -> VARIABLE signo_comp VARIABLE .

    ANDAND          reduce using rule 50 (comparison -> VARIABLE signo_comp VARIABLE .)
    OROR            reduce using rule 50 (comparison -> VARIABLE signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 50 (comparison -> VARIABLE signo_comp VARIABLE .)


state 104

    (51) comparison -> VARIABLE signo_comp U8 .

    ANDAND          reduce using rule 51 (comparison -> VARIABLE signo_comp U8 .)
    OROR            reduce using rule 51 (comparison -> VARIABLE signo_comp U8 .)
    LLAVEIZ         reduce using rule 51 (comparison -> VARIABLE signo_comp U8 .)


state 105

    (52) comparison -> U8 signo_comp VARIABLE .

    ANDAND          reduce using rule 52 (comparison -> U8 signo_comp VARIABLE .)
    OROR            reduce using rule 52 (comparison -> U8 signo_comp VARIABLE .)
    LLAVEIZ         reduce using rule 52 (comparison -> U8 signo_comp VARIABLE .)


state 106

    (59) f_comparacion -> VARIABLE .

    LLAVEIZ         reduce using rule 59 (f_comparacion -> VARIABLE .)


state 107

    (60) for_loop -> FOR VARIABLE IN f_comparacion . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 132


state 108

    (58) f_comparacion -> rango .

    LLAVEIZ         reduce using rule 58 (f_comparacion -> rango .)


state 109

    (82) rango -> U8 . DOT DOT U8

    DOT             shift and go to state 133


state 110

    (68) sent_stru -> TUPLE LPAREN argumentos_tipo . RPAREN ENDLINE

    RPAREN          shift and go to state 134


state 111

    (65) argumentos_tipo -> tipos .
    (66) argumentos_tipo -> tipos . COMMA argumentos_tipo

    RPAREN          reduce using rule 65 (argumentos_tipo -> tipos .)
    COMMA           shift and go to state 135


state 112

    (62) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos
    (63) argumentos_juntos -> VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 136


state 113

    (69) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos . LLAVEDER

    LLAVEDER        shift and go to state 137


state 114

    (64) argumentos_juntos -> PUB . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 138


state 115

    (76) art_exp -> U8 signo_arit U8 .
    (74) art_exp -> U8 . signo_arit VARIABLE
    (76) art_exp -> U8 . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    ENDLINE         reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    COMMA           reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    RPAREN          reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 139

state 116

    (72) op_mat -> U8 signo_arit art_exp .

    ENDLINE         reduce using rule 72 (op_mat -> U8 signo_arit art_exp .)
    COMMA           reduce using rule 72 (op_mat -> U8 signo_arit art_exp .)
    RPAREN          reduce using rule 72 (op_mat -> U8 signo_arit art_exp .)


state 117

    (74) art_exp -> U8 signo_arit VARIABLE .
    (73) art_exp -> VARIABLE . signo_arit VARIABLE
    (75) art_exp -> VARIABLE . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    ENDLINE         reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    COMMA           reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    RPAREN          reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 140

state 118

    (73) art_exp -> VARIABLE signo_arit VARIABLE .
    (73) art_exp -> VARIABLE . signo_arit VARIABLE
    (75) art_exp -> VARIABLE . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    ENDLINE         reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    COMMA           reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    RPAREN          reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 140

state 119

    (71) op_mat -> VARIABLE signo_arit art_exp .

    ENDLINE         reduce using rule 71 (op_mat -> VARIABLE signo_arit art_exp .)
    COMMA           reduce using rule 71 (op_mat -> VARIABLE signo_arit art_exp .)
    RPAREN          reduce using rule 71 (op_mat -> VARIABLE signo_arit art_exp .)


state 120

    (75) art_exp -> VARIABLE signo_arit U8 .
    (74) art_exp -> U8 . signo_arit VARIABLE
    (76) art_exp -> U8 . signo_arit U8
    (77) signo_arit -> . MAS
    (78) signo_arit -> . MENOS
    (79) signo_arit -> . MULT
    (80) signo_arit -> . DIVISION
    (81) signo_arit -> . MODULO

    ENDLINE         reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    COMMA           reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    RPAREN          reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    MAS             shift and go to state 84
    MENOS           shift and go to state 85
    MULT            shift and go to state 86
    DIVISION        shift and go to state 87
    MODULO          shift and go to state 88

    signo_arit                     shift and go to state 139

state 121

    (83) slice_exp -> AND empty VARIABLE . empty BRACKETL rango BRACKETR
    (88) empty -> .

    BRACKETL        reduce using rule 88 (empty -> .)

    empty                          shift and go to state 141

state 122

    (31) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 31 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 31 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 123

    (33) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 33 (print_expresion -> STRING COMMA print_args .)


state 124

    (34) print_args -> print_datos . COMMA print_args
    (35) print_args -> print_datos .

    COMMA           shift and go to state 142
    RPAREN          reduce using rule 35 (print_args -> print_datos .)


state 125

    (36) print_datos -> expresion .

    COMMA           reduce using rule 36 (print_datos -> expresion .)
    RPAREN          reduce using rule 36 (print_datos -> expresion .)


state 126

    (37) hashset -> LET MUT VARIABLE ASIGNAR HASHSET . PATHSEP NEWFUNC ENDLINE

    PATHSEP         shift and go to state 143


state 127

    (84) slice_get -> VARIABLE empty DOT empty GET_SLICE . empty LPAREN valor_get RPAREN
    (88) empty -> .

    LPAREN          reduce using rule 88 (empty -> .)

    empty                          shift and go to state 144

state 128

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE . empty LPAREN AND U8 RPAREN
    (88) empty -> .

    LPAREN          reduce using rule 88 (empty -> .)

    empty                          shift and go to state 145

state 129

    (40) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 146


state 130

    (41) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 147


state 131

    (43) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 43 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 43 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 43 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 132

    (60) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) rust -> . for_loop
    (8) rust -> . struct_s
    (9) rust -> . slice_get
    (10) rust -> . slice_contains
    (11) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (12) asignacion -> . other_operators ENDLINE
    (31) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (37) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (38) hashfunc -> . hashset_insert
    (39) hashfunc -> . hashset_union
    (43) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (42) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (60) for_loop -> . FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER
    (61) struct_s -> . STRUCT sent_stru
    (84) slice_get -> . VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN
    (87) slice_contains -> . VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN
    (14) declarador -> . VARIABLE
    (15) declarador -> . let_asig
    (13) other_operators -> . VARIABLE oper_asig expresion
    (40) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (41) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (44) if_type -> . IF
    (45) if_type -> . ELSE IF
    (46) if_type -> . ELSE
    (16) let_asig -> . LET var_tipo
    (17) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 14
    LET             shift and go to state 15
    FOR             shift and go to state 20
    STRUCT          shift and go to state 21
    VARIABLE        shift and go to state 16
    IF              shift and go to state 23
    ELSE            shift and go to state 24

    rust                           shift and go to state 148
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    for_loop                       shift and go to state 8
    struct_s                       shift and go to state 9
    slice_get                      shift and go to state 10
    slice_contains                 shift and go to state 11
    declarador                     shift and go to state 12
    other_operators                shift and go to state 13
    hashset_insert                 shift and go to state 17
    hashset_union                  shift and go to state 18
    if_type                        shift and go to state 19
    let_asig                       shift and go to state 22

state 133

    (82) rango -> U8 DOT . DOT U8

    DOT             shift and go to state 149


state 134

    (68) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN . ENDLINE

    ENDLINE         shift and go to state 150


state 135

    (66) argumentos_tipo -> tipos COMMA . argumentos_tipo
    (65) argumentos_tipo -> . tipos
    (66) argumentos_tipo -> . tipos COMMA argumentos_tipo
    (20) tipos -> . DATATYPES
    (21) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 95
    NUMDATATYPES    shift and go to state 96

    tipos                          shift and go to state 111
    argumentos_tipo                shift and go to state 151

state 136

    (62) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos
    (63) argumentos_juntos -> VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (20) tipos -> . DATATYPES
    (21) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 95
    NUMDATATYPES    shift and go to state 96

    tipos                          shift and go to state 152

state 137

    (69) sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .

    $end            reduce using rule 69 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)
    LLAVEDER        reduce using rule 69 (sent_stru -> VARIABLE LLAVEIZ argumentos_juntos LLAVEDER .)


state 138

    (64) argumentos_juntos -> PUB VARIABLE . ASIGNATION_TYPE tipos COMMA argumentos_juntos

    ASIGNATION_TYPE shift and go to state 153


state 139

    (74) art_exp -> U8 signo_arit . VARIABLE
    (76) art_exp -> U8 signo_arit . U8

    VARIABLE        shift and go to state 155
    U8              shift and go to state 154


state 140

    (73) art_exp -> VARIABLE signo_arit . VARIABLE
    (75) art_exp -> VARIABLE signo_arit . U8

    VARIABLE        shift and go to state 156
    U8              shift and go to state 157


state 141

    (83) slice_exp -> AND empty VARIABLE empty . BRACKETL rango BRACKETR

    BRACKETL        shift and go to state 158


state 142

    (34) print_args -> print_datos COMMA . print_args
    (34) print_args -> . print_datos COMMA print_args
    (35) print_args -> . print_datos
    (36) print_datos -> . expresion
    (27) expresion -> . STRING
    (28) expresion -> . U8
    (29) expresion -> . op_mat
    (30) expresion -> . slice_exp
    (70) op_mat -> . art_exp
    (71) op_mat -> . VARIABLE signo_arit art_exp
    (72) op_mat -> . U8 signo_arit art_exp
    (83) slice_exp -> . AND empty VARIABLE empty BRACKETL rango BRACKETR
    (73) art_exp -> . VARIABLE signo_arit VARIABLE
    (74) art_exp -> . U8 signo_arit VARIABLE
    (75) art_exp -> . VARIABLE signo_arit U8
    (76) art_exp -> . U8 signo_arit U8

    STRING          shift and go to state 51
    U8              shift and go to state 52
    VARIABLE        shift and go to state 56
    AND             shift and go to state 57

    print_datos                    shift and go to state 124
    print_args                     shift and go to state 159
    expresion                      shift and go to state 125
    op_mat                         shift and go to state 53
    slice_exp                      shift and go to state 54
    art_exp                        shift and go to state 55

state 143

    (37) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP . NEWFUNC ENDLINE

    NEWFUNC         shift and go to state 160


state 144

    (84) slice_get -> VARIABLE empty DOT empty GET_SLICE empty . LPAREN valor_get RPAREN

    LPAREN          shift and go to state 161


state 145

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty . LPAREN AND U8 RPAREN

    LPAREN          shift and go to state 162


state 146

    (40) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 163


state 147

    (41) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 164


state 148

    (60) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 165


state 149

    (82) rango -> U8 DOT DOT . U8

    U8              shift and go to state 166


state 150

    (68) sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .

    $end            reduce using rule 68 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 68 (sent_stru -> TUPLE LPAREN argumentos_tipo RPAREN ENDLINE .)


state 151

    (66) argumentos_tipo -> tipos COMMA argumentos_tipo .

    RPAREN          reduce using rule 66 (argumentos_tipo -> tipos COMMA argumentos_tipo .)


state 152

    (62) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .
    (63) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    LLAVEDER        reduce using rule 62 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos .)
    COMMA           shift and go to state 167


state 153

    (64) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE . tipos COMMA argumentos_juntos
    (20) tipos -> . DATATYPES
    (21) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 95
    NUMDATATYPES    shift and go to state 96

    tipos                          shift and go to state 168

state 154

    (76) art_exp -> U8 signo_arit U8 .

    ENDLINE         reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    COMMA           reduce using rule 76 (art_exp -> U8 signo_arit U8 .)
    RPAREN          reduce using rule 76 (art_exp -> U8 signo_arit U8 .)


state 155

    (74) art_exp -> U8 signo_arit VARIABLE .

    ENDLINE         reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    COMMA           reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)
    RPAREN          reduce using rule 74 (art_exp -> U8 signo_arit VARIABLE .)


state 156

    (73) art_exp -> VARIABLE signo_arit VARIABLE .

    ENDLINE         reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    COMMA           reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)
    RPAREN          reduce using rule 73 (art_exp -> VARIABLE signo_arit VARIABLE .)


state 157

    (75) art_exp -> VARIABLE signo_arit U8 .

    ENDLINE         reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    COMMA           reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)
    RPAREN          reduce using rule 75 (art_exp -> VARIABLE signo_arit U8 .)


state 158

    (83) slice_exp -> AND empty VARIABLE empty BRACKETL . rango BRACKETR
    (82) rango -> . U8 DOT DOT U8

    U8              shift and go to state 109

    rango                          shift and go to state 169

state 159

    (34) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 34 (print_args -> print_datos COMMA print_args .)


state 160

    (37) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 170


state 161

    (84) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN . valor_get RPAREN
    (85) valor_get -> . rango
    (86) valor_get -> . U8
    (82) rango -> . U8 DOT DOT U8

    U8              shift and go to state 173

    valor_get                      shift and go to state 171
    rango                          shift and go to state 172

state 162

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN . AND U8 RPAREN

    AND             shift and go to state 174


state 163

    (40) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 40 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 40 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 164

    (41) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 175


state 165

    (60) for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 60 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 60 (for_loop -> FOR VARIABLE IN f_comparacion LLAVEIZ rust LLAVEDER .)


state 166

    (82) rango -> U8 DOT DOT U8 .

    LLAVEIZ         reduce using rule 82 (rango -> U8 DOT DOT U8 .)
    BRACKETR        reduce using rule 82 (rango -> U8 DOT DOT U8 .)
    RPAREN          reduce using rule 82 (rango -> U8 DOT DOT U8 .)


state 167

    (63) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (62) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (63) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (64) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 112
    PUB             shift and go to state 114

    argumentos_juntos              shift and go to state 176

state 168

    (64) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos . COMMA argumentos_juntos

    COMMA           shift and go to state 177


state 169

    (83) slice_exp -> AND empty VARIABLE empty BRACKETL rango . BRACKETR

    BRACKETR        shift and go to state 178


state 170

    (37) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 37 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 37 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)


state 171

    (84) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get . RPAREN

    RPAREN          shift and go to state 179


state 172

    (85) valor_get -> rango .

    RPAREN          reduce using rule 85 (valor_get -> rango .)


state 173

    (86) valor_get -> U8 .
    (82) rango -> U8 . DOT DOT U8

    RPAREN          reduce using rule 86 (valor_get -> U8 .)
    DOT             shift and go to state 133


state 174

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND . U8 RPAREN

    U8              shift and go to state 180


state 175

    (41) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 41 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 41 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)


state 176

    (63) argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 63 (argumentos_juntos -> VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 177

    (64) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA . argumentos_juntos
    (62) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos
    (63) argumentos_juntos -> . VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos
    (64) argumentos_juntos -> . PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos

    VARIABLE        shift and go to state 112
    PUB             shift and go to state 114

    argumentos_juntos              shift and go to state 181

state 178

    (83) slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .

    ENDLINE         reduce using rule 83 (slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .)
    COMMA           reduce using rule 83 (slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .)
    RPAREN          reduce using rule 83 (slice_exp -> AND empty VARIABLE empty BRACKETL rango BRACKETR .)


state 179

    (84) slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .

    $end            reduce using rule 84 (slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .)
    LLAVEDER        reduce using rule 84 (slice_get -> VARIABLE empty DOT empty GET_SLICE empty LPAREN valor_get RPAREN .)


state 180

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 . RPAREN

    RPAREN          shift and go to state 182


state 181

    (64) argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .

    LLAVEDER        reduce using rule 64 (argumentos_juntos -> PUB VARIABLE ASIGNATION_TYPE tipos COMMA argumentos_juntos .)


state 182

    (87) slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .

    $end            reduce using rule 87 (slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .)
    LLAVEDER        reduce using rule 87 (slice_contains -> VARIABLE empty DOT empty CONTAINS_SLICE empty LPAREN AND U8 RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOT in state 16 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 16 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 60 resolved as shift
