Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ARROW
    AS
    ASYNC
    AWAIT
    BRACKETL
    BRACKETR
    BREAK
    B_FALSE
    B_TRUE
    CONST
    CONTAINS_SLICE
    CONTIN
    CRATE
    DIFFERENT
    DIVISION
    DOLLAR
    DOTDOTDOT
    DYN
    ENUM
    EQUAL
    ERRORPROP
    EXTERN
    FOR
    FUNCTION
    GET_SLICE
    GREATEQ
    IMPL
    IN
    LESSEQ
    LESST
    LOOP
    MAS
    MATCH
    MAYOR
    MAYORIGUAL
    MENOS
    MOD
    MODULO
    MOVE
    MULT
    NOT
    NUMBER
    OR
    POP_VEC
    PRINT
    PUB
    PUSH_VEC
    REF
    RETURN
    SELF
    SELFLOWERCASE
    STATIC
    STRUCT
    SUPER
    TRAIT
    TYPE
    UNSAFE
    USE
    VECTOR
    WHERE
    WHILE

Grammar

Rule 0     S' -> rust
Rule 1     rust -> asignacion
Rule 2     rust -> prints
Rule 3     rust -> hashset
Rule 4     rust -> hashfunc
Rule 5     rust -> conditional
Rule 6     rust -> conditional_asigned
Rule 7     asignacion -> declarador ASIGNAR expresion ENDLINE
Rule 8     asignacion -> other_operators ENDLINE
Rule 9     other_operators -> VARIABLE oper_asig expresion
Rule 10    declarador -> VARIABLE
Rule 11    declarador -> let_asig
Rule 12    let_asig -> LET var_tipo
Rule 13    let_asig -> LET MUT var_tipo
Rule 14    var_tipo -> VARIABLE
Rule 15    var_tipo -> VARIABLE ASIGNATION_TYPE tipos
Rule 16    tipos -> DATATYPES
Rule 17    tipos -> NUMDATATYPES
Rule 18    oper_asig -> ASIGNAR
Rule 19    oper_asig -> PLUSEQ
Rule 20    oper_asig -> MINUSEQ
Rule 21    oper_asig -> STAREQ
Rule 22    oper_asig -> SLASHEQ
Rule 23    expresion -> STRING
Rule 24    expresion -> U8
Rule 25    prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE
Rule 26    print_expresion -> STRING
Rule 27    print_expresion -> STRING COMMA print_args
Rule 28    print_args -> print_datos COMMA print_args
Rule 29    print_args -> print_datos
Rule 30    print_datos -> expresion
Rule 31    hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
Rule 32    hashfunc -> hashset_insert
Rule 33    hashfunc -> hashset_union
Rule 34    hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
Rule 35    hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
Rule 36    conditional_asigned -> declarador ASIGNAR conditional ENDLINE
Rule 37    conditional -> if_type validations LLAVEIZ rust LLAVEDER
Rule 38    if_type -> IF
Rule 39    if_type -> ELSE IF
Rule 40    if_type -> ELSE
Rule 41    validations -> comparison
Rule 42    validations -> comparison ANDAND validations
Rule 43    validations -> comparison OROR validations
Rule 44    comparison -> VARIABLE GREATER VARIABLE

Terminals, with rules where they appear

AND                  : 35
ANDAND               : 42
ARROW                : 
AS                   : 
ASIGNAR              : 7 18 31 36
ASIGNATION_TYPE      : 15
ASYNC                : 
AWAIT                : 
BRACKETL             : 
BRACKETR             : 
BREAK                : 
B_FALSE              : 
B_TRUE               : 
COMMA                : 27 28
CONST                : 
CONTAINS_SLICE       : 
CONTIN               : 
CRATE                : 
DATATYPES            : 16
DIFFERENT            : 
DIVISION             : 
DOLLAR               : 
DOT                  : 34 35
DOTDOTDOT            : 
DYN                  : 
ELSE                 : 39 40
ENDLINE              : 7 8 25 31 34 35 36
ENUM                 : 
EQUAL                : 
ERRORPROP            : 
EXTERN               : 
FOR                  : 
FUNCTION             : 
GET_SLICE            : 
GREATEQ              : 
GREATER              : 44
HASHSET              : 31
IF                   : 38 39
IMPL                 : 
IN                   : 
INSERT_HASH          : 34
LESSEQ               : 
LESST                : 
LET                  : 12 13 31
LLAVEDER             : 37
LLAVEIZ              : 37
LOOP                 : 
LPAREN               : 25 34 35
MAS                  : 
MATCH                : 
MAYOR                : 
MAYORIGUAL           : 
MENOS                : 
MINUSEQ              : 20
MOD                  : 
MODULO               : 
MOVE                 : 
MULT                 : 
MUT                  : 13 31
NEWFUNC              : 31
NOT                  : 
NUMBER               : 
NUMDATATYPES         : 17
OR                   : 
OROR                 : 43
PATHSEP              : 31
PLUSEQ               : 19
POP_VEC              : 
PRINT                : 
PRINTS               : 25
PUB                  : 
PUSH_VEC             : 
REF                  : 
RETURN               : 
RPAREN               : 25 34 35
SELF                 : 
SELFLOWERCASE        : 
SLASHEQ              : 22
STAREQ               : 21
STATIC               : 
STRING               : 23 26 27
STRUCT               : 
SUPER                : 
TRAIT                : 
TYPE                 : 
U8                   : 24
UNION_HASH           : 35
UNSAFE               : 
USE                  : 
VARIABLE             : 9 10 14 15 31 34 35 35 44 44
VECTOR               : 
WHERE                : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 1
comparison           : 41 42 43
conditional          : 5 36
conditional_asigned  : 6
declarador           : 7 36
expresion            : 7 9 30 34
hashfunc             : 4
hashset              : 3
hashset_insert       : 32
hashset_union        : 33
if_type              : 37
let_asig             : 11
oper_asig            : 9
other_operators      : 8
print_args           : 27 28
print_datos          : 28 29
print_expresion      : 25
prints               : 2
rust                 : 37 0
tipos                : 15
validations          : 37 42 43
var_tipo             : 12 13

Parsing method: LALR

state 0

    (0) S' -> . rust
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (8) asignacion -> . other_operators ENDLINE
    (25) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (31) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (32) hashfunc -> . hashset_insert
    (33) hashfunc -> . hashset_union
    (37) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (36) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (10) declarador -> . VARIABLE
    (11) declarador -> . let_asig
    (9) other_operators -> . VARIABLE oper_asig expresion
    (34) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (35) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (38) if_type -> . IF
    (39) if_type -> . ELSE IF
    (40) if_type -> . ELSE
    (12) let_asig -> . LET var_tipo
    (13) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 10
    LET             shift and go to state 11
    VARIABLE        shift and go to state 12
    IF              shift and go to state 17
    ELSE            shift and go to state 18

    rust                           shift and go to state 1
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    declarador                     shift and go to state 8
    other_operators                shift and go to state 9
    hashset_insert                 shift and go to state 13
    hashset_union                  shift and go to state 14
    if_type                        shift and go to state 15
    let_asig                       shift and go to state 16

state 1

    (0) S' -> rust .



state 2

    (1) rust -> asignacion .

    $end            reduce using rule 1 (rust -> asignacion .)
    LLAVEDER        reduce using rule 1 (rust -> asignacion .)


state 3

    (2) rust -> prints .

    $end            reduce using rule 2 (rust -> prints .)
    LLAVEDER        reduce using rule 2 (rust -> prints .)


state 4

    (3) rust -> hashset .

    $end            reduce using rule 3 (rust -> hashset .)
    LLAVEDER        reduce using rule 3 (rust -> hashset .)


state 5

    (4) rust -> hashfunc .

    $end            reduce using rule 4 (rust -> hashfunc .)
    LLAVEDER        reduce using rule 4 (rust -> hashfunc .)


state 6

    (5) rust -> conditional .

    $end            reduce using rule 5 (rust -> conditional .)
    LLAVEDER        reduce using rule 5 (rust -> conditional .)


state 7

    (6) rust -> conditional_asigned .

    $end            reduce using rule 6 (rust -> conditional_asigned .)
    LLAVEDER        reduce using rule 6 (rust -> conditional_asigned .)


state 8

    (7) asignacion -> declarador . ASIGNAR expresion ENDLINE
    (36) conditional_asigned -> declarador . ASIGNAR conditional ENDLINE

    ASIGNAR         shift and go to state 19


state 9

    (8) asignacion -> other_operators . ENDLINE

    ENDLINE         shift and go to state 20


state 10

    (25) prints -> PRINTS . LPAREN print_expresion RPAREN ENDLINE

    LPAREN          shift and go to state 21


state 11

    (31) hashset -> LET . MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (12) let_asig -> LET . var_tipo
    (13) let_asig -> LET . MUT var_tipo
    (14) var_tipo -> . VARIABLE
    (15) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    MUT             shift and go to state 22
    VARIABLE        shift and go to state 23

    var_tipo                       shift and go to state 24

state 12

    (10) declarador -> VARIABLE .
    (9) other_operators -> VARIABLE . oper_asig expresion
    (34) hashset_insert -> VARIABLE . DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (35) hashset_union -> VARIABLE . DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (18) oper_asig -> . ASIGNAR
    (19) oper_asig -> . PLUSEQ
    (20) oper_asig -> . MINUSEQ
    (21) oper_asig -> . STAREQ
    (22) oper_asig -> . SLASHEQ

  ! shift/reduce conflict for ASIGNAR resolved as shift
    DOT             shift and go to state 26
    ASIGNAR         shift and go to state 27
    PLUSEQ          shift and go to state 28
    MINUSEQ         shift and go to state 29
    STAREQ          shift and go to state 30
    SLASHEQ         shift and go to state 31

  ! ASIGNAR         [ reduce using rule 10 (declarador -> VARIABLE .) ]

    oper_asig                      shift and go to state 25

state 13

    (32) hashfunc -> hashset_insert .

    $end            reduce using rule 32 (hashfunc -> hashset_insert .)
    LLAVEDER        reduce using rule 32 (hashfunc -> hashset_insert .)


state 14

    (33) hashfunc -> hashset_union .

    $end            reduce using rule 33 (hashfunc -> hashset_union .)
    LLAVEDER        reduce using rule 33 (hashfunc -> hashset_union .)


state 15

    (37) conditional -> if_type . validations LLAVEIZ rust LLAVEDER
    (41) validations -> . comparison
    (42) validations -> . comparison ANDAND validations
    (43) validations -> . comparison OROR validations
    (44) comparison -> . VARIABLE GREATER VARIABLE

    VARIABLE        shift and go to state 34

    validations                    shift and go to state 32
    comparison                     shift and go to state 33

state 16

    (11) declarador -> let_asig .

    ASIGNAR         reduce using rule 11 (declarador -> let_asig .)


state 17

    (38) if_type -> IF .

    VARIABLE        reduce using rule 38 (if_type -> IF .)


state 18

    (39) if_type -> ELSE . IF
    (40) if_type -> ELSE .

    IF              shift and go to state 35
    VARIABLE        reduce using rule 40 (if_type -> ELSE .)


state 19

    (7) asignacion -> declarador ASIGNAR . expresion ENDLINE
    (36) conditional_asigned -> declarador ASIGNAR . conditional ENDLINE
    (23) expresion -> . STRING
    (24) expresion -> . U8
    (37) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (38) if_type -> . IF
    (39) if_type -> . ELSE IF
    (40) if_type -> . ELSE

    STRING          shift and go to state 38
    U8              shift and go to state 39
    IF              shift and go to state 17
    ELSE            shift and go to state 18

    expresion                      shift and go to state 36
    conditional                    shift and go to state 37
    if_type                        shift and go to state 15

state 20

    (8) asignacion -> other_operators ENDLINE .

    $end            reduce using rule 8 (asignacion -> other_operators ENDLINE .)
    LLAVEDER        reduce using rule 8 (asignacion -> other_operators ENDLINE .)


state 21

    (25) prints -> PRINTS LPAREN . print_expresion RPAREN ENDLINE
    (26) print_expresion -> . STRING
    (27) print_expresion -> . STRING COMMA print_args

    STRING          shift and go to state 41

    print_expresion                shift and go to state 40

state 22

    (31) hashset -> LET MUT . VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (13) let_asig -> LET MUT . var_tipo
    (14) var_tipo -> . VARIABLE
    (15) var_tipo -> . VARIABLE ASIGNATION_TYPE tipos

    VARIABLE        shift and go to state 42

    var_tipo                       shift and go to state 43

state 23

    (14) var_tipo -> VARIABLE .
    (15) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

    ASIGNAR         reduce using rule 14 (var_tipo -> VARIABLE .)
    ASIGNATION_TYPE shift and go to state 44


state 24

    (12) let_asig -> LET var_tipo .

    ASIGNAR         reduce using rule 12 (let_asig -> LET var_tipo .)


state 25

    (9) other_operators -> VARIABLE oper_asig . expresion
    (23) expresion -> . STRING
    (24) expresion -> . U8

    STRING          shift and go to state 38
    U8              shift and go to state 39

    expresion                      shift and go to state 45

state 26

    (34) hashset_insert -> VARIABLE DOT . INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (35) hashset_union -> VARIABLE DOT . UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE

    INSERT_HASH     shift and go to state 46
    UNION_HASH      shift and go to state 47


state 27

    (18) oper_asig -> ASIGNAR .

    STRING          reduce using rule 18 (oper_asig -> ASIGNAR .)
    U8              reduce using rule 18 (oper_asig -> ASIGNAR .)


state 28

    (19) oper_asig -> PLUSEQ .

    STRING          reduce using rule 19 (oper_asig -> PLUSEQ .)
    U8              reduce using rule 19 (oper_asig -> PLUSEQ .)


state 29

    (20) oper_asig -> MINUSEQ .

    STRING          reduce using rule 20 (oper_asig -> MINUSEQ .)
    U8              reduce using rule 20 (oper_asig -> MINUSEQ .)


state 30

    (21) oper_asig -> STAREQ .

    STRING          reduce using rule 21 (oper_asig -> STAREQ .)
    U8              reduce using rule 21 (oper_asig -> STAREQ .)


state 31

    (22) oper_asig -> SLASHEQ .

    STRING          reduce using rule 22 (oper_asig -> SLASHEQ .)
    U8              reduce using rule 22 (oper_asig -> SLASHEQ .)


state 32

    (37) conditional -> if_type validations . LLAVEIZ rust LLAVEDER

    LLAVEIZ         shift and go to state 48


state 33

    (41) validations -> comparison .
    (42) validations -> comparison . ANDAND validations
    (43) validations -> comparison . OROR validations

    LLAVEIZ         reduce using rule 41 (validations -> comparison .)
    ANDAND          shift and go to state 49
    OROR            shift and go to state 50


state 34

    (44) comparison -> VARIABLE . GREATER VARIABLE

    GREATER         shift and go to state 51


state 35

    (39) if_type -> ELSE IF .

    VARIABLE        reduce using rule 39 (if_type -> ELSE IF .)


state 36

    (7) asignacion -> declarador ASIGNAR expresion . ENDLINE

    ENDLINE         shift and go to state 52


state 37

    (36) conditional_asigned -> declarador ASIGNAR conditional . ENDLINE

    ENDLINE         shift and go to state 53


state 38

    (23) expresion -> STRING .

    ENDLINE         reduce using rule 23 (expresion -> STRING .)
    COMMA           reduce using rule 23 (expresion -> STRING .)
    RPAREN          reduce using rule 23 (expresion -> STRING .)


state 39

    (24) expresion -> U8 .

    ENDLINE         reduce using rule 24 (expresion -> U8 .)
    COMMA           reduce using rule 24 (expresion -> U8 .)
    RPAREN          reduce using rule 24 (expresion -> U8 .)


state 40

    (25) prints -> PRINTS LPAREN print_expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 54


state 41

    (26) print_expresion -> STRING .
    (27) print_expresion -> STRING . COMMA print_args

    RPAREN          reduce using rule 26 (print_expresion -> STRING .)
    COMMA           shift and go to state 55


state 42

    (31) hashset -> LET MUT VARIABLE . ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (14) var_tipo -> VARIABLE .
    (15) var_tipo -> VARIABLE . ASIGNATION_TYPE tipos

  ! shift/reduce conflict for ASIGNAR resolved as shift
    ASIGNAR         shift and go to state 56
    ASIGNATION_TYPE shift and go to state 44

  ! ASIGNAR         [ reduce using rule 14 (var_tipo -> VARIABLE .) ]


state 43

    (13) let_asig -> LET MUT var_tipo .

    ASIGNAR         reduce using rule 13 (let_asig -> LET MUT var_tipo .)


state 44

    (15) var_tipo -> VARIABLE ASIGNATION_TYPE . tipos
    (16) tipos -> . DATATYPES
    (17) tipos -> . NUMDATATYPES

    DATATYPES       shift and go to state 58
    NUMDATATYPES    shift and go to state 59

    tipos                          shift and go to state 57

state 45

    (9) other_operators -> VARIABLE oper_asig expresion .

    ENDLINE         reduce using rule 9 (other_operators -> VARIABLE oper_asig expresion .)


state 46

    (34) hashset_insert -> VARIABLE DOT INSERT_HASH . LPAREN expresion RPAREN ENDLINE

    LPAREN          shift and go to state 60


state 47

    (35) hashset_union -> VARIABLE DOT UNION_HASH . LPAREN AND VARIABLE RPAREN ENDLINE

    LPAREN          shift and go to state 61


state 48

    (37) conditional -> if_type validations LLAVEIZ . rust LLAVEDER
    (1) rust -> . asignacion
    (2) rust -> . prints
    (3) rust -> . hashset
    (4) rust -> . hashfunc
    (5) rust -> . conditional
    (6) rust -> . conditional_asigned
    (7) asignacion -> . declarador ASIGNAR expresion ENDLINE
    (8) asignacion -> . other_operators ENDLINE
    (25) prints -> . PRINTS LPAREN print_expresion RPAREN ENDLINE
    (31) hashset -> . LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE
    (32) hashfunc -> . hashset_insert
    (33) hashfunc -> . hashset_union
    (37) conditional -> . if_type validations LLAVEIZ rust LLAVEDER
    (36) conditional_asigned -> . declarador ASIGNAR conditional ENDLINE
    (10) declarador -> . VARIABLE
    (11) declarador -> . let_asig
    (9) other_operators -> . VARIABLE oper_asig expresion
    (34) hashset_insert -> . VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE
    (35) hashset_union -> . VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE
    (38) if_type -> . IF
    (39) if_type -> . ELSE IF
    (40) if_type -> . ELSE
    (12) let_asig -> . LET var_tipo
    (13) let_asig -> . LET MUT var_tipo

    PRINTS          shift and go to state 10
    LET             shift and go to state 11
    VARIABLE        shift and go to state 12
    IF              shift and go to state 17
    ELSE            shift and go to state 18

    if_type                        shift and go to state 15
    rust                           shift and go to state 62
    asignacion                     shift and go to state 2
    prints                         shift and go to state 3
    hashset                        shift and go to state 4
    hashfunc                       shift and go to state 5
    conditional                    shift and go to state 6
    conditional_asigned            shift and go to state 7
    declarador                     shift and go to state 8
    other_operators                shift and go to state 9
    hashset_insert                 shift and go to state 13
    hashset_union                  shift and go to state 14
    let_asig                       shift and go to state 16

state 49

    (42) validations -> comparison ANDAND . validations
    (41) validations -> . comparison
    (42) validations -> . comparison ANDAND validations
    (43) validations -> . comparison OROR validations
    (44) comparison -> . VARIABLE GREATER VARIABLE

    VARIABLE        shift and go to state 34

    comparison                     shift and go to state 33
    validations                    shift and go to state 63

state 50

    (43) validations -> comparison OROR . validations
    (41) validations -> . comparison
    (42) validations -> . comparison ANDAND validations
    (43) validations -> . comparison OROR validations
    (44) comparison -> . VARIABLE GREATER VARIABLE

    VARIABLE        shift and go to state 34

    comparison                     shift and go to state 33
    validations                    shift and go to state 64

state 51

    (44) comparison -> VARIABLE GREATER . VARIABLE

    VARIABLE        shift and go to state 65


state 52

    (7) asignacion -> declarador ASIGNAR expresion ENDLINE .

    $end            reduce using rule 7 (asignacion -> declarador ASIGNAR expresion ENDLINE .)
    LLAVEDER        reduce using rule 7 (asignacion -> declarador ASIGNAR expresion ENDLINE .)


state 53

    (36) conditional_asigned -> declarador ASIGNAR conditional ENDLINE .

    $end            reduce using rule 36 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)
    LLAVEDER        reduce using rule 36 (conditional_asigned -> declarador ASIGNAR conditional ENDLINE .)


state 54

    (25) prints -> PRINTS LPAREN print_expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 66


state 55

    (27) print_expresion -> STRING COMMA . print_args
    (28) print_args -> . print_datos COMMA print_args
    (29) print_args -> . print_datos
    (30) print_datos -> . expresion
    (23) expresion -> . STRING
    (24) expresion -> . U8

    STRING          shift and go to state 38
    U8              shift and go to state 39

    print_args                     shift and go to state 67
    print_datos                    shift and go to state 68
    expresion                      shift and go to state 69

state 56

    (31) hashset -> LET MUT VARIABLE ASIGNAR . HASHSET PATHSEP NEWFUNC ENDLINE

    HASHSET         shift and go to state 70


state 57

    (15) var_tipo -> VARIABLE ASIGNATION_TYPE tipos .

    ASIGNAR         reduce using rule 15 (var_tipo -> VARIABLE ASIGNATION_TYPE tipos .)


state 58

    (16) tipos -> DATATYPES .

    ASIGNAR         reduce using rule 16 (tipos -> DATATYPES .)


state 59

    (17) tipos -> NUMDATATYPES .

    ASIGNAR         reduce using rule 17 (tipos -> NUMDATATYPES .)


state 60

    (34) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN . expresion RPAREN ENDLINE
    (23) expresion -> . STRING
    (24) expresion -> . U8

    STRING          shift and go to state 38
    U8              shift and go to state 39

    expresion                      shift and go to state 71

state 61

    (35) hashset_union -> VARIABLE DOT UNION_HASH LPAREN . AND VARIABLE RPAREN ENDLINE

    AND             shift and go to state 72


state 62

    (37) conditional -> if_type validations LLAVEIZ rust . LLAVEDER

    LLAVEDER        shift and go to state 73


state 63

    (42) validations -> comparison ANDAND validations .

    LLAVEIZ         reduce using rule 42 (validations -> comparison ANDAND validations .)


state 64

    (43) validations -> comparison OROR validations .

    LLAVEIZ         reduce using rule 43 (validations -> comparison OROR validations .)


state 65

    (44) comparison -> VARIABLE GREATER VARIABLE .

    ANDAND          reduce using rule 44 (comparison -> VARIABLE GREATER VARIABLE .)
    OROR            reduce using rule 44 (comparison -> VARIABLE GREATER VARIABLE .)
    LLAVEIZ         reduce using rule 44 (comparison -> VARIABLE GREATER VARIABLE .)


state 66

    (25) prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .

    $end            reduce using rule 25 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 25 (prints -> PRINTS LPAREN print_expresion RPAREN ENDLINE .)


state 67

    (27) print_expresion -> STRING COMMA print_args .

    RPAREN          reduce using rule 27 (print_expresion -> STRING COMMA print_args .)


state 68

    (28) print_args -> print_datos . COMMA print_args
    (29) print_args -> print_datos .

    COMMA           shift and go to state 74
    RPAREN          reduce using rule 29 (print_args -> print_datos .)


state 69

    (30) print_datos -> expresion .

    COMMA           reduce using rule 30 (print_datos -> expresion .)
    RPAREN          reduce using rule 30 (print_datos -> expresion .)


state 70

    (31) hashset -> LET MUT VARIABLE ASIGNAR HASHSET . PATHSEP NEWFUNC ENDLINE

    PATHSEP         shift and go to state 75


state 71

    (34) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion . RPAREN ENDLINE

    RPAREN          shift and go to state 76


state 72

    (35) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND . VARIABLE RPAREN ENDLINE

    VARIABLE        shift and go to state 77


state 73

    (37) conditional -> if_type validations LLAVEIZ rust LLAVEDER .

    $end            reduce using rule 37 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    ENDLINE         reduce using rule 37 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)
    LLAVEDER        reduce using rule 37 (conditional -> if_type validations LLAVEIZ rust LLAVEDER .)


state 74

    (28) print_args -> print_datos COMMA . print_args
    (28) print_args -> . print_datos COMMA print_args
    (29) print_args -> . print_datos
    (30) print_datos -> . expresion
    (23) expresion -> . STRING
    (24) expresion -> . U8

    STRING          shift and go to state 38
    U8              shift and go to state 39

    print_datos                    shift and go to state 68
    print_args                     shift and go to state 78
    expresion                      shift and go to state 69

state 75

    (31) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP . NEWFUNC ENDLINE

    NEWFUNC         shift and go to state 79


state 76

    (34) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN . ENDLINE

    ENDLINE         shift and go to state 80


state 77

    (35) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE . RPAREN ENDLINE

    RPAREN          shift and go to state 81


state 78

    (28) print_args -> print_datos COMMA print_args .

    RPAREN          reduce using rule 28 (print_args -> print_datos COMMA print_args .)


state 79

    (31) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC . ENDLINE

    ENDLINE         shift and go to state 82


state 80

    (34) hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .

    $end            reduce using rule 34 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 34 (hashset_insert -> VARIABLE DOT INSERT_HASH LPAREN expresion RPAREN ENDLINE .)


state 81

    (35) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN . ENDLINE

    ENDLINE         shift and go to state 83


state 82

    (31) hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .

    $end            reduce using rule 31 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)
    LLAVEDER        reduce using rule 31 (hashset -> LET MUT VARIABLE ASIGNAR HASHSET PATHSEP NEWFUNC ENDLINE .)


state 83

    (35) hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .

    $end            reduce using rule 35 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)
    LLAVEDER        reduce using rule 35 (hashset_union -> VARIABLE DOT UNION_HASH LPAREN AND VARIABLE RPAREN ENDLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGNAR in state 12 resolved as shift
WARNING: shift/reduce conflict for ASIGNAR in state 42 resolved as shift
